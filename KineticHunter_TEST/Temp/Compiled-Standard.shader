// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Standard" {
Properties {
 _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
 _MainTex ("Albedo", 2D) = "white" { }
 _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
 _Glossiness ("Smoothness", Range(0.000000,1.000000)) = 0.500000
 _GlossMapScale ("Smoothness Scale", Range(0.000000,1.000000)) = 1.000000
[Enum(Metallic Alpha,0,Albedo Alpha,1)]  _SmoothnessTextureChannel ("Smoothness texture channel", Float) = 0.000000
[Gamma]  _Metallic ("Metallic", Range(0.000000,1.000000)) = 0.000000
 _MetallicGlossMap ("Metallic", 2D) = "white" { }
[ToggleOff]  _SpecularHighlights ("Specular Highlights", Float) = 1.000000
[ToggleOff]  _GlossyReflections ("Glossy Reflections", Float) = 1.000000
 _BumpScale ("Scale", Float) = 1.000000
 _BumpMap ("Normal Map", 2D) = "bump" { }
 _Parallax ("Height Scale", Range(0.005000,0.080000)) = 0.020000
 _ParallaxMap ("Height Map", 2D) = "black" { }
 _OcclusionStrength ("Strength", Range(0.000000,1.000000)) = 1.000000
 _OcclusionMap ("Occlusion", 2D) = "white" { }
 _EmissionColor ("Color", Color) = (0.000000,0.000000,0.000000,1.000000)
 _EmissionMap ("Emission", 2D) = "white" { }
 _DetailMask ("Detail Mask", 2D) = "white" { }
 _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
 _DetailNormalMapScale ("Scale", Float) = 1.000000
 _DetailNormalMap ("Normal Map", 2D) = "bump" { }
[Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0.000000
[HideInInspector]  _Mode ("__mode", Float) = 0.000000
[HideInInspector]  _SrcBlend ("__src", Float) = 1.000000
[HideInInspector]  _DstBlend ("__dst", Float) = 0.000000
[HideInInspector]  _ZWrite ("__zw", Float) = 1.000000
}
SubShader { 
 LOD 300
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }


 // Stats for Vertex shader:
 //         d3d9: 58 avg math (40..76)
 //        d3d11: 42 avg math (29..55)
 // Stats for Fragment shader:
 //         d3d9: 163 avg math (157..169), 6 avg texture (6..7), 14 branch
 //        d3d11: 172 avg math (163..182), 6 avg texture (6..7), 8 branch
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL 
-- Vertex shader for "d3d9":
// Stats: 40 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 14
Vector4 unity_SHBg at 13
Vector4 unity_SHBr at 12
Vector4 unity_SHC at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   unity_SHBr           c12      1
//   unity_SHBg           c13      1
//   unity_SHBb           c14      1
//   unity_SHC            c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c12, r1
    dp4 r2.y, c13, r1
    dp4 r2.z, c14, r1
    mad o6.xyz, c15, r0.z, r2
    mov r0.w, c19.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c19.y
    mov o7.xy, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 41 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 158 math, 6 textures, 14 branches
Vector4 _Color at 13
Float _Glossiness at 15
Vector4 _LightColor0 at 12
Float _Metallic at 14
Float _OcclusionStrength at 16
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_SHAb at 3
Vector4 unity_SHAg at 2
Vector4 unity_SHAr at 1
Vector4 unity_SpecCube0_BoxMax at 4
Vector4 unity_SpecCube0_BoxMin at 5
Vector4 unity_SpecCube0_HDR at 7
Vector4 unity_SpecCube0_ProbePosition at 6
Vector4 unity_SpecCube1_BoxMax at 8
Vector4 unity_SpecCube1_BoxMin at 9
Vector4 unity_SpecCube1_HDR at 11
Vector4 unity_SpecCube1_ProbePosition at 10

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   _WorldSpaceLightPos0          c0       1
//   unity_SHAr                    c1       1
//   unity_SHAg                    c2       1
//   unity_SHAb                    c3       1
//   unity_SpecCube0_BoxMax        c4       1
//   unity_SpecCube0_BoxMin        c5       1
//   unity_SpecCube0_ProbePosition c6       1
//   unity_SpecCube0_HDR           c7       1
//   unity_SpecCube1_BoxMax        c8       1
//   unity_SpecCube1_BoxMin        c9       1
//   unity_SpecCube1_ProbePosition c10      1
//   unity_SpecCube1_HDR           c11      1
//   _LightColor0                  c12      1
//   _Color                        c13      1
//   _Metallic                     c14      1
//   _Glossiness                   c15      1
//   _OcclusionStrength            c16      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//

    ps_3_0
    def c17, -0.220916301, 0.220916301, 0.779083729, 1
    def c18, 0, 0.416666657, 1.05499995, -0.0549999997
    def c19, 0.699999988, 1.70000005, 6, 0.999989986
    def c20, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c21, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c22, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5_pp v5.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c13
    mov r2, c17
    mad_pp r0.xyz, c13, r0, r2.x
    mad_pp r0.xyz, c14.x, r0, r2.y
    mad_pp r0.w, c14.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r3.xyz, v4
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r2.xyz, r1.w, v1
    texld_pp r4, v0, s3
    add_pp r4.x, r2.w, -c16.x
    mad_pp r4.x, r4.y, c16.x, r4.x
    add_pp r4.y, r2.w, -c15.x
    dp3_pp r4.z, r2, r3
    add_pp r4.z, r4.z, r4.z
    mad_pp r5.xyz, r3, -r4.z, r2
    mov r3.w, c17.w
    dp4_pp r6.x, c1, r3
    dp4_pp r6.y, c2, r3
    dp4_pp r6.z, c3, r3
    add_pp r6.xyz, r6, v5
    max_pp r7.xyz, r6, c18.x
    log_pp r6.x, r7.x
    log_pp r6.y, r7.y
    log_pp r6.z, r7.z
    mul_pp r6.xyz, r6, c18.y
    exp_pp r7.x, r6.x
    exp_pp r7.y, r6.y
    exp_pp r7.z, r6.z
    mad_pp r6.xyz, r7, c18.z, c18.w
    max_pp r7.xyz, r6, c18.x
    mov r6.x, c18.x
    if_lt -c6.w, r6.x
      nrm_pp r8.xyz, r5
      mov_pp r9.x, v2.w
      mov_pp r9.y, v3.w
      mov_pp r9.z, v4.w
      add r6.yzw, -r9.xxyz, c4.xxyz
      rcp r10.x, r8.x
      rcp r10.y, r8.y
      rcp r10.z, r8.z
      mul_pp r6.yzw, r6, r10.xxyz
      add r11.xyz, -r9, c5
      mul_pp r10.xyz, r10, r11
      cmp_pp r6.yzw, -r8.xxyz, r10.xxyz, r6
      min_pp r3.w, r6.z, r6.y
      min_pp r4.z, r6.w, r3.w
      add r6.yzw, r9.xxyz, -c6.xxyz
      mad_pp r8.xyz, r8, r4.z, r6.yzww
    else
      mov_pp r8.xyz, r5
    endif
    mad_pp r3.w, r4.y, -c19.x, c19.y
    mul_pp r3.w, r3.w, r4.y
    mul_pp r8.w, r3.w, c19.z
    texldl_pp r9, r8, s0
    add_pp r3.w, r9.w, -c17.w
    mad_pp r3.w, c7.w, r3.w, r2.w
    mul_pp r3.w, r3.w, c7.x
    mul_pp r6.yzw, r9.xxyz, r3.w
    mov r4.w, c5.w
    if_lt r4.w, c19.w
      if_lt -c10.w, r6.x
        nrm_pp r10.xyz, r5
        mov_pp r11.x, v2.w
        mov_pp r11.y, v3.w
        mov_pp r11.z, v4.w
        add r12.xyz, -r11, c8
        rcp r13.x, r10.x
        rcp r13.y, r10.y
        rcp r13.z, r10.z
        mul_pp r12.xyz, r12, r13
        add r14.xyz, -r11, c9
        mul_pp r13.xyz, r13, r14
        cmp_pp r12.xyz, -r10, r13, r12
        min_pp r4.z, r12.y, r12.x
        min_pp r5.w, r12.z, r4.z
        add r11.xyz, r11, -c10
        mad_pp r8.xyz, r10, r5.w, r11
      else
        mov_pp r8.xyz, r5
      endif
      texldl_pp r5, r8, s1
      add_pp r4.z, r5.w, -c17.w
      mad_pp r2.w, c11.w, r4.z, r2.w
      mul_pp r2.w, r2.w, c11.x
      mul_pp r5.xyz, r5, r2.w
      mad r8.xyz, r3.w, r9, -r5
      mad_pp r6.yzw, c5.w, r8.xxyz, r5.xxyz
    endif
    mul_pp r5.xyz, r4.x, r6.yzww
    mad_pp r6.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r6, r6
    add r2.w, -r1.w, c20.x
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c20.y, r1.w
    mul_pp r6.xyz, r1.w, r6
    dp3_pp r1.w, r3, -r2
    dp3_sat_pp r2.x, r3, c0
    dp3_sat_pp r2.y, r3, r6
    dp3_sat_pp r2.z, c0, r6
    mul_pp r2.w, r2.z, r2.z
    dp2add_pp r2.w, r2.w, r4.y, c20.z
    add_pp r3.x, -r2.x, c17.w
    mul_pp r3.y, r3.x, r3.x
    mul_pp r3.y, r3.y, r3.y
    mul_pp r3.x, r3.x, r3.y
    mad_pp r3.x, r2.w, r3.x, c17.w
    add_pp r3.y, -r1_abs.w, c17.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.w, r2.w, r3.y, c17.w
    mul_pp r2.w, r2.w, r3.x
    mul_pp r2.w, r2.x, r2.w
    mul_pp r3.x, r4.y, r4.y
    mad_pp r3.z, r4.y, -r4.y, c17.w
    mad_pp r3.w, r1_abs.w, r3.z, r3.x
    mad_pp r3.z, r2.x, r3.z, r3.x
    mul_pp r1.w, r1_abs.w, r3.z
    mad r1.w, r2.x, r3.w, r1.w
    add r1.w, r1.w, c20.w
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, -c20.z
    mul_pp r3.z, r3.x, r3.x
    mad_pp r3.w, r2.y, r3.z, -r2.y
    mad_pp r2.y, r3.w, r2.y, c17.w
    mul r3.z, r3.z, c21.x
    mad r2.y, r2.y, r2.y, c21.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, r3.z
    mul r1.w, r1.w, r2.y
    mul_pp r2.y, r1.w, c21.z
    mad r1.w, r1.w, -c21.z, c21.w
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r1.w, r1.w, c22.x, r2.y
    mul_pp r1.w, r2.x, r1.w
    mul_pp r2.x, r3.x, r4.y
    mad_pp r2.x, r2.x, -c22.y, c22.z
    dp3_pp r2.y, r0, r0
    cmp r2.y, -r2.y, c22.w, c22.z
    mul_pp r1.w, r1.w, r2.y
    add_pp r0.w, -r0.w, c17.w
    add_sat_pp r0.w, r0.w, c15.x
    mul_pp r3.xzw, r2.w, c12.xyyz
    mad_pp r3.xzw, r7.xyyz, r4.x, r3
    mul_pp r4.xyz, r1.w, c12
    add_pp r1.w, -r2.z, c17.w
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.w, r1.w, r2.y
    lrp_pp r2.yzw, r1.w, c17.w, r0.xxyz
    mul_pp r2.yzw, r2, r4.xxyz
    mad_pp r1.xyz, r1, r3.xzww, r2.yzww
    mul_pp r2.xyz, r5, r2.x
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp oC0.xyz, r2, r4, r1
    mov_pp oC0.w, c17.w

// approximately 176 instruction slots used (6 texture, 170 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: mov o7.xy, l(0,0,0,0)
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 164 math, 15 temp registers, 6 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: eq r3.w, cb3[0].x, l(1.000000)
  13: if_nz r3.w
  14:   eq r4.x, cb3[0].y, l(1.000000)
  15:   mul r4.yzw, v4.wwww, cb3[2].xxyz
  16:   mad r4.yzw, cb3[1].xxyz, v3.wwww, r4.yyzw
  17:   mad r4.yzw, cb3[3].xxyz, v5.wwww, r4.yyzw
  18:   add r4.yzw, r4.yyzw, cb3[4].xxyz
  19:   mov r5.y, v3.w
  20:   mov r5.z, v4.w
  21:   mov r5.w, v5.w
  22:   movc r4.xyz, r4.xxxx, r4.yzwy, r5.yzwy
  23:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  24:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  25:   mad r4.y, r4.y, l(0.250000), l(0.750000)
  26:   mad r5.x, cb3[0].z, l(0.500000), l(0.750000)
  27:   max r4.x, r4.y, r5.x
  28:   sample r4.xyzw, r4.xzwx, t4.xyzw, s1
  29: else 
  30:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r4.x, r4.xyzw, cb1[45].xyzw
  33: sample r5.xyzw, v1.xyxx, t1.xyzw, s3
  34: add r4.y, -cb0[9].y, l(1.000000)
  35: mad r4.y, r5.y, cb0[9].y, r4.y
  36: add r4.z, -cb0[8].w, l(1.000000)
  37: dp3 r4.w, r3.xyzx, r2.xyzx
  38: add r4.w, r4.w, r4.w
  39: mad r5.xyz, r2.xyzx, -r4.wwww, r3.xyzx
  40: mul r6.xyz, r4.xxxx, cb0[2].xyzx
  41: if_nz r3.w
  42:   eq r3.w, cb3[0].y, l(1.000000)
  43:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  44:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  45:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  46:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  47:   mov r8.y, v3.w
  48:   mov r8.z, v4.w
  49:   mov r8.w, v5.w
  50:   movc r7.xyz, r3.wwww, r7.xyzx, r8.yzwy
  51:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  52:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  53:   mul r3.w, r7.y, l(0.250000)
  54:   mul r4.x, cb3[0].z, l(0.500000)
  55:   mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
  56:   max r3.w, r3.w, r4.x
  57:   min r7.x, r4.w, r3.w
  58:   sample r8.xyzw, r7.xzwx, t4.xyzw, s1
  59:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  60:   sample r9.xyzw, r9.xyzx, t4.xyzw, s1
  61:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  62:   sample r7.xyzw, r7.xyzx, t4.xyzw, s1
  63:   mov r2.w, l(1.000000)
  64:   dp4 r8.x, r8.xyzw, r2.xyzw
  65:   dp4 r8.y, r9.xyzw, r2.xyzw
  66:   dp4 r8.z, r7.xyzw, r2.xyzw
  67: else 
  68:   mov r2.w, l(1.000000)
  69:   dp4 r8.x, cb1[38].xyzw, r2.xyzw
  70:   dp4 r8.y, cb1[39].xyzw, r2.xyzw
  71:   dp4 r8.z, cb1[40].xyzw, r2.xyzw
  72: endif 
  73: add r7.xyz, r8.xyzx, v6.xyzx
  74: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: log r7.xyz, r7.xyzx
  76: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  77: exp r7.xyz, r7.xyzx
  78: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  79: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  80: lt r2.w, l(0.000000), cb2[2].w
  81: if_nz r2.w
  82:   dp3 r2.w, r5.xyzx, r5.xyzx
  83:   rsq r2.w, r2.w
  84:   mul r8.xyz, r2.wwww, r5.xyzx
  85:   mov r9.x, v3.w
  86:   mov r9.y, v4.w
  87:   mov r9.z, v5.w
  88:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
  89:   div r10.xyz, r10.xyzx, r8.xyzx
  90:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
  91:   div r11.xyz, r11.xyzx, r8.xyzx
  92:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  93:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  94:   min r2.w, r10.y, r10.x
  95:   min r2.w, r10.z, r2.w
  96:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
  97:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
  98: else 
  99:   mov r8.xyz, r5.xyzx
 100: endif 
 101: mad r2.w, -r4.z, l(0.700000), l(1.700000)
 102: mul r2.w, r2.w, r4.z
 103: mul r2.w, r2.w, l(6.000000)
 104: sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r2.w
 105: add r3.w, r8.w, l(-1.000000)
 106: mad r3.w, cb2[3].w, r3.w, l(1.000000)
 107: mul r3.w, r3.w, cb2[3].x
 108: mul r9.xyz, r8.xyzx, r3.wwww
 109: lt r4.x, cb2[1].w, l(0.999990)
 110: if_nz r4.x
 111:   lt r4.x, l(0.000000), cb2[6].w
 112:   if_nz r4.x
 113:     dp3 r4.x, r5.xyzx, r5.xyzx
 114:     rsq r4.x, r4.x
 115:     mul r10.xyz, r4.xxxx, r5.xyzx
 116:     mov r11.x, v3.w
 117:     mov r11.y, v4.w
 118:     mov r11.z, v5.w
 119:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 120:     div r12.xyz, r12.xyzx, r10.xyzx
 121:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 122:     div r13.xyz, r13.xyzx, r10.xyzx
 123:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 124:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 125:     min r4.x, r12.y, r12.x
 126:     min r4.x, r12.z, r4.x
 127:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 128:     mad r5.xyz, r10.xyzx, r4.xxxx, r11.xyzx
 129:   endif 
 130:   sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, r2.w
 131:   add r2.w, r5.w, l(-1.000000)
 132:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 133:   mul r2.w, r2.w, cb2[7].x
 134:   mul r5.xyz, r5.xyzx, r2.wwww
 135:   mad r8.xyz, r3.wwww, r8.xyzx, -r5.xyzx
 136:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 137: endif 
 138: mul r5.xyz, r4.yyyy, r9.xyzx
 139: mad r8.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
 140: dp3 r1.w, r8.xyzx, r8.xyzx
 141: max r1.w, r1.w, l(0.001000)
 142: rsq r1.w, r1.w
 143: mul r8.xyz, r1.wwww, r8.xyzx
 144: dp3 r1.w, r2.xyzx, -r3.xyzx
 145: dp3_sat r2.w, r2.xyzx, cb1[0].xyzx
 146: dp3_sat r2.x, r2.xyzx, r8.xyzx
 147: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 148: mul r2.z, r2.y, r2.y
 149: dp2 r2.z, r2.zzzz, r4.zzzz
 150: add r2.z, r2.z, l(-0.500000)
 151: add r3.x, -r2.w, l(1.000000)
 152: mul r3.y, r3.x, r3.x
 153: mul r3.y, r3.y, r3.y
 154: mul r3.x, r3.x, r3.y
 155: mad r3.x, r2.z, r3.x, l(1.000000)
 156: add r3.y, -|r1.w|, l(1.000000)
 157: mul r3.z, r3.y, r3.y
 158: mul r3.z, r3.z, r3.z
 159: mul r3.y, r3.y, r3.z
 160: mad r2.z, r2.z, r3.y, l(1.000000)
 161: mul r2.z, r2.z, r3.x
 162: mul r2.z, r2.w, r2.z
 163: mul r3.x, r4.z, r4.z
 164: mad r3.z, -r4.z, r4.z, l(1.000000)
 165: mad r3.w, |r1.w|, r3.z, r3.x
 166: mad r3.z, r2.w, r3.z, r3.x
 167: mul r1.w, |r1.w|, r3.z
 168: mad r1.w, r2.w, r3.w, r1.w
 169: add r1.w, r1.w, l(0.000010)
 170: div r1.w, l(0.500000), r1.w
 171: mul r3.z, r3.x, r3.x
 172: mad r3.w, r2.x, r3.z, -r2.x
 173: mad r2.x, r3.w, r2.x, l(1.000000)
 174: mul r3.z, r3.z, l(0.318310)
 175: mad r2.x, r2.x, r2.x, l(0.000000)
 176: div r2.x, r3.z, r2.x
 177: mul r1.w, r1.w, r2.x
 178: mul r1.w, r1.w, l(3.141593)
 179: max r1.w, r1.w, l(0.000100)
 180: sqrt r1.w, r1.w
 181: mul r1.w, r2.w, r1.w
 182: mul r2.x, r3.x, r4.z
 183: mad r2.x, -r2.x, l(0.280000), l(1.000000)
 184: dp3 r2.w, r0.xyzx, r0.xyzx
 185: ne r2.w, r2.w, l(0.000000)
 186: and r2.w, r2.w, l(0x3f800000)
 187: mul r1.w, r1.w, r2.w
 188: add r0.w, -r0.w, cb0[8].w
 189: add_sat r0.w, r0.w, l(1.000000)
 190: mul r3.xzw, r2.zzzz, r6.xxyz
 191: mad r3.xzw, r7.xxyz, r4.yyyy, r3.xxzw
 192: mul r4.xyz, r6.xyzx, r1.wwww
 193: add r1.w, -r2.y, l(1.000000)
 194: mul r2.y, r1.w, r1.w
 195: mul r2.y, r2.y, r2.y
 196: mul r1.w, r1.w, r2.y
 197: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 198: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 199: mul r2.yzw, r2.yyzw, r4.xxyz
 200: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 201: mul r2.xyz, r5.xyzx, r2.xxxx
 202: add r3.xzw, -r0.xxyz, r0.wwww
 203: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 204: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 205: mov o0.w, l(1.000000)
 206: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 45 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _MainTex_ST at 17
Vector4 _ProjectionParams at 12
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 15
Vector4 unity_SHBg at 14
Vector4 unity_SHBr at 13
Vector4 unity_SHC at 16

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   unity_SHBr           c13      1
//   unity_SHBg           c14      1
//   unity_SHBb           c15      1
//   unity_SHC            c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mad r1, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c20.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.z, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mul r3.w, r0.z, c20.z
    add o7.xy, r3.z, r3.xwzw
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c13, r1
    dp4 r2.y, c14, r1
    dp4 r2.z, c15, r1
    mad o6.xyz, c16, r0.z, r2
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c20.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 46 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 166 math, 7 textures, 14 branches
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 19
Float _GlossMapScale at 21
Vector4 _LightColor0 at 18
Vector4 _LightShadowData at 8
Float _Metallic at 20
Float _OcclusionStrength at 22
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4
Vector4 unity_SHAb at 7
Vector4 unity_SHAg at 6
Vector4 unity_SHAr at 5
Vector4 unity_ShadowFadeCenterAndType at 9
Vector4 unity_SpecCube0_BoxMax at 10
Vector4 unity_SpecCube0_BoxMin at 11
Vector4 unity_SpecCube0_HDR at 13
Vector4 unity_SpecCube0_ProbePosition at 12
Vector4 unity_SpecCube1_BoxMax at 14
Vector4 unity_SpecCube1_BoxMin at 15
Vector4 unity_SpecCube1_HDR at 17
Vector4 unity_SpecCube1_ProbePosition at 16

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_ShadowMapTexture" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_ShadowFadeCenterAndType;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _WorldSpaceLightPos0          c4       1
//   unity_SHAr                    c5       1
//   unity_SHAg                    c6       1
//   unity_SHAb                    c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_SpecCube0_BoxMax        c10      1
//   unity_SpecCube0_BoxMin        c11      1
//   unity_SpecCube0_ProbePosition c12      1
//   unity_SpecCube0_HDR           c13      1
//   unity_SpecCube1_BoxMax        c14      1
//   unity_SpecCube1_BoxMin        c15      1
//   unity_SpecCube1_ProbePosition c16      1
//   unity_SpecCube1_HDR           c17      1
//   _LightColor0                  c18      1
//   _Color                        c19      1
//   _Metallic                     c20      1
//   _GlossMapScale                c21      1
//   _OcclusionStrength            c22      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//   _ShadowMapTexture             s4       1
//

    ps_3_0
    def c23, -0.220916301, 0.220916301, 0.779083729, 1
    def c24, 0, 0.416666657, 1.05499995, -0.0549999997
    def c25, 0.699999988, 1.70000005, 6, 0.999989986
    def c26, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c27, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c28, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5_pp v5.xyz
    dcl_texcoord6 v6
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c19
    mov r2, c23
    mad_pp r0.xyz, c19, r0, r2.x
    mad_pp r0.xyz, c20.x, r0, r2.y
    mad_pp r1.w, c20.x, -r2.z, r2.z
    mul_pp r1.xyz, r1.w, r1
    nrm_pp r3.xyz, v4
    dp3_pp r2.x, v1, v1
    rsq_pp r2.x, r2.x
    mul_pp r4.xyz, r2.x, v1
    mov_pp r5.x, v2.w
    mov_pp r5.y, v3.w
    mov_pp r5.z, v4.w
    add r6.xyz, -r5, c3
    dp3 r2.y, r6, c2
    add r6.xyz, r5, -c9
    dp3 r2.z, r6, r6
    rsq r2.z, r2.z
    rcp r2.z, r2.z
    lrp r4.w, c9.w, r2.z, r2.y
    mad_sat_pp r2.y, r4.w, c8.z, c8.w
    texldp_pp r6, v6, s4
    add_sat_pp r2.y, r2.y, r6.x
    texld_pp r6, v0, s3
    add_pp r2.z, r2.w, -c22.x
    mad_pp r2.z, r6.y, c22.x, r2.z
    mad_pp r4.w, r0.w, -c21.x, r2.w
    dp3_pp r5.w, r4, r3
    add_pp r5.w, r5.w, r5.w
    mad_pp r6.xyz, r3, -r5.w, r4
    mul_pp r7.xyz, r2.y, c18
    mov r3.w, c23.w
    dp4_pp r8.x, c5, r3
    dp4_pp r8.y, c6, r3
    dp4_pp r8.z, c7, r3
    add_pp r8.xyz, r8, v5
    max_pp r9.xyz, r8, c24.x
    log_pp r8.x, r9.x
    log_pp r8.y, r9.y
    log_pp r8.z, r9.z
    mul_pp r8.xyz, r8, c24.y
    exp_pp r9.x, r8.x
    exp_pp r9.y, r8.y
    exp_pp r9.z, r8.z
    mad_pp r8.xyz, r9, c24.z, c24.w
    max_pp r9.xyz, r8, c24.x
    mov r8.x, c24.x
    if_lt -c12.w, r8.x
      nrm_pp r10.xyz, r6
      add r8.yzw, -r5.xxyz, c10.xxyz
      rcp r11.x, r10.x
      rcp r11.y, r10.y
      rcp r11.z, r10.z
      mul_pp r8.yzw, r8, r11.xxyz
      add r12.xyz, -r5, c11
      mul_pp r11.xyz, r11, r12
      cmp_pp r8.yzw, -r10.xxyz, r11.xxyz, r8
      min_pp r2.y, r8.z, r8.y
      min_pp r3.w, r8.w, r2.y
      add r8.yzw, r5.xxyz, -c12.xxyz
      mad_pp r10.xyz, r10, r3.w, r8.yzww
    else
      mov_pp r10.xyz, r6
    endif
    mad_pp r2.y, r4.w, -c25.x, c25.y
    mul_pp r2.y, r2.y, r4.w
    mul_pp r10.w, r2.y, c25.z
    texldl_pp r11, r10, s0
    add_pp r2.y, r11.w, -c23.w
    mad_pp r2.y, c13.w, r2.y, r2.w
    mul_pp r2.y, r2.y, c13.x
    mul_pp r8.yzw, r11.xxyz, r2.y
    mov r3.w, c11.w
    if_lt r3.w, c25.w
      if_lt -c16.w, r8.x
        nrm_pp r12.xyz, r6
        add r13.xyz, -r5, c14
        rcp r14.x, r12.x
        rcp r14.y, r12.y
        rcp r14.z, r12.z
        mul_pp r13.xyz, r13, r14
        add r15.xyz, -r5, c15
        mul_pp r14.xyz, r14, r15
        cmp_pp r13.xyz, -r12, r14, r13
        min_pp r3.w, r13.y, r13.x
        min_pp r5.w, r13.z, r3.w
        add r5.xyz, r5, -c16
        mad_pp r10.xyz, r12, r5.w, r5
      else
        mov_pp r10.xyz, r6
      endif
      texldl_pp r5, r10, s1
      add_pp r3.w, r5.w, -c23.w
      mad_pp r2.w, c17.w, r3.w, r2.w
      mul_pp r2.w, r2.w, c17.x
      mul_pp r5.xyz, r5, r2.w
      mad r6.xyz, r2.y, r11, -r5
      mad_pp r8.yzw, c11.w, r6.xxyz, r5.xxyz
    endif
    mul_pp r5.xyz, r2.z, r8.yzww
    mad_pp r2.xyw, v1.xyzz, -r2.x, c4.xyzz
    dp3_pp r3.w, r2.xyww, r2.xyww
    add r5.w, -r3.w, c26.x
    rsq_pp r3.w, r3.w
    cmp_pp r3.w, r5.w, c26.y, r3.w
    mul_pp r2.xyw, r2, r3.w
    dp3_pp r3.w, r3, -r4
    dp3_sat_pp r4.x, r3, c4
    dp3_sat_pp r3.x, r3, r2.xyww
    dp3_sat_pp r2.x, c4, r2.xyww
    mul_pp r2.y, r2.x, r2.x
    dp2add_pp r2.y, r2.y, r4.w, c26.z
    add_pp r2.w, -r4.x, c23.w
    mul_pp r3.y, r2.w, r2.w
    mul_pp r3.y, r3.y, r3.y
    mul_pp r2.w, r2.w, r3.y
    mad_pp r2.w, r2.y, r2.w, c23.w
    add_pp r3.y, -r3_abs.w, c23.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.y, r2.y, r3.y, c23.w
    mul_pp r2.y, r2.y, r2.w
    mul_pp r2.y, r4.x, r2.y
    mul_pp r2.w, r4.w, r4.w
    mad_pp r3.z, r4.w, -r4.w, c23.w
    mad_pp r4.y, r3_abs.w, r3.z, r2.w
    mad_pp r3.z, r4.x, r3.z, r2.w
    mul_pp r3.z, r3.z, r3_abs.w
    mad r3.z, r4.x, r4.y, r3.z
    add r3.z, r3.z, c26.w
    rcp r3.z, r3.z
    mul_pp r3.z, r3.z, -c26.z
    mul_pp r3.w, r2.w, r2.w
    mad_pp r4.y, r3.x, r3.w, -r3.x
    mad_pp r3.x, r4.y, r3.x, c23.w
    mul r3.w, r3.w, c27.x
    mad r3.x, r3.x, r3.x, c27.y
    rcp r3.x, r3.x
    mul_pp r3.x, r3.x, r3.w
    mul r3.x, r3.x, r3.z
    mul_pp r3.z, r3.x, c27.z
    mad r3.x, r3.x, -c27.z, c27.w
    rsq r3.z, r3.z
    rcp_pp r3.z, r3.z
    cmp_pp r3.x, r3.x, c28.x, r3.z
    mul_pp r3.x, r4.x, r3.x
    mul_pp r2.w, r2.w, r4.w
    mad_pp r2.w, r2.w, -c28.y, c28.z
    dp3_pp r3.z, r0, r0
    cmp r3.z, -r3.z, c28.w, c28.z
    mul_pp r3.x, r3.z, r3.x
    add_pp r1.w, -r1.w, c23.w
    mad_sat_pp r0.w, r0.w, c21.x, r1.w
    mul_pp r4.xyz, r2.y, r7
    mad_pp r4.xyz, r9, r2.z, r4
    mul_pp r3.xzw, r7.xyyz, r3.x
    add_pp r1.w, -r2.x, c23.w
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.x, r2.x, r2.x
    mul_pp r1.w, r1.w, r2.x
    lrp_pp r2.xyz, r1.w, c23.w, r0
    mul_pp r2.xyz, r2, r3.xzww
    mad_pp r1.xyz, r1, r4, r2
    mul_pp r2.xyz, r5, r2.w
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp oC0.xyz, r2, r4, r1
    mov_pp oC0.w, c23.w

// approximately 184 instruction slots used (7 texture, 177 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul r1.xyz, r1.wwww, r1.xyzx
  28: mov o5.xyz, r1.xyzx
  29: mul r1.w, r1.y, r1.y
  30: mad r1.w, r1.x, r1.x, -r1.w
  31: mul r2.xyzw, r1.yzzx, r1.xyzz
  32: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  33: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  34: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  35: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  36: mov o6.w, l(0)
  37: mul r0.y, r0.y, cb1[5].x
  38: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  39: mov o7.zw, r0.zzzw
  40: add o7.xy, r1.zzzz, r1.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 174 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r3.x, v2.xyzx, v2.xyzx
  10: rsq r3.x, r3.x
  11: mul r3.yzw, r3.xxxx, v2.xxyz
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r4.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r5.x, r5.xyzx, r5.xyzx
  22: sqrt r5.x, r5.x
  23: add r5.x, -r4.w, r5.x
  24: mad r4.w, cb3[25].w, r5.x, r4.w
  25: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  26: eq r5.x, cb6[0].x, l(1.000000)
  27: if_nz r5.x
  28:   eq r5.y, cb6[0].y, l(1.000000)
  29:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  30:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  31:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  32:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  33:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  34:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  35:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  36:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  37:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r6.x, r5.z, r5.y
  39:   sample r6.xyzw, r6.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r5.y, r6.xyzw, cb2[45].xyzw
  44: div r5.zw, v7.xxxy, v7.wwww
  45: sample r6.xyzw, r5.zwzz, t1.xyzw, s4
  46: add_sat r4.w, r4.w, r6.x
  47: min r5.y, r4.w, r5.y
  48: movc r4.w, r5.x, r5.y, r4.w
  49: sample r6.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.y, -cb0[9].y, l(1.000000)
  51: mad r5.y, r6.y, cb0[9].y, r5.y
  52: mad r5.z, -r0.w, cb0[9].x, l(1.000000)
  53: dp3 r5.w, r3.yzwy, r2.xyzx
  54: add r5.w, r5.w, r5.w
  55: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  56: mul r7.xyz, r4.wwww, cb0[2].xyzx
  57: if_nz r5.x
  58:   eq r4.w, cb6[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  60:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  63:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  66:   mul r4.w, r8.y, l(0.250000)
  67:   mul r5.x, cb6[0].z, l(0.500000)
  68:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  69:   max r4.w, r4.w, r5.x
  70:   min r8.x, r5.w, r4.w
  71:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[38].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[39].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[40].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb5[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.z
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 115: add r4.w, r9.w, l(-1.000000)
 116: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 117: mul r4.w, r4.w, cb5[3].x
 118: mul r10.xyz, r9.xyzx, r4.wwww
 119: lt r5.x, cb5[1].w, l(0.999990)
 120: if_nz r5.x
 121:   lt r5.x, l(0.000000), cb5[6].w
 122:   if_nz r5.x
 123:     dp3 r5.x, r6.xyzx, r6.xyzx
 124:     rsq r5.x, r5.x
 125:     mul r11.xyz, r5.xxxx, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r5.x, r12.y, r12.x
 133:     min r5.x, r12.z, r5.x
 134:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 136:   endif 
 137:   sample_l r6.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 138:   add r2.w, r6.w, l(-1.000000)
 139:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb5[7].x
 141:   mul r4.xyz, r6.xyzx, r2.wwww
 142:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.yyyy, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 147: dp3 r2.w, r6.xyzx, r6.xyzx
 148: max r2.w, r2.w, l(0.001000)
 149: rsq r2.w, r2.w
 150: mul r6.xyz, r2.wwww, r6.xyzx
 151: dp3 r2.w, r2.xyzx, -r3.yzwy
 152: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.zzzz
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.y, -r3.x, l(1.000000)
 159: mul r3.z, r3.y, r3.y
 160: mul r3.z, r3.z, r3.z
 161: mul r3.y, r3.y, r3.z
 162: mad r3.y, r2.z, r3.y, l(1.000000)
 163: add r3.z, -|r2.w|, l(1.000000)
 164: mul r3.w, r3.z, r3.z
 165: mul r3.w, r3.w, r3.w
 166: mul r3.z, r3.z, r3.w
 167: mad r2.z, r2.z, r3.z, l(1.000000)
 168: mul r2.z, r2.z, r3.y
 169: mul r3.y, r5.z, r5.z
 170: mad r3.w, -r5.z, r5.z, l(1.000000)
 171: mad r4.w, |r2.w|, r3.w, r3.y
 172: mad r3.w, r3.x, r3.w, r3.y
 173: mul r2.w, |r2.w|, r3.w
 174: mad r2.w, r3.x, r4.w, r2.w
 175: add r2.w, r2.w, l(0.000010)
 176: div r2.w, l(0.500000), r2.w
 177: mul r3.w, r3.y, r3.y
 178: mad r4.w, r2.x, r3.w, -r2.x
 179: mad r2.x, r4.w, r2.x, l(1.000000)
 180: mul r3.w, r3.w, l(0.318310)
 181: mad r2.x, r2.x, r2.x, l(0.000000)
 182: div r2.x, r3.w, r2.x
 183: mul r2.x, r2.x, r2.w
 184: mul r2.x, r2.x, l(3.141593)
 185: max r2.x, r2.x, l(0.000100)
 186: sqrt r2.x, r2.x
 187: mul r2.xz, r3.xxxx, r2.xxzx
 188: mul r2.w, r3.y, r5.z
 189: mad r2.w, -r2.w, l(0.280000), l(1.000000)
 190: dp3 r3.x, r0.xyzx, r0.xyzx
 191: ne r3.x, r3.x, l(0.000000)
 192: and r3.x, r3.x, l(0x3f800000)
 193: mul r2.x, r2.x, r3.x
 194: mad r0.w, r0.w, cb0[9].x, -r1.w
 195: add_sat r0.w, r0.w, l(1.000000)
 196: mul r3.xyw, r2.zzzz, r7.xyxz
 197: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 198: mul r5.xyz, r7.xyzx, r2.xxxx
 199: add r1.w, -r2.y, l(1.000000)
 200: mul r2.x, r1.w, r1.w
 201: mul r2.x, r2.x, r2.x
 202: mul r1.w, r1.w, r2.x
 203: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 204: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 205: mul r2.xyz, r2.xyzx, r5.xyzx
 206: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 207: mul r2.xyz, r4.xyzx, r2.wwww
 208: add r3.xyw, -r0.xyxz, r0.wwww
 209: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 210: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 211: mov o0.w, l(1.000000)
 212: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 45 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _MainTex_ST at 17
Vector4 _ProjectionParams at 12
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 15
Vector4 unity_SHBg at 14
Vector4 unity_SHBr at 13
Vector4 unity_SHC at 16

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   unity_SHBr           c13      1
//   unity_SHBg           c14      1
//   unity_SHBb           c15      1
//   unity_SHC            c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mad r1, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c20.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.z, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mul r3.w, r0.z, c20.z
    add o7.xy, r3.z, r3.xwzw
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c13, r1
    dp4 r2.y, c14, r1
    dp4 r2.z, c15, r1
    mad o6.xyz, c16, r0.z, r2
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c20.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 46 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 166 math, 7 textures, 14 branches
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 19
Float _Glossiness at 21
Vector4 _LightColor0 at 18
Vector4 _LightShadowData at 8
Float _Metallic at 20
Float _OcclusionStrength at 22
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4
Vector4 unity_SHAb at 7
Vector4 unity_SHAg at 6
Vector4 unity_SHAr at 5
Vector4 unity_ShadowFadeCenterAndType at 9
Vector4 unity_SpecCube0_BoxMax at 10
Vector4 unity_SpecCube0_BoxMin at 11
Vector4 unity_SpecCube0_HDR at 13
Vector4 unity_SpecCube0_ProbePosition at 12
Vector4 unity_SpecCube1_BoxMax at 14
Vector4 unity_SpecCube1_BoxMin at 15
Vector4 unity_SpecCube1_HDR at 17
Vector4 unity_SpecCube1_ProbePosition at 16

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_ShadowMapTexture" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_ShadowFadeCenterAndType;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _WorldSpaceLightPos0          c4       1
//   unity_SHAr                    c5       1
//   unity_SHAg                    c6       1
//   unity_SHAb                    c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_SpecCube0_BoxMax        c10      1
//   unity_SpecCube0_BoxMin        c11      1
//   unity_SpecCube0_ProbePosition c12      1
//   unity_SpecCube0_HDR           c13      1
//   unity_SpecCube1_BoxMax        c14      1
//   unity_SpecCube1_BoxMin        c15      1
//   unity_SpecCube1_ProbePosition c16      1
//   unity_SpecCube1_HDR           c17      1
//   _LightColor0                  c18      1
//   _Color                        c19      1
//   _Metallic                     c20      1
//   _Glossiness                   c21      1
//   _OcclusionStrength            c22      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//   _ShadowMapTexture             s4       1
//

    ps_3_0
    def c23, -0.220916301, 0.220916301, 0.779083729, 1
    def c24, 0, 0.416666657, 1.05499995, -0.0549999997
    def c25, 0.699999988, 1.70000005, 6, 0.999989986
    def c26, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c27, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c28, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5_pp v5.xyz
    dcl_texcoord6 v6
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c19
    mov r2, c23
    mad_pp r0.xyz, c19, r0, r2.x
    mad_pp r0.xyz, c20.x, r0, r2.y
    mad_pp r0.w, c20.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r3.xyz, v4
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r2.xyz, r1.w, v1
    mov_pp r4.x, v2.w
    mov_pp r4.y, v3.w
    mov_pp r4.z, v4.w
    add r5.xyz, -r4, c3
    dp3 r4.w, r5, c2
    add r5.xyz, r4, -c9
    dp3 r5.x, r5, r5
    rsq r5.x, r5.x
    rcp r5.x, r5.x
    lrp r6.x, c9.w, r5.x, r4.w
    mad_sat_pp r4.w, r6.x, c8.z, c8.w
    texldp_pp r5, v6, s4
    add_sat_pp r4.w, r4.w, r5.x
    texld_pp r5, v0, s3
    add_pp r5.x, r2.w, -c22.x
    mad_pp r5.x, r5.y, c22.x, r5.x
    add_pp r5.y, r2.w, -c21.x
    dp3_pp r5.z, r2, r3
    add_pp r5.z, r5.z, r5.z
    mad_pp r6.xyz, r3, -r5.z, r2
    mul_pp r7.xyz, r4.w, c18
    mov r3.w, c23.w
    dp4_pp r8.x, c5, r3
    dp4_pp r8.y, c6, r3
    dp4_pp r8.z, c7, r3
    add_pp r8.xyz, r8, v5
    max_pp r9.xyz, r8, c24.x
    log_pp r8.x, r9.x
    log_pp r8.y, r9.y
    log_pp r8.z, r9.z
    mul_pp r8.xyz, r8, c24.y
    exp_pp r9.x, r8.x
    exp_pp r9.y, r8.y
    exp_pp r9.z, r8.z
    mad_pp r8.xyz, r9, c24.z, c24.w
    max_pp r9.xyz, r8, c24.x
    mov r8.x, c24.x
    if_lt -c12.w, r8.x
      nrm_pp r10.xyz, r6
      add r8.yzw, -r4.xxyz, c10.xxyz
      rcp r11.x, r10.x
      rcp r11.y, r10.y
      rcp r11.z, r10.z
      mul_pp r8.yzw, r8, r11.xxyz
      add r12.xyz, -r4, c11
      mul_pp r11.xyz, r11, r12
      cmp_pp r8.yzw, -r10.xxyz, r11.xxyz, r8
      min_pp r3.w, r8.z, r8.y
      min_pp r4.w, r8.w, r3.w
      add r8.yzw, r4.xxyz, -c12.xxyz
      mad_pp r10.xyz, r10, r4.w, r8.yzww
    else
      mov_pp r10.xyz, r6
    endif
    mad_pp r3.w, r5.y, -c25.x, c25.y
    mul_pp r3.w, r3.w, r5.y
    mul_pp r10.w, r3.w, c25.z
    texldl_pp r11, r10, s0
    add_pp r3.w, r11.w, -c23.w
    mad_pp r3.w, c13.w, r3.w, r2.w
    mul_pp r3.w, r3.w, c13.x
    mul_pp r8.yzw, r11.xxyz, r3.w
    mov r4.w, c11.w
    if_lt r4.w, c25.w
      if_lt -c16.w, r8.x
        nrm_pp r12.xyz, r6
        add r13.xyz, -r4, c14
        rcp r14.x, r12.x
        rcp r14.y, r12.y
        rcp r14.z, r12.z
        mul_pp r13.xyz, r13, r14
        add r15.xyz, -r4, c15
        mul_pp r14.xyz, r14, r15
        cmp_pp r13.xyz, -r12, r14, r13
        min_pp r4.w, r13.y, r13.x
        min_pp r5.z, r13.z, r4.w
        add r4.xyz, r4, -c16
        mad_pp r10.xyz, r12, r5.z, r4
      else
        mov_pp r10.xyz, r6
      endif
      texldl_pp r4, r10, s1
      add_pp r4.w, r4.w, -c23.w
      mad_pp r2.w, c17.w, r4.w, r2.w
      mul_pp r2.w, r2.w, c17.x
      mul_pp r4.xyz, r4, r2.w
      mad r6.xyz, r3.w, r11, -r4
      mad_pp r8.yzw, c11.w, r6.xxyz, r4.xxyz
    endif
    mul_pp r4.xyz, r5.x, r8.yzww
    mad_pp r6.xyz, v1, -r1.w, c4
    dp3_pp r1.w, r6, r6
    add r2.w, -r1.w, c26.x
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c26.y, r1.w
    mul_pp r6.xyz, r1.w, r6
    dp3_pp r1.w, r3, -r2
    dp3_sat_pp r2.x, r3, c4
    dp3_sat_pp r2.y, r3, r6
    dp3_sat_pp r2.z, c4, r6
    mul_pp r2.w, r2.z, r2.z
    dp2add_pp r2.w, r2.w, r5.y, c26.z
    add_pp r3.x, -r2.x, c23.w
    mul_pp r3.y, r3.x, r3.x
    mul_pp r3.y, r3.y, r3.y
    mul_pp r3.x, r3.x, r3.y
    mad_pp r3.x, r2.w, r3.x, c23.w
    add_pp r3.y, -r1_abs.w, c23.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.w, r2.w, r3.y, c23.w
    mul_pp r2.w, r2.w, r3.x
    mul_pp r2.w, r2.x, r2.w
    mul_pp r3.x, r5.y, r5.y
    mad_pp r3.z, r5.y, -r5.y, c23.w
    mad_pp r3.w, r1_abs.w, r3.z, r3.x
    mad_pp r3.z, r2.x, r3.z, r3.x
    mul_pp r1.w, r1_abs.w, r3.z
    mad r1.w, r2.x, r3.w, r1.w
    add r1.w, r1.w, c26.w
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, -c26.z
    mul_pp r3.z, r3.x, r3.x
    mad_pp r3.w, r2.y, r3.z, -r2.y
    mad_pp r2.y, r3.w, r2.y, c23.w
    mul r3.z, r3.z, c27.x
    mad r2.y, r2.y, r2.y, c27.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, r3.z
    mul r1.w, r1.w, r2.y
    mul_pp r2.y, r1.w, c27.z
    mad r1.w, r1.w, -c27.z, c27.w
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r1.w, r1.w, c28.x, r2.y
    mul_pp r1.w, r2.x, r1.w
    mul_pp r2.x, r3.x, r5.y
    mad_pp r2.x, r2.x, -c28.y, c28.z
    dp3_pp r2.y, r0, r0
    cmp r2.y, -r2.y, c28.w, c28.z
    mul_pp r1.w, r1.w, r2.y
    add_pp r0.w, -r0.w, c23.w
    add_sat_pp r0.w, r0.w, c21.x
    mul_pp r3.xzw, r2.w, r7.xyyz
    mad_pp r3.xzw, r9.xyyz, r5.x, r3
    mul_pp r5.xyz, r7, r1.w
    add_pp r1.w, -r2.z, c23.w
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.w, r1.w, r2.y
    lrp_pp r2.yzw, r1.w, c23.w, r0.xxyz
    mul_pp r2.yzw, r2, r5.xxyz
    mad_pp r1.xyz, r1, r3.xzww, r2.yzww
    mul_pp r2.xyz, r4, r2.x
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp oC0.xyz, r2, r4, r1
    mov_pp oC0.w, c23.w

// approximately 184 instruction slots used (7 texture, 177 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul r1.xyz, r1.wwww, r1.xyzx
  28: mov o5.xyz, r1.xyzx
  29: mul r1.w, r1.y, r1.y
  30: mad r1.w, r1.x, r1.x, -r1.w
  31: mul r2.xyzw, r1.yzzx, r1.xyzz
  32: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  33: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  34: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  35: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  36: mov o6.w, l(0)
  37: mul r0.y, r0.y, cb1[5].x
  38: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  39: mov o7.zw, r0.zzzw
  40: add o7.xy, r1.zzzz, r1.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 175 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r3.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r4.w, r5.xyzx, r5.xyzx
  22: sqrt r4.w, r4.w
  23: add r4.w, -r3.w, r4.w
  24: mad r3.w, cb3[25].w, r4.w, r3.w
  25: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  26: eq r4.w, cb6[0].x, l(1.000000)
  27: if_nz r4.w
  28:   eq r5.x, cb6[0].y, l(1.000000)
  29:   mul r5.yzw, v4.wwww, cb6[2].xxyz
  30:   mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
  31:   mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
  32:   add r5.yzw, r5.yyzw, cb6[4].xxyz
  33:   movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
  34:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  35:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  36:   mad r5.y, r5.y, l(0.250000), l(0.750000)
  37:   mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r5.x, r5.y, r6.x
  39:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r5.x, r5.xyzw, cb2[45].xyzw
  44: div r5.yz, v7.xxyx, v7.wwww
  45: sample r6.xyzw, r5.yzyy, t1.xyzw, s4
  46: add_sat r3.w, r3.w, r6.x
  47: min r5.x, r3.w, r5.x
  48: movc r3.w, r4.w, r5.x, r3.w
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.x, -cb0[9].y, l(1.000000)
  51: mad r5.x, r5.y, cb0[9].y, r5.x
  52: add r5.y, -cb0[8].w, l(1.000000)
  53: dp3 r5.z, r3.xyzx, r2.xyzx
  54: add r5.z, r5.z, r5.z
  55: mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
  56: mul r7.xyz, r3.wwww, cb0[2].xyzx
  57: if_nz r4.w
  58:   eq r3.w, cb6[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  60:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  63:   movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  66:   mul r3.w, r8.y, l(0.250000)
  67:   mul r4.w, cb6[0].z, l(0.500000)
  68:   mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
  69:   max r3.w, r3.w, r4.w
  70:   min r8.x, r5.z, r3.w
  71:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[38].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[39].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[40].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb5[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.y, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.y
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 115: add r3.w, r9.w, l(-1.000000)
 116: mad r3.w, cb5[3].w, r3.w, l(1.000000)
 117: mul r3.w, r3.w, cb5[3].x
 118: mul r10.xyz, r9.xyzx, r3.wwww
 119: lt r4.w, cb5[1].w, l(0.999990)
 120: if_nz r4.w
 121:   lt r4.w, l(0.000000), cb5[6].w
 122:   if_nz r4.w
 123:     dp3 r4.w, r6.xyzx, r6.xyzx
 124:     rsq r4.w, r4.w
 125:     mul r11.xyz, r4.wwww, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r4.w, r12.y, r12.x
 133:     min r4.w, r12.z, r4.w
 134:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
 136:   endif 
 137:   sample_l r4.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 138:   add r2.w, r4.w, l(-1.000000)
 139:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb5[7].x
 141:   mul r4.xyz, r4.xyzx, r2.wwww
 142:   mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.xxxx, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
 147: dp3 r1.w, r6.xyzx, r6.xyzx
 148: max r1.w, r1.w, l(0.001000)
 149: rsq r1.w, r1.w
 150: mul r6.xyz, r1.wwww, r6.xyzx
 151: dp3 r1.w, r2.xyzx, -r3.xyzx
 152: dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.yyyy
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.x, -r2.w, l(1.000000)
 159: mul r3.y, r3.x, r3.x
 160: mul r3.y, r3.y, r3.y
 161: mul r3.x, r3.x, r3.y
 162: mad r3.x, r2.z, r3.x, l(1.000000)
 163: add r3.y, -|r1.w|, l(1.000000)
 164: mul r3.z, r3.y, r3.y
 165: mul r3.z, r3.z, r3.z
 166: mul r3.y, r3.y, r3.z
 167: mad r2.z, r2.z, r3.y, l(1.000000)
 168: mul r2.z, r2.z, r3.x
 169: mul r2.z, r2.w, r2.z
 170: mul r3.x, r5.y, r5.y
 171: mad r3.z, -r5.y, r5.y, l(1.000000)
 172: mad r3.w, |r1.w|, r3.z, r3.x
 173: mad r3.z, r2.w, r3.z, r3.x
 174: mul r1.w, |r1.w|, r3.z
 175: mad r1.w, r2.w, r3.w, r1.w
 176: add r1.w, r1.w, l(0.000010)
 177: div r1.w, l(0.500000), r1.w
 178: mul r3.z, r3.x, r3.x
 179: mad r3.w, r2.x, r3.z, -r2.x
 180: mad r2.x, r3.w, r2.x, l(1.000000)
 181: mul r3.z, r3.z, l(0.318310)
 182: mad r2.x, r2.x, r2.x, l(0.000000)
 183: div r2.x, r3.z, r2.x
 184: mul r1.w, r1.w, r2.x
 185: mul r1.w, r1.w, l(3.141593)
 186: max r1.w, r1.w, l(0.000100)
 187: sqrt r1.w, r1.w
 188: mul r1.w, r2.w, r1.w
 189: mul r2.x, r3.x, r5.y
 190: mad r2.x, -r2.x, l(0.280000), l(1.000000)
 191: dp3 r2.w, r0.xyzx, r0.xyzx
 192: ne r2.w, r2.w, l(0.000000)
 193: and r2.w, r2.w, l(0x3f800000)
 194: mul r1.w, r1.w, r2.w
 195: add r0.w, -r0.w, cb0[8].w
 196: add_sat r0.w, r0.w, l(1.000000)
 197: mul r3.xzw, r2.zzzz, r7.xxyz
 198: mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
 199: mul r5.xyz, r7.xyzx, r1.wwww
 200: add r1.w, -r2.y, l(1.000000)
 201: mul r2.y, r1.w, r1.w
 202: mul r2.y, r2.y, r2.y
 203: mul r1.w, r1.w, r2.y
 204: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 205: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 206: mul r2.yzw, r2.yyzw, r5.xxyz
 207: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 208: mul r2.xyz, r4.xyzx, r2.xxxx
 209: add r3.xzw, -r0.xxyz, r0.wwww
 210: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 211: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 212: mov o0.w, l(1.000000)
 213: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 157 math, 6 textures, 14 branches
Vector4 _Color at 13
Float _GlossMapScale at 15
Vector4 _LightColor0 at 12
Float _Metallic at 14
Float _OcclusionStrength at 16
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_SHAb at 3
Vector4 unity_SHAg at 2
Vector4 unity_SHAr at 1
Vector4 unity_SpecCube0_BoxMax at 4
Vector4 unity_SpecCube0_BoxMin at 5
Vector4 unity_SpecCube0_HDR at 7
Vector4 unity_SpecCube0_ProbePosition at 6
Vector4 unity_SpecCube1_BoxMax at 8
Vector4 unity_SpecCube1_BoxMin at 9
Vector4 unity_SpecCube1_HDR at 11
Vector4 unity_SpecCube1_ProbePosition at 10

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   _WorldSpaceLightPos0          c0       1
//   unity_SHAr                    c1       1
//   unity_SHAg                    c2       1
//   unity_SHAb                    c3       1
//   unity_SpecCube0_BoxMax        c4       1
//   unity_SpecCube0_BoxMin        c5       1
//   unity_SpecCube0_ProbePosition c6       1
//   unity_SpecCube0_HDR           c7       1
//   unity_SpecCube1_BoxMax        c8       1
//   unity_SpecCube1_BoxMin        c9       1
//   unity_SpecCube1_ProbePosition c10      1
//   unity_SpecCube1_HDR           c11      1
//   _LightColor0                  c12      1
//   _Color                        c13      1
//   _Metallic                     c14      1
//   _GlossMapScale                c15      1
//   _OcclusionStrength            c16      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//

    ps_3_0
    def c17, -0.220916301, 0.220916301, 0.779083729, 1
    def c18, 0, 0.416666657, 1.05499995, -0.0549999997
    def c19, 0.699999988, 1.70000005, 6, 0.999989986
    def c20, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c21, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c22, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5_pp v5.xyz
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c13
    mov r2, c17
    mad_pp r0.xyz, c13, r0, r2.x
    mad_pp r0.xyz, c14.x, r0, r2.y
    mad_pp r1.w, c14.x, -r2.z, r2.z
    mul_pp r1.xyz, r1.w, r1
    nrm_pp r3.xyz, v4
    dp3_pp r2.x, v1, v1
    rsq_pp r2.x, r2.x
    mul_pp r4.xyz, r2.x, v1
    texld_pp r5, v0, s3
    add_pp r2.y, r2.w, -c16.x
    mad_pp r2.y, r5.y, c16.x, r2.y
    mad_pp r2.z, r0.w, -c15.x, r2.w
    dp3_pp r4.w, r4, r3
    add_pp r4.w, r4.w, r4.w
    mad_pp r5.xyz, r3, -r4.w, r4
    mov r3.w, c17.w
    dp4_pp r6.x, c1, r3
    dp4_pp r6.y, c2, r3
    dp4_pp r6.z, c3, r3
    add_pp r6.xyz, r6, v5
    max_pp r7.xyz, r6, c18.x
    log_pp r6.x, r7.x
    log_pp r6.y, r7.y
    log_pp r6.z, r7.z
    mul_pp r6.xyz, r6, c18.y
    exp_pp r7.x, r6.x
    exp_pp r7.y, r6.y
    exp_pp r7.z, r6.z
    mad_pp r6.xyz, r7, c18.z, c18.w
    max_pp r7.xyz, r6, c18.x
    mov r6.x, c18.x
    if_lt -c6.w, r6.x
      nrm_pp r8.xyz, r5
      mov_pp r9.x, v2.w
      mov_pp r9.y, v3.w
      mov_pp r9.z, v4.w
      add r6.yzw, -r9.xxyz, c4.xxyz
      rcp r10.x, r8.x
      rcp r10.y, r8.y
      rcp r10.z, r8.z
      mul_pp r6.yzw, r6, r10.xxyz
      add r11.xyz, -r9, c5
      mul_pp r10.xyz, r10, r11
      cmp_pp r6.yzw, -r8.xxyz, r10.xxyz, r6
      min_pp r3.w, r6.z, r6.y
      min_pp r4.w, r6.w, r3.w
      add r6.yzw, r9.xxyz, -c6.xxyz
      mad_pp r8.xyz, r8, r4.w, r6.yzww
    else
      mov_pp r8.xyz, r5
    endif
    mad_pp r3.w, r2.z, -c19.x, c19.y
    mul_pp r3.w, r2.z, r3.w
    mul_pp r8.w, r3.w, c19.z
    texldl_pp r9, r8, s0
    add_pp r3.w, r9.w, -c17.w
    mad_pp r3.w, c7.w, r3.w, r2.w
    mul_pp r3.w, r3.w, c7.x
    mul_pp r6.yzw, r9.xxyz, r3.w
    mov r4.w, c5.w
    if_lt r4.w, c19.w
      if_lt -c10.w, r6.x
        nrm_pp r10.xyz, r5
        mov_pp r11.x, v2.w
        mov_pp r11.y, v3.w
        mov_pp r11.z, v4.w
        add r12.xyz, -r11, c8
        rcp r13.x, r10.x
        rcp r13.y, r10.y
        rcp r13.z, r10.z
        mul_pp r12.xyz, r12, r13
        add r14.xyz, -r11, c9
        mul_pp r13.xyz, r13, r14
        cmp_pp r12.xyz, -r10, r13, r12
        min_pp r4.w, r12.y, r12.x
        min_pp r5.w, r12.z, r4.w
        add r11.xyz, r11, -c10
        mad_pp r8.xyz, r10, r5.w, r11
      else
        mov_pp r8.xyz, r5
      endif
      texldl_pp r5, r8, s1
      add_pp r4.w, r5.w, -c17.w
      mad_pp r2.w, c11.w, r4.w, r2.w
      mul_pp r2.w, r2.w, c11.x
      mul_pp r5.xyz, r5, r2.w
      mad r8.xyz, r3.w, r9, -r5
      mad_pp r6.yzw, c5.w, r8.xxyz, r5.xxyz
    endif
    mul_pp r5.xyz, r2.y, r6.yzww
    mad_pp r6.xyz, v1, -r2.x, c0
    dp3_pp r2.x, r6, r6
    add r2.w, -r2.x, c20.x
    rsq_pp r2.x, r2.x
    cmp_pp r2.x, r2.w, c20.y, r2.x
    mul_pp r6.xyz, r2.x, r6
    dp3_pp r2.x, r3, -r4
    dp3_sat_pp r2.w, r3, c0
    dp3_sat_pp r3.x, r3, r6
    dp3_sat_pp r3.y, c0, r6
    mul_pp r3.z, r3.y, r3.y
    dp2add_pp r3.z, r3.z, r2.z, c20.z
    add_pp r3.w, -r2.w, c17.w
    mul_pp r4.x, r3.w, r3.w
    mul_pp r4.x, r4.x, r4.x
    mul_pp r3.w, r3.w, r4.x
    mad_pp r3.w, r3.z, r3.w, c17.w
    add_pp r4.x, -r2_abs.x, c17.w
    mul_pp r4.y, r4.x, r4.x
    mul_pp r4.y, r4.y, r4.y
    mul_pp r4.x, r4.x, r4.y
    mad_pp r3.z, r3.z, r4.x, c17.w
    mul_pp r3.z, r3.z, r3.w
    mul_pp r3.z, r2.w, r3.z
    mul_pp r3.w, r2.z, r2.z
    mad_pp r4.y, r2.z, -r2.z, c17.w
    mad_pp r4.z, r2_abs.x, r4.y, r3.w
    mad_pp r4.y, r2.w, r4.y, r3.w
    mul_pp r2.x, r2_abs.x, r4.y
    mad r2.x, r2.w, r4.z, r2.x
    add r2.x, r2.x, c20.w
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, -c20.z
    mul_pp r4.y, r3.w, r3.w
    mad_pp r4.z, r3.x, r4.y, -r3.x
    mad_pp r3.x, r4.z, r3.x, c17.w
    mul r4.y, r4.y, c21.x
    mad r3.x, r3.x, r3.x, c21.y
    rcp r3.x, r3.x
    mul_pp r3.x, r3.x, r4.y
    mul r2.xz, r2, r3.xyww
    mul_pp r3.x, r2.x, c21.z
    mad r2.x, r2.x, -c21.z, c21.w
    rsq r3.x, r3.x
    rcp_pp r3.x, r3.x
    cmp_pp r2.x, r2.x, c22.x, r3.x
    mul_pp r2.x, r2.w, r2.x
    mad_pp r2.z, r2.z, -c22.y, c22.z
    dp3_pp r2.w, r0, r0
    cmp r2.w, -r2.w, c22.w, c22.z
    mul_pp r2.x, r2.w, r2.x
    add_pp r1.w, -r1.w, c17.w
    mad_sat_pp r0.w, r0.w, c15.x, r1.w
    mul_pp r3.xzw, r3.z, c12.xyyz
    mad_pp r3.xzw, r7.xyyz, r2.y, r3
    mul_pp r2.xyw, r2.x, c12.xyzz
    add_pp r1.w, -r3.y, c17.w
    mul_pp r3.y, r1.w, r1.w
    mul_pp r3.y, r3.y, r3.y
    mul_pp r1.w, r1.w, r3.y
    lrp_pp r4.yzw, r1.w, c17.w, r0.xxyz
    mul_pp r2.xyw, r2, r4.yzzw
    mad_pp r1.xyz, r1, r3.xzww, r2.xyww
    mul_pp r2.xyz, r5, r2.z
    lrp_pp r3.xyz, r4.x, r0.w, r0
    mad_pp oC0.xyz, r2, r3, r1
    mov_pp oC0.w, c17.w

// approximately 175 instruction slots used (6 texture, 169 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 163 math, 15 temp registers, 6 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r3.x, v2.xyzx, v2.xyzx
  10: rsq r3.x, r3.x
  11: mul r3.yzw, r3.xxxx, v2.xxyz
  12: eq r4.x, cb3[0].x, l(1.000000)
  13: if_nz r4.x
  14:   eq r4.y, cb3[0].y, l(1.000000)
  15:   mul r5.xyz, v4.wwww, cb3[2].xyzx
  16:   mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
  17:   mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
  18:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  19:   mov r6.y, v3.w
  20:   mov r6.z, v4.w
  21:   mov r6.w, v5.w
  22:   movc r4.yzw, r4.yyyy, r5.xxyz, r6.yyzw
  23:   add r4.yzw, r4.yyzw, -cb3[6].xxyz
  24:   mul r5.yzw, r4.yyzw, cb3[5].xxyz
  25:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  26:   mad r4.z, cb3[0].z, l(0.500000), l(0.750000)
  27:   max r5.x, r4.z, r4.y
  28:   sample r5.xyzw, r5.xzwx, t4.xyzw, s1
  29: else 
  30:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r4.y, r5.xyzw, cb1[45].xyzw
  33: sample r5.xyzw, v1.xyxx, t1.xyzw, s3
  34: add r4.z, -cb0[9].y, l(1.000000)
  35: mad r4.z, r5.y, cb0[9].y, r4.z
  36: mad r4.w, -r0.w, cb0[9].x, l(1.000000)
  37: dp3 r5.x, r3.yzwy, r2.xyzx
  38: add r5.x, r5.x, r5.x
  39: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.yzwy
  40: mul r6.xyz, r4.yyyy, cb0[2].xyzx
  41: if_nz r4.x
  42:   eq r4.x, cb3[0].y, l(1.000000)
  43:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  44:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  45:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  46:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  47:   mov r8.y, v3.w
  48:   mov r8.z, v4.w
  49:   mov r8.w, v5.w
  50:   movc r7.xyz, r4.xxxx, r7.xyzx, r8.yzwy
  51:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  52:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  53:   mul r4.x, r7.y, l(0.250000)
  54:   mul r4.y, cb3[0].z, l(0.500000)
  55:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  56:   max r4.x, r4.y, r4.x
  57:   min r7.x, r5.w, r4.x
  58:   sample r8.xyzw, r7.xzwx, t4.xyzw, s1
  59:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  60:   sample r9.xyzw, r9.xyzx, t4.xyzw, s1
  61:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  62:   sample r7.xyzw, r7.xyzx, t4.xyzw, s1
  63:   mov r2.w, l(1.000000)
  64:   dp4 r8.x, r8.xyzw, r2.xyzw
  65:   dp4 r8.y, r9.xyzw, r2.xyzw
  66:   dp4 r8.z, r7.xyzw, r2.xyzw
  67: else 
  68:   mov r2.w, l(1.000000)
  69:   dp4 r8.x, cb1[38].xyzw, r2.xyzw
  70:   dp4 r8.y, cb1[39].xyzw, r2.xyzw
  71:   dp4 r8.z, cb1[40].xyzw, r2.xyzw
  72: endif 
  73: add r7.xyz, r8.xyzx, v6.xyzx
  74: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: log r7.xyz, r7.xyzx
  76: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  77: exp r7.xyz, r7.xyzx
  78: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  79: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  80: lt r2.w, l(0.000000), cb2[2].w
  81: if_nz r2.w
  82:   dp3 r2.w, r5.xyzx, r5.xyzx
  83:   rsq r2.w, r2.w
  84:   mul r8.xyz, r2.wwww, r5.xyzx
  85:   mov r9.x, v3.w
  86:   mov r9.y, v4.w
  87:   mov r9.z, v5.w
  88:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
  89:   div r10.xyz, r10.xyzx, r8.xyzx
  90:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
  91:   div r11.xyz, r11.xyzx, r8.xyzx
  92:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  93:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  94:   min r2.w, r10.y, r10.x
  95:   min r2.w, r10.z, r2.w
  96:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
  97:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
  98: else 
  99:   mov r8.xyz, r5.xyzx
 100: endif 
 101: mad r2.w, -r4.w, l(0.700000), l(1.700000)
 102: mul r2.w, r2.w, r4.w
 103: mul r2.w, r2.w, l(6.000000)
 104: sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r2.w
 105: add r4.x, r8.w, l(-1.000000)
 106: mad r4.x, cb2[3].w, r4.x, l(1.000000)
 107: mul r4.x, r4.x, cb2[3].x
 108: mul r9.xyz, r8.xyzx, r4.xxxx
 109: lt r4.y, cb2[1].w, l(0.999990)
 110: if_nz r4.y
 111:   lt r4.y, l(0.000000), cb2[6].w
 112:   if_nz r4.y
 113:     dp3 r4.y, r5.xyzx, r5.xyzx
 114:     rsq r4.y, r4.y
 115:     mul r10.xyz, r4.yyyy, r5.xyzx
 116:     mov r11.x, v3.w
 117:     mov r11.y, v4.w
 118:     mov r11.z, v5.w
 119:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 120:     div r12.xyz, r12.xyzx, r10.xyzx
 121:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 122:     div r13.xyz, r13.xyzx, r10.xyzx
 123:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 124:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 125:     min r4.y, r12.y, r12.x
 126:     min r4.y, r12.z, r4.y
 127:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 128:     mad r5.xyz, r10.xyzx, r4.yyyy, r11.xyzx
 129:   endif 
 130:   sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, r2.w
 131:   add r2.w, r5.w, l(-1.000000)
 132:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 133:   mul r2.w, r2.w, cb2[7].x
 134:   mul r5.xyz, r5.xyzx, r2.wwww
 135:   mad r8.xyz, r4.xxxx, r8.xyzx, -r5.xyzx
 136:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 137: endif 
 138: mul r5.xyz, r4.zzzz, r9.xyzx
 139: mad r8.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 140: dp3 r2.w, r8.xyzx, r8.xyzx
 141: max r2.w, r2.w, l(0.001000)
 142: rsq r2.w, r2.w
 143: mul r8.xyz, r2.wwww, r8.xyzx
 144: dp3 r2.w, r2.xyzx, -r3.yzwy
 145: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 146: dp3_sat r2.x, r2.xyzx, r8.xyzx
 147: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 148: mul r2.z, r2.y, r2.y
 149: dp2 r2.z, r2.zzzz, r4.wwww
 150: add r2.z, r2.z, l(-0.500000)
 151: add r3.y, -r3.x, l(1.000000)
 152: mul r3.z, r3.y, r3.y
 153: mul r3.z, r3.z, r3.z
 154: mul r3.y, r3.y, r3.z
 155: mad r3.y, r2.z, r3.y, l(1.000000)
 156: add r3.z, -|r2.w|, l(1.000000)
 157: mul r3.w, r3.z, r3.z
 158: mul r3.w, r3.w, r3.w
 159: mul r3.z, r3.z, r3.w
 160: mad r2.z, r2.z, r3.z, l(1.000000)
 161: mul r2.z, r2.z, r3.y
 162: mul r3.y, r4.w, r4.w
 163: mad r3.w, -r4.w, r4.w, l(1.000000)
 164: mad r4.x, |r2.w|, r3.w, r3.y
 165: mad r3.w, r3.x, r3.w, r3.y
 166: mul r2.w, |r2.w|, r3.w
 167: mad r2.w, r3.x, r4.x, r2.w
 168: add r2.w, r2.w, l(0.000010)
 169: div r2.w, l(0.500000), r2.w
 170: mul r3.w, r3.y, r3.y
 171: mad r4.x, r2.x, r3.w, -r2.x
 172: mad r2.x, r4.x, r2.x, l(1.000000)
 173: mul r3.w, r3.w, l(0.318310)
 174: mad r2.x, r2.x, r2.x, l(0.000000)
 175: div r2.x, r3.w, r2.x
 176: mul r2.x, r2.x, r2.w
 177: mul r2.x, r2.x, l(3.141593)
 178: max r2.x, r2.x, l(0.000100)
 179: sqrt r2.x, r2.x
 180: mul r2.xz, r3.xxxx, r2.xxzx
 181: mul r2.w, r3.y, r4.w
 182: mad r2.w, -r2.w, l(0.280000), l(1.000000)
 183: dp3 r3.x, r0.xyzx, r0.xyzx
 184: ne r3.x, r3.x, l(0.000000)
 185: and r3.x, r3.x, l(0x3f800000)
 186: mul r2.x, r2.x, r3.x
 187: mad r0.w, r0.w, cb0[9].x, -r1.w
 188: add_sat r0.w, r0.w, l(1.000000)
 189: mul r3.xyw, r2.zzzz, r6.xyxz
 190: mad r3.xyw, r7.xyxz, r4.zzzz, r3.xyxw
 191: mul r4.xyz, r6.xyzx, r2.xxxx
 192: add r1.w, -r2.y, l(1.000000)
 193: mul r2.x, r1.w, r1.w
 194: mul r2.x, r2.x, r2.x
 195: mul r1.w, r1.w, r2.x
 196: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 197: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 198: mul r2.xyz, r2.xyzx, r4.xyzx
 199: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 200: mul r2.xyz, r5.xyzx, r2.wwww
 201: add r3.xyw, -r0.xyxz, r0.wwww
 202: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 203: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 204: mov o0.w, l(1.000000)
 205: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 161 math, 6 textures, 14 branches
Vector4 _Color at 15
Float _Glossiness at 17
Vector4 _LightColor0 at 14
Float _Metallic at 16
Float _OcclusionStrength at 18
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_FogColor at 4
Vector4 unity_FogParams at 5
Vector4 unity_SHAb at 3
Vector4 unity_SHAg at 2
Vector4 unity_SHAr at 1
Vector4 unity_SpecCube0_BoxMax at 6
Vector4 unity_SpecCube0_BoxMin at 7
Vector4 unity_SpecCube0_HDR at 9
Vector4 unity_SpecCube0_ProbePosition at 8
Vector4 unity_SpecCube1_BoxMax at 10
Vector4 unity_SpecCube1_BoxMin at 11
Vector4 unity_SpecCube1_HDR at 13
Vector4 unity_SpecCube1_ProbePosition at 12

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogColor;
//   float4 unity_FogParams;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   _WorldSpaceLightPos0          c0       1
//   unity_SHAr                    c1       1
//   unity_SHAg                    c2       1
//   unity_SHAb                    c3       1
//   unity_FogColor                c4       1
//   unity_FogParams               c5       1
//   unity_SpecCube0_BoxMax        c6       1
//   unity_SpecCube0_BoxMin        c7       1
//   unity_SpecCube0_ProbePosition c8       1
//   unity_SpecCube0_HDR           c9       1
//   unity_SpecCube1_BoxMax        c10      1
//   unity_SpecCube1_BoxMin        c11      1
//   unity_SpecCube1_ProbePosition c12      1
//   unity_SpecCube1_HDR           c13      1
//   _LightColor0                  c14      1
//   _Color                        c15      1
//   _Metallic                     c16      1
//   _Glossiness                   c17      1
//   _OcclusionStrength            c18      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//

    ps_3_0
    def c19, -0.220916301, 0.220916301, 0.779083729, 1
    def c20, 0, 0.416666657, 1.05499995, -0.0549999997
    def c21, 0.699999988, 1.70000005, 6, 0.999989986
    def c22, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c23, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c24, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5_pp v5.xyz
    dcl_texcoord7 v6.x
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c15
    mov r2, c19
    mad_pp r0.xyz, c15, r0, r2.x
    mad_pp r0.xyz, c16.x, r0, r2.y
    mad_pp r0.w, c16.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r3.xyz, v4
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r2.xyz, r1.w, v1
    texld_pp r4, v0, s3
    add_pp r4.x, r2.w, -c18.x
    mad_pp r4.x, r4.y, c18.x, r4.x
    add_pp r4.y, r2.w, -c17.x
    dp3_pp r4.z, r2, r3
    add_pp r4.z, r4.z, r4.z
    mad_pp r5.xyz, r3, -r4.z, r2
    mov r3.w, c19.w
    dp4_pp r6.x, c1, r3
    dp4_pp r6.y, c2, r3
    dp4_pp r6.z, c3, r3
    add_pp r6.xyz, r6, v5
    max_pp r7.xyz, r6, c20.x
    log_pp r6.x, r7.x
    log_pp r6.y, r7.y
    log_pp r6.z, r7.z
    mul_pp r6.xyz, r6, c20.y
    exp_pp r7.x, r6.x
    exp_pp r7.y, r6.y
    exp_pp r7.z, r6.z
    mad_pp r6.xyz, r7, c20.z, c20.w
    max_pp r7.xyz, r6, c20.x
    mov r6.x, c20.x
    if_lt -c8.w, r6.x
      nrm_pp r8.xyz, r5
      mov_pp r9.x, v2.w
      mov_pp r9.y, v3.w
      mov_pp r9.z, v4.w
      add r6.yzw, -r9.xxyz, c6.xxyz
      rcp r10.x, r8.x
      rcp r10.y, r8.y
      rcp r10.z, r8.z
      mul_pp r6.yzw, r6, r10.xxyz
      add r11.xyz, -r9, c7
      mul_pp r10.xyz, r10, r11
      cmp_pp r6.yzw, -r8.xxyz, r10.xxyz, r6
      min_pp r3.w, r6.z, r6.y
      min_pp r4.z, r6.w, r3.w
      add r6.yzw, r9.xxyz, -c8.xxyz
      mad_pp r8.xyz, r8, r4.z, r6.yzww
    else
      mov_pp r8.xyz, r5
    endif
    mad_pp r3.w, r4.y, -c21.x, c21.y
    mul_pp r3.w, r3.w, r4.y
    mul_pp r8.w, r3.w, c21.z
    texldl_pp r9, r8, s0
    add_pp r3.w, r9.w, -c19.w
    mad_pp r3.w, c9.w, r3.w, r2.w
    mul_pp r3.w, r3.w, c9.x
    mul_pp r6.yzw, r9.xxyz, r3.w
    mov r4.w, c7.w
    if_lt r4.w, c21.w
      if_lt -c12.w, r6.x
        nrm_pp r10.xyz, r5
        mov_pp r11.x, v2.w
        mov_pp r11.y, v3.w
        mov_pp r11.z, v4.w
        add r12.xyz, -r11, c10
        rcp r13.x, r10.x
        rcp r13.y, r10.y
        rcp r13.z, r10.z
        mul_pp r12.xyz, r12, r13
        add r14.xyz, -r11, c11
        mul_pp r13.xyz, r13, r14
        cmp_pp r12.xyz, -r10, r13, r12
        min_pp r4.z, r12.y, r12.x
        min_pp r5.w, r12.z, r4.z
        add r11.xyz, r11, -c12
        mad_pp r8.xyz, r10, r5.w, r11
      else
        mov_pp r8.xyz, r5
      endif
      texldl_pp r5, r8, s1
      add_pp r4.z, r5.w, -c19.w
      mad_pp r2.w, c13.w, r4.z, r2.w
      mul_pp r2.w, r2.w, c13.x
      mul_pp r5.xyz, r5, r2.w
      mad r8.xyz, r3.w, r9, -r5
      mad_pp r6.yzw, c7.w, r8.xxyz, r5.xxyz
    endif
    mul_pp r5.xyz, r4.x, r6.yzww
    mad_pp r6.xyz, v1, -r1.w, c0
    dp3_pp r1.w, r6, r6
    add r2.w, -r1.w, c22.x
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c22.y, r1.w
    mul_pp r6.xyz, r1.w, r6
    dp3_pp r1.w, r3, -r2
    dp3_sat_pp r2.x, r3, c0
    dp3_sat_pp r2.y, r3, r6
    dp3_sat_pp r2.z, c0, r6
    mul_pp r2.w, r2.z, r2.z
    dp2add_pp r2.w, r2.w, r4.y, c22.z
    add_pp r3.x, -r2.x, c19.w
    mul_pp r3.y, r3.x, r3.x
    mul_pp r3.y, r3.y, r3.y
    mul_pp r3.x, r3.x, r3.y
    mad_pp r3.x, r2.w, r3.x, c19.w
    add_pp r3.y, -r1_abs.w, c19.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.w, r2.w, r3.y, c19.w
    mul_pp r2.w, r2.w, r3.x
    mul_pp r2.w, r2.x, r2.w
    mul_pp r3.x, r4.y, r4.y
    mad_pp r3.z, r4.y, -r4.y, c19.w
    mad_pp r3.w, r1_abs.w, r3.z, r3.x
    mad_pp r3.z, r2.x, r3.z, r3.x
    mul_pp r1.w, r1_abs.w, r3.z
    mad r1.w, r2.x, r3.w, r1.w
    add r1.w, r1.w, c22.w
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, -c22.z
    mul_pp r3.z, r3.x, r3.x
    mad_pp r3.w, r2.y, r3.z, -r2.y
    mad_pp r2.y, r3.w, r2.y, c19.w
    mul r3.z, r3.z, c23.x
    mad r2.y, r2.y, r2.y, c23.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, r3.z
    mul r1.w, r1.w, r2.y
    mul_pp r2.y, r1.w, c23.z
    mad r1.w, r1.w, -c23.z, c23.w
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r1.w, r1.w, c24.x, r2.y
    mul_pp r1.w, r2.x, r1.w
    mul_pp r2.x, r3.x, r4.y
    mad_pp r2.x, r2.x, -c24.y, c24.z
    dp3_pp r2.y, r0, r0
    cmp r2.y, -r2.y, c24.w, c24.z
    mul_pp r1.w, r1.w, r2.y
    add_pp r0.w, -r0.w, c19.w
    add_sat_pp r0.w, r0.w, c17.x
    mul_pp r3.xzw, r2.w, c14.xyyz
    mad_pp r3.xzw, r7.xyyz, r4.x, r3
    mul_pp r4.xyz, r1.w, c14
    add_pp r1.w, -r2.z, c19.w
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.w, r1.w, r2.y
    lrp_pp r2.yzw, r1.w, c19.w, r0.xxyz
    mul_pp r2.yzw, r2, r4.xxyz
    mad_pp r1.xyz, r1, r3.xzww, r2.yzww
    mul_pp r2.xyz, r5, r2.x
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp r0.xyz, r2, r4, r1
    mad_sat r0.w, v6.x, c5.z, c5.w
    add r0.xyz, r0, -c4
    mad_pp oC0.xyz, r0.w, r0, c4
    mov_pp oC0.w, c19.w

// approximately 179 instruction slots used (6 texture, 173 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 171 math, 15 temp registers, 6 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 3 {
  Vector4 unity_FogColor at 0
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 4 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[8], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: eq r3.w, cb5[0].x, l(1.000000)
  13: if_nz r3.w
  14:   eq r4.x, cb5[0].y, l(1.000000)
  15:   mul r4.yzw, v4.wwww, cb5[2].xxyz
  16:   mad r4.yzw, cb5[1].xxyz, v3.wwww, r4.yyzw
  17:   mad r4.yzw, cb5[3].xxyz, v5.wwww, r4.yyzw
  18:   add r4.yzw, r4.yyzw, cb5[4].xxyz
  19:   mov r5.y, v3.w
  20:   mov r5.z, v4.w
  21:   mov r5.w, v5.w
  22:   movc r4.xyz, r4.xxxx, r4.yzwy, r5.yzwy
  23:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  24:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  25:   mad r4.y, r4.y, l(0.250000), l(0.750000)
  26:   mad r5.x, cb5[0].z, l(0.500000), l(0.750000)
  27:   max r4.x, r4.y, r5.x
  28:   sample r4.xyzw, r4.xzwx, t4.xyzw, s1
  29: else 
  30:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r4.x, r4.xyzw, cb2[45].xyzw
  33: sample r5.xyzw, v1.xyxx, t1.xyzw, s3
  34: add r4.y, -cb0[9].y, l(1.000000)
  35: mad r4.y, r5.y, cb0[9].y, r4.y
  36: add r4.z, -cb0[8].w, l(1.000000)
  37: dp3 r4.w, r3.xyzx, r2.xyzx
  38: add r4.w, r4.w, r4.w
  39: mad r5.xyz, r2.xyzx, -r4.wwww, r3.xyzx
  40: mul r6.xyz, r4.xxxx, cb0[2].xyzx
  41: if_nz r3.w
  42:   eq r3.w, cb5[0].y, l(1.000000)
  43:   mul r7.xyz, v4.wwww, cb5[2].xyzx
  44:   mad r7.xyz, cb5[1].xyzx, v3.wwww, r7.xyzx
  45:   mad r7.xyz, cb5[3].xyzx, v5.wwww, r7.xyzx
  46:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  47:   mov r8.y, v3.w
  48:   mov r8.z, v4.w
  49:   mov r8.w, v5.w
  50:   movc r7.xyz, r3.wwww, r7.xyzx, r8.yzwy
  51:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  52:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  53:   mul r3.w, r7.y, l(0.250000)
  54:   mul r4.x, cb5[0].z, l(0.500000)
  55:   mad r4.w, -cb5[0].z, l(0.500000), l(0.250000)
  56:   max r3.w, r3.w, r4.x
  57:   min r7.x, r4.w, r3.w
  58:   sample r8.xyzw, r7.xzwx, t4.xyzw, s1
  59:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  60:   sample r9.xyzw, r9.xyzx, t4.xyzw, s1
  61:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  62:   sample r7.xyzw, r7.xyzx, t4.xyzw, s1
  63:   mov r2.w, l(1.000000)
  64:   dp4 r8.x, r8.xyzw, r2.xyzw
  65:   dp4 r8.y, r9.xyzw, r2.xyzw
  66:   dp4 r8.z, r7.xyzw, r2.xyzw
  67: else 
  68:   mov r2.w, l(1.000000)
  69:   dp4 r8.x, cb2[38].xyzw, r2.xyzw
  70:   dp4 r8.y, cb2[39].xyzw, r2.xyzw
  71:   dp4 r8.z, cb2[40].xyzw, r2.xyzw
  72: endif 
  73: add r7.xyz, r8.xyzx, v6.xyzx
  74: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: log r7.xyz, r7.xyzx
  76: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  77: exp r7.xyz, r7.xyzx
  78: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  79: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  80: lt r2.w, l(0.000000), cb4[2].w
  81: if_nz r2.w
  82:   dp3 r2.w, r5.xyzx, r5.xyzx
  83:   rsq r2.w, r2.w
  84:   mul r8.xyz, r2.wwww, r5.xyzx
  85:   mov r9.x, v3.w
  86:   mov r9.y, v4.w
  87:   mov r9.z, v5.w
  88:   add r10.xyz, -r9.xyzx, cb4[0].xyzx
  89:   div r10.xyz, r10.xyzx, r8.xyzx
  90:   add r11.xyz, -r9.xyzx, cb4[1].xyzx
  91:   div r11.xyz, r11.xyzx, r8.xyzx
  92:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  93:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  94:   min r2.w, r10.y, r10.x
  95:   min r2.w, r10.z, r2.w
  96:   add r9.xyz, r9.xyzx, -cb4[2].xyzx
  97:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
  98: else 
  99:   mov r8.xyz, r5.xyzx
 100: endif 
 101: mad r2.w, -r4.z, l(0.700000), l(1.700000)
 102: mul r2.w, r2.w, r4.z
 103: mul r2.w, r2.w, l(6.000000)
 104: sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r2.w
 105: add r3.w, r8.w, l(-1.000000)
 106: mad r3.w, cb4[3].w, r3.w, l(1.000000)
 107: mul r3.w, r3.w, cb4[3].x
 108: mul r9.xyz, r8.xyzx, r3.wwww
 109: lt r4.x, cb4[1].w, l(0.999990)
 110: if_nz r4.x
 111:   lt r4.x, l(0.000000), cb4[6].w
 112:   if_nz r4.x
 113:     dp3 r4.x, r5.xyzx, r5.xyzx
 114:     rsq r4.x, r4.x
 115:     mul r10.xyz, r4.xxxx, r5.xyzx
 116:     mov r11.x, v3.w
 117:     mov r11.y, v4.w
 118:     mov r11.z, v5.w
 119:     add r12.xyz, -r11.xyzx, cb4[4].xyzx
 120:     div r12.xyz, r12.xyzx, r10.xyzx
 121:     add r13.xyz, -r11.xyzx, cb4[5].xyzx
 122:     div r13.xyz, r13.xyzx, r10.xyzx
 123:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 124:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 125:     min r4.x, r12.y, r12.x
 126:     min r4.x, r12.z, r4.x
 127:     add r11.xyz, r11.xyzx, -cb4[6].xyzx
 128:     mad r5.xyz, r10.xyzx, r4.xxxx, r11.xyzx
 129:   endif 
 130:   sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, r2.w
 131:   add r2.w, r5.w, l(-1.000000)
 132:   mad r2.w, cb4[7].w, r2.w, l(1.000000)
 133:   mul r2.w, r2.w, cb4[7].x
 134:   mul r5.xyz, r5.xyzx, r2.wwww
 135:   mad r8.xyz, r3.wwww, r8.xyzx, -r5.xyzx
 136:   mad r9.xyz, cb4[1].wwww, r8.xyzx, r5.xyzx
 137: endif 
 138: mul r5.xyz, r4.yyyy, r9.xyzx
 139: mad r8.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
 140: dp3 r1.w, r8.xyzx, r8.xyzx
 141: max r1.w, r1.w, l(0.001000)
 142: rsq r1.w, r1.w
 143: mul r8.xyz, r1.wwww, r8.xyzx
 144: dp3 r1.w, r2.xyzx, -r3.xyzx
 145: dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
 146: dp3_sat r2.x, r2.xyzx, r8.xyzx
 147: dp3_sat r2.y, cb2[0].xyzx, r8.xyzx
 148: mul r2.z, r2.y, r2.y
 149: dp2 r2.z, r2.zzzz, r4.zzzz
 150: add r2.z, r2.z, l(-0.500000)
 151: add r3.x, -r2.w, l(1.000000)
 152: mul r3.y, r3.x, r3.x
 153: mul r3.y, r3.y, r3.y
 154: mul r3.x, r3.x, r3.y
 155: mad r3.x, r2.z, r3.x, l(1.000000)
 156: add r3.y, -|r1.w|, l(1.000000)
 157: mul r3.z, r3.y, r3.y
 158: mul r3.z, r3.z, r3.z
 159: mul r3.y, r3.y, r3.z
 160: mad r2.z, r2.z, r3.y, l(1.000000)
 161: mul r2.z, r2.z, r3.x
 162: mul r2.z, r2.w, r2.z
 163: mul r3.x, r4.z, r4.z
 164: mad r3.z, -r4.z, r4.z, l(1.000000)
 165: mad r3.w, |r1.w|, r3.z, r3.x
 166: mad r3.z, r2.w, r3.z, r3.x
 167: mul r1.w, |r1.w|, r3.z
 168: mad r1.w, r2.w, r3.w, r1.w
 169: add r1.w, r1.w, l(0.000010)
 170: div r1.w, l(0.500000), r1.w
 171: mul r3.z, r3.x, r3.x
 172: mad r3.w, r2.x, r3.z, -r2.x
 173: mad r2.x, r3.w, r2.x, l(1.000000)
 174: mul r3.z, r3.z, l(0.318310)
 175: mad r2.x, r2.x, r2.x, l(0.000000)
 176: div r2.x, r3.z, r2.x
 177: mul r1.w, r1.w, r2.x
 178: mul r1.w, r1.w, l(3.141593)
 179: max r1.w, r1.w, l(0.000100)
 180: sqrt r1.w, r1.w
 181: mul r1.w, r2.w, r1.w
 182: mul r2.x, r3.x, r4.z
 183: mad r2.x, -r2.x, l(0.280000), l(1.000000)
 184: dp3 r2.w, r0.xyzx, r0.xyzx
 185: ne r2.w, r2.w, l(0.000000)
 186: and r2.w, r2.w, l(0x3f800000)
 187: mul r1.w, r1.w, r2.w
 188: add r0.w, -r0.w, cb0[8].w
 189: add_sat r0.w, r0.w, l(1.000000)
 190: mul r3.xzw, r2.zzzz, r6.xxyz
 191: mad r3.xzw, r7.xxyz, r4.yyyy, r3.xxzw
 192: mul r4.xyz, r6.xyzx, r1.wwww
 193: add r1.w, -r2.y, l(1.000000)
 194: mul r2.y, r1.w, r1.w
 195: mul r2.y, r2.y, r2.y
 196: mul r1.w, r1.w, r2.y
 197: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 198: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 199: mul r2.yzw, r2.yyzw, r4.xxyz
 200: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 201: mul r2.xyz, r5.xyzx, r2.xxxx
 202: add r3.xzw, -r0.xxyz, r0.wwww
 203: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 204: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 205: div r0.w, v7.z, cb1[5].y
 206: add r0.w, -r0.w, l(1.000000)
 207: mul r0.w, r0.w, cb1[5].z
 208: max r0.w, r0.w, l(0.000000)
 209: mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
 210: add r0.xyz, r0.xyzx, -cb3[0].xyzx
 211: mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
 212: mov o0.w, l(1.000000)
 213: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 169 math, 7 textures, 14 branches
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 21
Float _GlossMapScale at 23
Vector4 _LightColor0 at 20
Vector4 _LightShadowData at 8
Float _Metallic at 22
Float _OcclusionStrength at 24
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4
Vector4 unity_FogColor at 10
Vector4 unity_FogParams at 11
Vector4 unity_SHAb at 7
Vector4 unity_SHAg at 6
Vector4 unity_SHAr at 5
Vector4 unity_ShadowFadeCenterAndType at 9
Vector4 unity_SpecCube0_BoxMax at 12
Vector4 unity_SpecCube0_BoxMin at 13
Vector4 unity_SpecCube0_HDR at 15
Vector4 unity_SpecCube0_ProbePosition at 14
Vector4 unity_SpecCube1_BoxMax at 16
Vector4 unity_SpecCube1_BoxMin at 17
Vector4 unity_SpecCube1_HDR at 19
Vector4 unity_SpecCube1_ProbePosition at 18

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_ShadowMapTexture" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogColor;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_ShadowFadeCenterAndType;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _WorldSpaceLightPos0          c4       1
//   unity_SHAr                    c5       1
//   unity_SHAg                    c6       1
//   unity_SHAb                    c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_FogColor                c10      1
//   unity_FogParams               c11      1
//   unity_SpecCube0_BoxMax        c12      1
//   unity_SpecCube0_BoxMin        c13      1
//   unity_SpecCube0_ProbePosition c14      1
//   unity_SpecCube0_HDR           c15      1
//   unity_SpecCube1_BoxMax        c16      1
//   unity_SpecCube1_BoxMin        c17      1
//   unity_SpecCube1_ProbePosition c18      1
//   unity_SpecCube1_HDR           c19      1
//   _LightColor0                  c20      1
//   _Color                        c21      1
//   _Metallic                     c22      1
//   _GlossMapScale                c23      1
//   _OcclusionStrength            c24      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//   _ShadowMapTexture             s4       1
//

    ps_3_0
    def c25, -0.220916301, 0.220916301, 0.779083729, 1
    def c26, 0, 0.416666657, 1.05499995, -0.0549999997
    def c27, 0.699999988, 1.70000005, 6, 0.999989986
    def c28, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c29, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c30, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5_pp v5.xyz
    dcl_texcoord6 v6
    dcl_texcoord7 v7.x
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c21
    mov r2, c25
    mad_pp r0.xyz, c21, r0, r2.x
    mad_pp r0.xyz, c22.x, r0, r2.y
    mad_pp r1.w, c22.x, -r2.z, r2.z
    mul_pp r1.xyz, r1.w, r1
    nrm_pp r3.xyz, v4
    dp3_pp r2.x, v1, v1
    rsq_pp r2.x, r2.x
    mul_pp r4.xyz, r2.x, v1
    mov_pp r5.x, v2.w
    mov_pp r5.y, v3.w
    mov_pp r5.z, v4.w
    add r6.xyz, -r5, c3
    dp3 r2.y, r6, c2
    add r6.xyz, r5, -c9
    dp3 r2.z, r6, r6
    rsq r2.z, r2.z
    rcp r2.z, r2.z
    lrp r4.w, c9.w, r2.z, r2.y
    mad_sat_pp r2.y, r4.w, c8.z, c8.w
    texldp_pp r6, v6, s4
    add_sat_pp r2.y, r2.y, r6.x
    texld_pp r6, v0, s3
    add_pp r2.z, r2.w, -c24.x
    mad_pp r2.z, r6.y, c24.x, r2.z
    mad_pp r4.w, r0.w, -c23.x, r2.w
    dp3_pp r5.w, r4, r3
    add_pp r5.w, r5.w, r5.w
    mad_pp r6.xyz, r3, -r5.w, r4
    mul_pp r7.xyz, r2.y, c20
    mov r3.w, c25.w
    dp4_pp r8.x, c5, r3
    dp4_pp r8.y, c6, r3
    dp4_pp r8.z, c7, r3
    add_pp r8.xyz, r8, v5
    max_pp r9.xyz, r8, c26.x
    log_pp r8.x, r9.x
    log_pp r8.y, r9.y
    log_pp r8.z, r9.z
    mul_pp r8.xyz, r8, c26.y
    exp_pp r9.x, r8.x
    exp_pp r9.y, r8.y
    exp_pp r9.z, r8.z
    mad_pp r8.xyz, r9, c26.z, c26.w
    max_pp r9.xyz, r8, c26.x
    mov r8.x, c26.x
    if_lt -c14.w, r8.x
      nrm_pp r10.xyz, r6
      add r8.yzw, -r5.xxyz, c12.xxyz
      rcp r11.x, r10.x
      rcp r11.y, r10.y
      rcp r11.z, r10.z
      mul_pp r8.yzw, r8, r11.xxyz
      add r12.xyz, -r5, c13
      mul_pp r11.xyz, r11, r12
      cmp_pp r8.yzw, -r10.xxyz, r11.xxyz, r8
      min_pp r2.y, r8.z, r8.y
      min_pp r3.w, r8.w, r2.y
      add r8.yzw, r5.xxyz, -c14.xxyz
      mad_pp r10.xyz, r10, r3.w, r8.yzww
    else
      mov_pp r10.xyz, r6
    endif
    mad_pp r2.y, r4.w, -c27.x, c27.y
    mul_pp r2.y, r2.y, r4.w
    mul_pp r10.w, r2.y, c27.z
    texldl_pp r11, r10, s0
    add_pp r2.y, r11.w, -c25.w
    mad_pp r2.y, c15.w, r2.y, r2.w
    mul_pp r2.y, r2.y, c15.x
    mul_pp r8.yzw, r11.xxyz, r2.y
    mov r3.w, c13.w
    if_lt r3.w, c27.w
      if_lt -c18.w, r8.x
        nrm_pp r12.xyz, r6
        add r13.xyz, -r5, c16
        rcp r14.x, r12.x
        rcp r14.y, r12.y
        rcp r14.z, r12.z
        mul_pp r13.xyz, r13, r14
        add r15.xyz, -r5, c17
        mul_pp r14.xyz, r14, r15
        cmp_pp r13.xyz, -r12, r14, r13
        min_pp r3.w, r13.y, r13.x
        min_pp r5.w, r13.z, r3.w
        add r5.xyz, r5, -c18
        mad_pp r10.xyz, r12, r5.w, r5
      else
        mov_pp r10.xyz, r6
      endif
      texldl_pp r5, r10, s1
      add_pp r3.w, r5.w, -c25.w
      mad_pp r2.w, c19.w, r3.w, r2.w
      mul_pp r2.w, r2.w, c19.x
      mul_pp r5.xyz, r5, r2.w
      mad r6.xyz, r2.y, r11, -r5
      mad_pp r8.yzw, c13.w, r6.xxyz, r5.xxyz
    endif
    mul_pp r5.xyz, r2.z, r8.yzww
    mad_pp r2.xyw, v1.xyzz, -r2.x, c4.xyzz
    dp3_pp r3.w, r2.xyww, r2.xyww
    add r5.w, -r3.w, c28.x
    rsq_pp r3.w, r3.w
    cmp_pp r3.w, r5.w, c28.y, r3.w
    mul_pp r2.xyw, r2, r3.w
    dp3_pp r3.w, r3, -r4
    dp3_sat_pp r4.x, r3, c4
    dp3_sat_pp r3.x, r3, r2.xyww
    dp3_sat_pp r2.x, c4, r2.xyww
    mul_pp r2.y, r2.x, r2.x
    dp2add_pp r2.y, r2.y, r4.w, c28.z
    add_pp r2.w, -r4.x, c25.w
    mul_pp r3.y, r2.w, r2.w
    mul_pp r3.y, r3.y, r3.y
    mul_pp r2.w, r2.w, r3.y
    mad_pp r2.w, r2.y, r2.w, c25.w
    add_pp r3.y, -r3_abs.w, c25.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.y, r2.y, r3.y, c25.w
    mul_pp r2.y, r2.y, r2.w
    mul_pp r2.y, r4.x, r2.y
    mul_pp r2.w, r4.w, r4.w
    mad_pp r3.z, r4.w, -r4.w, c25.w
    mad_pp r4.y, r3_abs.w, r3.z, r2.w
    mad_pp r3.z, r4.x, r3.z, r2.w
    mul_pp r3.z, r3.z, r3_abs.w
    mad r3.z, r4.x, r4.y, r3.z
    add r3.z, r3.z, c28.w
    rcp r3.z, r3.z
    mul_pp r3.z, r3.z, -c28.z
    mul_pp r3.w, r2.w, r2.w
    mad_pp r4.y, r3.x, r3.w, -r3.x
    mad_pp r3.x, r4.y, r3.x, c25.w
    mul r3.w, r3.w, c29.x
    mad r3.x, r3.x, r3.x, c29.y
    rcp r3.x, r3.x
    mul_pp r3.x, r3.x, r3.w
    mul r3.x, r3.x, r3.z
    mul_pp r3.z, r3.x, c29.z
    mad r3.x, r3.x, -c29.z, c29.w
    rsq r3.z, r3.z
    rcp_pp r3.z, r3.z
    cmp_pp r3.x, r3.x, c30.x, r3.z
    mul_pp r3.x, r4.x, r3.x
    mul_pp r2.w, r2.w, r4.w
    mad_pp r2.w, r2.w, -c30.y, c30.z
    dp3_pp r3.z, r0, r0
    cmp r3.z, -r3.z, c30.w, c30.z
    mul_pp r3.x, r3.z, r3.x
    add_pp r1.w, -r1.w, c25.w
    mad_sat_pp r0.w, r0.w, c23.x, r1.w
    mul_pp r4.xyz, r2.y, r7
    mad_pp r4.xyz, r9, r2.z, r4
    mul_pp r3.xzw, r7.xyyz, r3.x
    add_pp r1.w, -r2.x, c25.w
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.x, r2.x, r2.x
    mul_pp r1.w, r1.w, r2.x
    lrp_pp r2.xyz, r1.w, c25.w, r0
    mul_pp r2.xyz, r2, r3.xzww
    mad_pp r1.xyz, r1, r4, r2
    mul_pp r2.xyz, r5, r2.w
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp r0.xyz, r2, r4, r1
    mad_sat r0.w, v7.x, c11.z, c11.w
    add r0.xyz, r0, -c10
    mad_pp oC0.xyz, r0.w, r0, c10
    mov_pp oC0.w, c25.w

// approximately 187 instruction slots used (7 texture, 180 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 181 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogColor at 0
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 6 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 7 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[8], immediateIndexed
      dcl_constantbuffer CB7[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v2.w
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r3.x, v2.xyzx, v2.xyzx
  10: rsq r3.x, r3.x
  11: mul r3.yzw, r3.xxxx, v2.xxyz
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r4.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r5.x, r5.xyzx, r5.xyzx
  22: sqrt r5.x, r5.x
  23: add r5.x, -r4.w, r5.x
  24: mad r4.w, cb3[25].w, r5.x, r4.w
  25: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  26: eq r5.x, cb7[0].x, l(1.000000)
  27: if_nz r5.x
  28:   eq r5.y, cb7[0].y, l(1.000000)
  29:   mul r6.xyz, v4.wwww, cb7[2].xyzx
  30:   mad r6.xyz, cb7[1].xyzx, v3.wwww, r6.xyzx
  31:   mad r6.xyz, cb7[3].xyzx, v5.wwww, r6.xyzx
  32:   add r6.xyz, r6.xyzx, cb7[4].xyzx
  33:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  34:   add r5.yzw, r5.yyzw, -cb7[6].xxyz
  35:   mul r6.yzw, r5.yyzw, cb7[5].xxyz
  36:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  37:   mad r5.z, cb7[0].z, l(0.500000), l(0.750000)
  38:   max r6.x, r5.z, r5.y
  39:   sample r6.xyzw, r6.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r5.y, r6.xyzw, cb2[45].xyzw
  44: div r5.zw, v7.xxxy, v7.wwww
  45: sample r6.xyzw, r5.zwzz, t1.xyzw, s4
  46: add_sat r4.w, r4.w, r6.x
  47: min r5.y, r4.w, r5.y
  48: movc r4.w, r5.x, r5.y, r4.w
  49: sample r6.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.y, -cb0[9].y, l(1.000000)
  51: mad r5.y, r6.y, cb0[9].y, r5.y
  52: mad r5.z, -r0.w, cb0[9].x, l(1.000000)
  53: dp3 r5.w, r3.yzwy, r2.xyzx
  54: add r5.w, r5.w, r5.w
  55: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  56: mul r7.xyz, r4.wwww, cb0[2].xyzx
  57: if_nz r5.x
  58:   eq r4.w, cb7[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb7[2].xyzx
  60:   mad r8.xyz, cb7[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb7[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb7[4].xyzx
  63:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb7[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb7[5].xxyz
  66:   mul r4.w, r8.y, l(0.250000)
  67:   mul r5.x, cb7[0].z, l(0.500000)
  68:   mad r5.w, -cb7[0].z, l(0.500000), l(0.250000)
  69:   max r4.w, r4.w, r5.x
  70:   min r8.x, r5.w, r4.w
  71:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[38].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[39].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[40].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb6[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb6[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb6[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb6[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.z
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 115: add r4.w, r9.w, l(-1.000000)
 116: mad r4.w, cb6[3].w, r4.w, l(1.000000)
 117: mul r4.w, r4.w, cb6[3].x
 118: mul r10.xyz, r9.xyzx, r4.wwww
 119: lt r5.x, cb6[1].w, l(0.999990)
 120: if_nz r5.x
 121:   lt r5.x, l(0.000000), cb6[6].w
 122:   if_nz r5.x
 123:     dp3 r5.x, r6.xyzx, r6.xyzx
 124:     rsq r5.x, r5.x
 125:     mul r11.xyz, r5.xxxx, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb6[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb6[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r5.x, r12.y, r12.x
 133:     min r5.x, r12.z, r5.x
 134:     add r4.xyz, r4.xyzx, -cb6[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 136:   endif 
 137:   sample_l r6.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 138:   add r2.w, r6.w, l(-1.000000)
 139:   mad r2.w, cb6[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb6[7].x
 141:   mul r4.xyz, r6.xyzx, r2.wwww
 142:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb6[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.yyyy, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 147: dp3 r2.w, r6.xyzx, r6.xyzx
 148: max r2.w, r2.w, l(0.001000)
 149: rsq r2.w, r2.w
 150: mul r6.xyz, r2.wwww, r6.xyzx
 151: dp3 r2.w, r2.xyzx, -r3.yzwy
 152: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.zzzz
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.y, -r3.x, l(1.000000)
 159: mul r3.z, r3.y, r3.y
 160: mul r3.z, r3.z, r3.z
 161: mul r3.y, r3.y, r3.z
 162: mad r3.y, r2.z, r3.y, l(1.000000)
 163: add r3.z, -|r2.w|, l(1.000000)
 164: mul r3.w, r3.z, r3.z
 165: mul r3.w, r3.w, r3.w
 166: mul r3.z, r3.z, r3.w
 167: mad r2.z, r2.z, r3.z, l(1.000000)
 168: mul r2.z, r2.z, r3.y
 169: mul r3.y, r5.z, r5.z
 170: mad r3.w, -r5.z, r5.z, l(1.000000)
 171: mad r4.w, |r2.w|, r3.w, r3.y
 172: mad r3.w, r3.x, r3.w, r3.y
 173: mul r2.w, |r2.w|, r3.w
 174: mad r2.w, r3.x, r4.w, r2.w
 175: add r2.w, r2.w, l(0.000010)
 176: div r2.w, l(0.500000), r2.w
 177: mul r3.w, r3.y, r3.y
 178: mad r4.w, r2.x, r3.w, -r2.x
 179: mad r2.x, r4.w, r2.x, l(1.000000)
 180: mul r3.w, r3.w, l(0.318310)
 181: mad r2.x, r2.x, r2.x, l(0.000000)
 182: div r2.x, r3.w, r2.x
 183: mul r2.x, r2.x, r2.w
 184: mul r2.x, r2.x, l(3.141593)
 185: max r2.x, r2.x, l(0.000100)
 186: sqrt r2.x, r2.x
 187: mul r2.xz, r3.xxxx, r2.xxzx
 188: mul r2.w, r3.y, r5.z
 189: mad r2.w, -r2.w, l(0.280000), l(1.000000)
 190: dp3 r3.x, r0.xyzx, r0.xyzx
 191: ne r3.x, r3.x, l(0.000000)
 192: and r3.x, r3.x, l(0x3f800000)
 193: mul r2.x, r2.x, r3.x
 194: mad r0.w, r0.w, cb0[9].x, -r1.w
 195: add_sat r0.w, r0.w, l(1.000000)
 196: mul r3.xyw, r2.zzzz, r7.xyxz
 197: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 198: mul r5.xyz, r7.xyzx, r2.xxxx
 199: add r1.w, -r2.y, l(1.000000)
 200: mul r2.x, r1.w, r1.w
 201: mul r2.x, r2.x, r2.x
 202: mul r1.w, r1.w, r2.x
 203: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 204: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 205: mul r2.xyz, r2.xyzx, r5.xyzx
 206: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 207: mul r2.xyz, r4.xyzx, r2.wwww
 208: add r3.xyw, -r0.xyxz, r0.wwww
 209: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 210: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 211: div r0.w, v2.w, cb1[5].y
 212: add r0.w, -r0.w, l(1.000000)
 213: mul r0.w, r0.w, cb1[5].z
 214: max r0.w, r0.w, l(0.000000)
 215: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 216: add r0.xyz, r0.xyzx, -cb5[0].xyzx
 217: mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
 218: mov o0.w, l(1.000000)
 219: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 169 math, 7 textures, 14 branches
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 21
Float _Glossiness at 23
Vector4 _LightColor0 at 20
Vector4 _LightShadowData at 8
Float _Metallic at 22
Float _OcclusionStrength at 24
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4
Vector4 unity_FogColor at 10
Vector4 unity_FogParams at 11
Vector4 unity_SHAb at 7
Vector4 unity_SHAg at 6
Vector4 unity_SHAr at 5
Vector4 unity_ShadowFadeCenterAndType at 9
Vector4 unity_SpecCube0_BoxMax at 12
Vector4 unity_SpecCube0_BoxMin at 13
Vector4 unity_SpecCube0_HDR at 15
Vector4 unity_SpecCube0_ProbePosition at 14
Vector4 unity_SpecCube1_BoxMax at 16
Vector4 unity_SpecCube1_BoxMin at 17
Vector4 unity_SpecCube1_HDR at 19
Vector4 unity_SpecCube1_ProbePosition at 18

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_ShadowMapTexture" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogColor;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_ShadowFadeCenterAndType;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _WorldSpaceLightPos0          c4       1
//   unity_SHAr                    c5       1
//   unity_SHAg                    c6       1
//   unity_SHAb                    c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_FogColor                c10      1
//   unity_FogParams               c11      1
//   unity_SpecCube0_BoxMax        c12      1
//   unity_SpecCube0_BoxMin        c13      1
//   unity_SpecCube0_ProbePosition c14      1
//   unity_SpecCube0_HDR           c15      1
//   unity_SpecCube1_BoxMax        c16      1
//   unity_SpecCube1_BoxMin        c17      1
//   unity_SpecCube1_ProbePosition c18      1
//   unity_SpecCube1_HDR           c19      1
//   _LightColor0                  c20      1
//   _Color                        c21      1
//   _Metallic                     c22      1
//   _Glossiness                   c23      1
//   _OcclusionStrength            c24      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//   _ShadowMapTexture             s4       1
//

    ps_3_0
    def c25, -0.220916301, 0.220916301, 0.779083729, 1
    def c26, 0, 0.416666657, 1.05499995, -0.0549999997
    def c27, 0.699999988, 1.70000005, 6, 0.999989986
    def c28, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c29, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c30, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5_pp v5.xyz
    dcl_texcoord6 v6
    dcl_texcoord7 v7.x
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c21
    mov r2, c25
    mad_pp r0.xyz, c21, r0, r2.x
    mad_pp r0.xyz, c22.x, r0, r2.y
    mad_pp r0.w, c22.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r3.xyz, v4
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r2.xyz, r1.w, v1
    mov_pp r4.x, v2.w
    mov_pp r4.y, v3.w
    mov_pp r4.z, v4.w
    add r5.xyz, -r4, c3
    dp3 r4.w, r5, c2
    add r5.xyz, r4, -c9
    dp3 r5.x, r5, r5
    rsq r5.x, r5.x
    rcp r5.x, r5.x
    lrp r6.x, c9.w, r5.x, r4.w
    mad_sat_pp r4.w, r6.x, c8.z, c8.w
    texldp_pp r5, v6, s4
    add_sat_pp r4.w, r4.w, r5.x
    texld_pp r5, v0, s3
    add_pp r5.x, r2.w, -c24.x
    mad_pp r5.x, r5.y, c24.x, r5.x
    add_pp r5.y, r2.w, -c23.x
    dp3_pp r5.z, r2, r3
    add_pp r5.z, r5.z, r5.z
    mad_pp r6.xyz, r3, -r5.z, r2
    mul_pp r7.xyz, r4.w, c20
    mov r3.w, c25.w
    dp4_pp r8.x, c5, r3
    dp4_pp r8.y, c6, r3
    dp4_pp r8.z, c7, r3
    add_pp r8.xyz, r8, v5
    max_pp r9.xyz, r8, c26.x
    log_pp r8.x, r9.x
    log_pp r8.y, r9.y
    log_pp r8.z, r9.z
    mul_pp r8.xyz, r8, c26.y
    exp_pp r9.x, r8.x
    exp_pp r9.y, r8.y
    exp_pp r9.z, r8.z
    mad_pp r8.xyz, r9, c26.z, c26.w
    max_pp r9.xyz, r8, c26.x
    mov r8.x, c26.x
    if_lt -c14.w, r8.x
      nrm_pp r10.xyz, r6
      add r8.yzw, -r4.xxyz, c12.xxyz
      rcp r11.x, r10.x
      rcp r11.y, r10.y
      rcp r11.z, r10.z
      mul_pp r8.yzw, r8, r11.xxyz
      add r12.xyz, -r4, c13
      mul_pp r11.xyz, r11, r12
      cmp_pp r8.yzw, -r10.xxyz, r11.xxyz, r8
      min_pp r3.w, r8.z, r8.y
      min_pp r4.w, r8.w, r3.w
      add r8.yzw, r4.xxyz, -c14.xxyz
      mad_pp r10.xyz, r10, r4.w, r8.yzww
    else
      mov_pp r10.xyz, r6
    endif
    mad_pp r3.w, r5.y, -c27.x, c27.y
    mul_pp r3.w, r3.w, r5.y
    mul_pp r10.w, r3.w, c27.z
    texldl_pp r11, r10, s0
    add_pp r3.w, r11.w, -c25.w
    mad_pp r3.w, c15.w, r3.w, r2.w
    mul_pp r3.w, r3.w, c15.x
    mul_pp r8.yzw, r11.xxyz, r3.w
    mov r4.w, c13.w
    if_lt r4.w, c27.w
      if_lt -c18.w, r8.x
        nrm_pp r12.xyz, r6
        add r13.xyz, -r4, c16
        rcp r14.x, r12.x
        rcp r14.y, r12.y
        rcp r14.z, r12.z
        mul_pp r13.xyz, r13, r14
        add r15.xyz, -r4, c17
        mul_pp r14.xyz, r14, r15
        cmp_pp r13.xyz, -r12, r14, r13
        min_pp r4.w, r13.y, r13.x
        min_pp r5.z, r13.z, r4.w
        add r4.xyz, r4, -c18
        mad_pp r10.xyz, r12, r5.z, r4
      else
        mov_pp r10.xyz, r6
      endif
      texldl_pp r4, r10, s1
      add_pp r4.w, r4.w, -c25.w
      mad_pp r2.w, c19.w, r4.w, r2.w
      mul_pp r2.w, r2.w, c19.x
      mul_pp r4.xyz, r4, r2.w
      mad r6.xyz, r3.w, r11, -r4
      mad_pp r8.yzw, c13.w, r6.xxyz, r4.xxyz
    endif
    mul_pp r4.xyz, r5.x, r8.yzww
    mad_pp r6.xyz, v1, -r1.w, c4
    dp3_pp r1.w, r6, r6
    add r2.w, -r1.w, c28.x
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c28.y, r1.w
    mul_pp r6.xyz, r1.w, r6
    dp3_pp r1.w, r3, -r2
    dp3_sat_pp r2.x, r3, c4
    dp3_sat_pp r2.y, r3, r6
    dp3_sat_pp r2.z, c4, r6
    mul_pp r2.w, r2.z, r2.z
    dp2add_pp r2.w, r2.w, r5.y, c28.z
    add_pp r3.x, -r2.x, c25.w
    mul_pp r3.y, r3.x, r3.x
    mul_pp r3.y, r3.y, r3.y
    mul_pp r3.x, r3.x, r3.y
    mad_pp r3.x, r2.w, r3.x, c25.w
    add_pp r3.y, -r1_abs.w, c25.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.w, r2.w, r3.y, c25.w
    mul_pp r2.w, r2.w, r3.x
    mul_pp r2.w, r2.x, r2.w
    mul_pp r3.x, r5.y, r5.y
    mad_pp r3.z, r5.y, -r5.y, c25.w
    mad_pp r3.w, r1_abs.w, r3.z, r3.x
    mad_pp r3.z, r2.x, r3.z, r3.x
    mul_pp r1.w, r1_abs.w, r3.z
    mad r1.w, r2.x, r3.w, r1.w
    add r1.w, r1.w, c28.w
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, -c28.z
    mul_pp r3.z, r3.x, r3.x
    mad_pp r3.w, r2.y, r3.z, -r2.y
    mad_pp r2.y, r3.w, r2.y, c25.w
    mul r3.z, r3.z, c29.x
    mad r2.y, r2.y, r2.y, c29.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, r3.z
    mul r1.w, r1.w, r2.y
    mul_pp r2.y, r1.w, c29.z
    mad r1.w, r1.w, -c29.z, c29.w
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r1.w, r1.w, c30.x, r2.y
    mul_pp r1.w, r2.x, r1.w
    mul_pp r2.x, r3.x, r5.y
    mad_pp r2.x, r2.x, -c30.y, c30.z
    dp3_pp r2.y, r0, r0
    cmp r2.y, -r2.y, c30.w, c30.z
    mul_pp r1.w, r1.w, r2.y
    add_pp r0.w, -r0.w, c25.w
    add_sat_pp r0.w, r0.w, c23.x
    mul_pp r3.xzw, r2.w, r7.xyyz
    mad_pp r3.xzw, r9.xyyz, r5.x, r3
    mul_pp r5.xyz, r7, r1.w
    add_pp r1.w, -r2.z, c25.w
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.w, r1.w, r2.y
    lrp_pp r2.yzw, r1.w, c25.w, r0.xxyz
    mul_pp r2.yzw, r2, r5.xxyz
    mad_pp r1.xyz, r1, r3.xzww, r2.yzww
    mul_pp r2.xyz, r4, r2.x
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp r0.xyz, r2, r4, r1
    mad_sat r0.w, v7.x, c11.z, c11.w
    add r0.xyz, r0, -c10
    mad_pp oC0.xyz, r0.w, r0, c10
    mov_pp oC0.w, c25.w

// approximately 187 instruction slots used (7 texture, 180 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 182 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogColor at 0
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 6 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 7 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[8], immediateIndexed
      dcl_constantbuffer CB7[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v2.w
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r3.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r4.w, r5.xyzx, r5.xyzx
  22: sqrt r4.w, r4.w
  23: add r4.w, -r3.w, r4.w
  24: mad r3.w, cb3[25].w, r4.w, r3.w
  25: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  26: eq r4.w, cb7[0].x, l(1.000000)
  27: if_nz r4.w
  28:   eq r5.x, cb7[0].y, l(1.000000)
  29:   mul r5.yzw, v4.wwww, cb7[2].xxyz
  30:   mad r5.yzw, cb7[1].xxyz, v3.wwww, r5.yyzw
  31:   mad r5.yzw, cb7[3].xxyz, v5.wwww, r5.yyzw
  32:   add r5.yzw, r5.yyzw, cb7[4].xxyz
  33:   movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
  34:   add r5.xyz, r5.xyzx, -cb7[6].xyzx
  35:   mul r5.yzw, r5.xxyz, cb7[5].xxyz
  36:   mad r5.y, r5.y, l(0.250000), l(0.750000)
  37:   mad r6.x, cb7[0].z, l(0.500000), l(0.750000)
  38:   max r5.x, r5.y, r6.x
  39:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r5.x, r5.xyzw, cb2[45].xyzw
  44: div r5.yz, v7.xxyx, v7.wwww
  45: sample r6.xyzw, r5.yzyy, t1.xyzw, s4
  46: add_sat r3.w, r3.w, r6.x
  47: min r5.x, r3.w, r5.x
  48: movc r3.w, r4.w, r5.x, r3.w
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.x, -cb0[9].y, l(1.000000)
  51: mad r5.x, r5.y, cb0[9].y, r5.x
  52: add r5.y, -cb0[8].w, l(1.000000)
  53: dp3 r5.z, r3.xyzx, r2.xyzx
  54: add r5.z, r5.z, r5.z
  55: mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
  56: mul r7.xyz, r3.wwww, cb0[2].xyzx
  57: if_nz r4.w
  58:   eq r3.w, cb7[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb7[2].xyzx
  60:   mad r8.xyz, cb7[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb7[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb7[4].xyzx
  63:   movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb7[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb7[5].xxyz
  66:   mul r3.w, r8.y, l(0.250000)
  67:   mul r4.w, cb7[0].z, l(0.500000)
  68:   mad r5.z, -cb7[0].z, l(0.500000), l(0.250000)
  69:   max r3.w, r3.w, r4.w
  70:   min r8.x, r5.z, r3.w
  71:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[38].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[39].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[40].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb6[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb6[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb6[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb6[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.y, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.y
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 115: add r3.w, r9.w, l(-1.000000)
 116: mad r3.w, cb6[3].w, r3.w, l(1.000000)
 117: mul r3.w, r3.w, cb6[3].x
 118: mul r10.xyz, r9.xyzx, r3.wwww
 119: lt r4.w, cb6[1].w, l(0.999990)
 120: if_nz r4.w
 121:   lt r4.w, l(0.000000), cb6[6].w
 122:   if_nz r4.w
 123:     dp3 r4.w, r6.xyzx, r6.xyzx
 124:     rsq r4.w, r4.w
 125:     mul r11.xyz, r4.wwww, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb6[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb6[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r4.w, r12.y, r12.x
 133:     min r4.w, r12.z, r4.w
 134:     add r4.xyz, r4.xyzx, -cb6[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
 136:   endif 
 137:   sample_l r4.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 138:   add r2.w, r4.w, l(-1.000000)
 139:   mad r2.w, cb6[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb6[7].x
 141:   mul r4.xyz, r4.xyzx, r2.wwww
 142:   mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb6[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.xxxx, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
 147: dp3 r1.w, r6.xyzx, r6.xyzx
 148: max r1.w, r1.w, l(0.001000)
 149: rsq r1.w, r1.w
 150: mul r6.xyz, r1.wwww, r6.xyzx
 151: dp3 r1.w, r2.xyzx, -r3.xyzx
 152: dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.yyyy
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.x, -r2.w, l(1.000000)
 159: mul r3.y, r3.x, r3.x
 160: mul r3.y, r3.y, r3.y
 161: mul r3.x, r3.x, r3.y
 162: mad r3.x, r2.z, r3.x, l(1.000000)
 163: add r3.y, -|r1.w|, l(1.000000)
 164: mul r3.z, r3.y, r3.y
 165: mul r3.z, r3.z, r3.z
 166: mul r3.y, r3.y, r3.z
 167: mad r2.z, r2.z, r3.y, l(1.000000)
 168: mul r2.z, r2.z, r3.x
 169: mul r2.z, r2.w, r2.z
 170: mul r3.x, r5.y, r5.y
 171: mad r3.z, -r5.y, r5.y, l(1.000000)
 172: mad r3.w, |r1.w|, r3.z, r3.x
 173: mad r3.z, r2.w, r3.z, r3.x
 174: mul r1.w, |r1.w|, r3.z
 175: mad r1.w, r2.w, r3.w, r1.w
 176: add r1.w, r1.w, l(0.000010)
 177: div r1.w, l(0.500000), r1.w
 178: mul r3.z, r3.x, r3.x
 179: mad r3.w, r2.x, r3.z, -r2.x
 180: mad r2.x, r3.w, r2.x, l(1.000000)
 181: mul r3.z, r3.z, l(0.318310)
 182: mad r2.x, r2.x, r2.x, l(0.000000)
 183: div r2.x, r3.z, r2.x
 184: mul r1.w, r1.w, r2.x
 185: mul r1.w, r1.w, l(3.141593)
 186: max r1.w, r1.w, l(0.000100)
 187: sqrt r1.w, r1.w
 188: mul r1.w, r2.w, r1.w
 189: mul r2.x, r3.x, r5.y
 190: mad r2.x, -r2.x, l(0.280000), l(1.000000)
 191: dp3 r2.w, r0.xyzx, r0.xyzx
 192: ne r2.w, r2.w, l(0.000000)
 193: and r2.w, r2.w, l(0x3f800000)
 194: mul r1.w, r1.w, r2.w
 195: add r0.w, -r0.w, cb0[8].w
 196: add_sat r0.w, r0.w, l(1.000000)
 197: mul r3.xzw, r2.zzzz, r7.xxyz
 198: mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
 199: mul r5.xyz, r7.xyzx, r1.wwww
 200: add r1.w, -r2.y, l(1.000000)
 201: mul r2.y, r1.w, r1.w
 202: mul r2.y, r2.y, r2.y
 203: mul r1.w, r1.w, r2.y
 204: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 205: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 206: mul r2.yzw, r2.yyzw, r5.xxyz
 207: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 208: mul r2.xyz, r4.xyzx, r2.xxxx
 209: add r3.xzw, -r0.xxyz, r0.wwww
 210: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 211: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 212: div r0.w, v2.w, cb1[5].y
 213: add r0.w, -r0.w, l(1.000000)
 214: mul r0.w, r0.w, cb1[5].z
 215: max r0.w, r0.w, l(0.000000)
 216: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 217: add r0.xyz, r0.xyzx, -cb5[0].xyzx
 218: mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
 219: mov o0.w, l(1.000000)
 220: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 160 math, 6 textures, 14 branches
Vector4 _Color at 15
Float _GlossMapScale at 17
Vector4 _LightColor0 at 14
Float _Metallic at 16
Float _OcclusionStrength at 18
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_FogColor at 4
Vector4 unity_FogParams at 5
Vector4 unity_SHAb at 3
Vector4 unity_SHAg at 2
Vector4 unity_SHAr at 1
Vector4 unity_SpecCube0_BoxMax at 6
Vector4 unity_SpecCube0_BoxMin at 7
Vector4 unity_SpecCube0_HDR at 9
Vector4 unity_SpecCube0_ProbePosition at 8
Vector4 unity_SpecCube1_BoxMax at 10
Vector4 unity_SpecCube1_BoxMin at 11
Vector4 unity_SpecCube1_HDR at 13
Vector4 unity_SpecCube1_ProbePosition at 12

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogColor;
//   float4 unity_FogParams;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   _WorldSpaceLightPos0          c0       1
//   unity_SHAr                    c1       1
//   unity_SHAg                    c2       1
//   unity_SHAb                    c3       1
//   unity_FogColor                c4       1
//   unity_FogParams               c5       1
//   unity_SpecCube0_BoxMax        c6       1
//   unity_SpecCube0_BoxMin        c7       1
//   unity_SpecCube0_ProbePosition c8       1
//   unity_SpecCube0_HDR           c9       1
//   unity_SpecCube1_BoxMax        c10      1
//   unity_SpecCube1_BoxMin        c11      1
//   unity_SpecCube1_ProbePosition c12      1
//   unity_SpecCube1_HDR           c13      1
//   _LightColor0                  c14      1
//   _Color                        c15      1
//   _Metallic                     c16      1
//   _GlossMapScale                c17      1
//   _OcclusionStrength            c18      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//

    ps_3_0
    def c19, -0.220916301, 0.220916301, 0.779083729, 1
    def c20, 0, 0.416666657, 1.05499995, -0.0549999997
    def c21, 0.699999988, 1.70000005, 6, 0.999989986
    def c22, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c23, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c24, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5_pp v5.xyz
    dcl_texcoord7 v6.x
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c15
    mov r2, c19
    mad_pp r0.xyz, c15, r0, r2.x
    mad_pp r0.xyz, c16.x, r0, r2.y
    mad_pp r1.w, c16.x, -r2.z, r2.z
    mul_pp r1.xyz, r1.w, r1
    nrm_pp r3.xyz, v4
    dp3_pp r2.x, v1, v1
    rsq_pp r2.x, r2.x
    mul_pp r4.xyz, r2.x, v1
    texld_pp r5, v0, s3
    add_pp r2.y, r2.w, -c18.x
    mad_pp r2.y, r5.y, c18.x, r2.y
    mad_pp r2.z, r0.w, -c17.x, r2.w
    dp3_pp r4.w, r4, r3
    add_pp r4.w, r4.w, r4.w
    mad_pp r5.xyz, r3, -r4.w, r4
    mov r3.w, c19.w
    dp4_pp r6.x, c1, r3
    dp4_pp r6.y, c2, r3
    dp4_pp r6.z, c3, r3
    add_pp r6.xyz, r6, v5
    max_pp r7.xyz, r6, c20.x
    log_pp r6.x, r7.x
    log_pp r6.y, r7.y
    log_pp r6.z, r7.z
    mul_pp r6.xyz, r6, c20.y
    exp_pp r7.x, r6.x
    exp_pp r7.y, r6.y
    exp_pp r7.z, r6.z
    mad_pp r6.xyz, r7, c20.z, c20.w
    max_pp r7.xyz, r6, c20.x
    mov r6.x, c20.x
    if_lt -c8.w, r6.x
      nrm_pp r8.xyz, r5
      mov_pp r9.x, v2.w
      mov_pp r9.y, v3.w
      mov_pp r9.z, v4.w
      add r6.yzw, -r9.xxyz, c6.xxyz
      rcp r10.x, r8.x
      rcp r10.y, r8.y
      rcp r10.z, r8.z
      mul_pp r6.yzw, r6, r10.xxyz
      add r11.xyz, -r9, c7
      mul_pp r10.xyz, r10, r11
      cmp_pp r6.yzw, -r8.xxyz, r10.xxyz, r6
      min_pp r3.w, r6.z, r6.y
      min_pp r4.w, r6.w, r3.w
      add r6.yzw, r9.xxyz, -c8.xxyz
      mad_pp r8.xyz, r8, r4.w, r6.yzww
    else
      mov_pp r8.xyz, r5
    endif
    mad_pp r3.w, r2.z, -c21.x, c21.y
    mul_pp r3.w, r2.z, r3.w
    mul_pp r8.w, r3.w, c21.z
    texldl_pp r9, r8, s0
    add_pp r3.w, r9.w, -c19.w
    mad_pp r3.w, c9.w, r3.w, r2.w
    mul_pp r3.w, r3.w, c9.x
    mul_pp r6.yzw, r9.xxyz, r3.w
    mov r4.w, c7.w
    if_lt r4.w, c21.w
      if_lt -c12.w, r6.x
        nrm_pp r10.xyz, r5
        mov_pp r11.x, v2.w
        mov_pp r11.y, v3.w
        mov_pp r11.z, v4.w
        add r12.xyz, -r11, c10
        rcp r13.x, r10.x
        rcp r13.y, r10.y
        rcp r13.z, r10.z
        mul_pp r12.xyz, r12, r13
        add r14.xyz, -r11, c11
        mul_pp r13.xyz, r13, r14
        cmp_pp r12.xyz, -r10, r13, r12
        min_pp r4.w, r12.y, r12.x
        min_pp r5.w, r12.z, r4.w
        add r11.xyz, r11, -c12
        mad_pp r8.xyz, r10, r5.w, r11
      else
        mov_pp r8.xyz, r5
      endif
      texldl_pp r5, r8, s1
      add_pp r4.w, r5.w, -c19.w
      mad_pp r2.w, c13.w, r4.w, r2.w
      mul_pp r2.w, r2.w, c13.x
      mul_pp r5.xyz, r5, r2.w
      mad r8.xyz, r3.w, r9, -r5
      mad_pp r6.yzw, c7.w, r8.xxyz, r5.xxyz
    endif
    mul_pp r5.xyz, r2.y, r6.yzww
    mad_pp r6.xyz, v1, -r2.x, c0
    dp3_pp r2.x, r6, r6
    add r2.w, -r2.x, c22.x
    rsq_pp r2.x, r2.x
    cmp_pp r2.x, r2.w, c22.y, r2.x
    mul_pp r6.xyz, r2.x, r6
    dp3_pp r2.x, r3, -r4
    dp3_sat_pp r2.w, r3, c0
    dp3_sat_pp r3.x, r3, r6
    dp3_sat_pp r3.y, c0, r6
    mul_pp r3.z, r3.y, r3.y
    dp2add_pp r3.z, r3.z, r2.z, c22.z
    add_pp r3.w, -r2.w, c19.w
    mul_pp r4.x, r3.w, r3.w
    mul_pp r4.x, r4.x, r4.x
    mul_pp r3.w, r3.w, r4.x
    mad_pp r3.w, r3.z, r3.w, c19.w
    add_pp r4.x, -r2_abs.x, c19.w
    mul_pp r4.y, r4.x, r4.x
    mul_pp r4.y, r4.y, r4.y
    mul_pp r4.x, r4.x, r4.y
    mad_pp r3.z, r3.z, r4.x, c19.w
    mul_pp r3.z, r3.z, r3.w
    mul_pp r3.z, r2.w, r3.z
    mul_pp r3.w, r2.z, r2.z
    mad_pp r4.y, r2.z, -r2.z, c19.w
    mad_pp r4.z, r2_abs.x, r4.y, r3.w
    mad_pp r4.y, r2.w, r4.y, r3.w
    mul_pp r2.x, r2_abs.x, r4.y
    mad r2.x, r2.w, r4.z, r2.x
    add r2.x, r2.x, c22.w
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, -c22.z
    mul_pp r4.y, r3.w, r3.w
    mad_pp r4.z, r3.x, r4.y, -r3.x
    mad_pp r3.x, r4.z, r3.x, c19.w
    mul r4.y, r4.y, c23.x
    mad r3.x, r3.x, r3.x, c23.y
    rcp r3.x, r3.x
    mul_pp r3.x, r3.x, r4.y
    mul r2.xz, r2, r3.xyww
    mul_pp r3.x, r2.x, c23.z
    mad r2.x, r2.x, -c23.z, c23.w
    rsq r3.x, r3.x
    rcp_pp r3.x, r3.x
    cmp_pp r2.x, r2.x, c24.x, r3.x
    mul_pp r2.x, r2.w, r2.x
    mad_pp r2.z, r2.z, -c24.y, c24.z
    dp3_pp r2.w, r0, r0
    cmp r2.w, -r2.w, c24.w, c24.z
    mul_pp r2.x, r2.w, r2.x
    add_pp r1.w, -r1.w, c19.w
    mad_sat_pp r0.w, r0.w, c17.x, r1.w
    mul_pp r3.xzw, r3.z, c14.xyyz
    mad_pp r3.xzw, r7.xyyz, r2.y, r3
    mul_pp r2.xyw, r2.x, c14.xyzz
    add_pp r1.w, -r3.y, c19.w
    mul_pp r3.y, r1.w, r1.w
    mul_pp r3.y, r3.y, r3.y
    mul_pp r1.w, r1.w, r3.y
    lrp_pp r4.yzw, r1.w, c19.w, r0.xxyz
    mul_pp r2.xyw, r2, r4.yzzw
    mad_pp r1.xyz, r1, r3.xzww, r2.xyww
    mul_pp r2.xyz, r5, r2.z
    lrp_pp r3.xyz, r4.x, r0.w, r0
    mad_pp r0.xyz, r2, r3, r1
    mad_sat r0.w, v6.x, c5.z, c5.w
    add r0.xyz, r0, -c4
    mad_pp oC0.xyz, r0.w, r0, c4
    mov_pp oC0.w, c19.w

// approximately 178 instruction slots used (6 texture, 172 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 170 math, 15 temp registers, 6 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 3 {
  Vector4 unity_FogColor at 0
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 4 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[8], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r3.x, v2.xyzx, v2.xyzx
  10: rsq r3.x, r3.x
  11: mul r3.yzw, r3.xxxx, v2.xxyz
  12: eq r4.x, cb5[0].x, l(1.000000)
  13: if_nz r4.x
  14:   eq r4.y, cb5[0].y, l(1.000000)
  15:   mul r5.xyz, v4.wwww, cb5[2].xyzx
  16:   mad r5.xyz, cb5[1].xyzx, v3.wwww, r5.xyzx
  17:   mad r5.xyz, cb5[3].xyzx, v5.wwww, r5.xyzx
  18:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  19:   mov r6.y, v3.w
  20:   mov r6.z, v4.w
  21:   mov r6.w, v5.w
  22:   movc r4.yzw, r4.yyyy, r5.xxyz, r6.yyzw
  23:   add r4.yzw, r4.yyzw, -cb5[6].xxyz
  24:   mul r5.yzw, r4.yyzw, cb5[5].xxyz
  25:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  26:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  27:   max r5.x, r4.z, r4.y
  28:   sample r5.xyzw, r5.xzwx, t4.xyzw, s1
  29: else 
  30:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r4.y, r5.xyzw, cb2[45].xyzw
  33: sample r5.xyzw, v1.xyxx, t1.xyzw, s3
  34: add r4.z, -cb0[9].y, l(1.000000)
  35: mad r4.z, r5.y, cb0[9].y, r4.z
  36: mad r4.w, -r0.w, cb0[9].x, l(1.000000)
  37: dp3 r5.x, r3.yzwy, r2.xyzx
  38: add r5.x, r5.x, r5.x
  39: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.yzwy
  40: mul r6.xyz, r4.yyyy, cb0[2].xyzx
  41: if_nz r4.x
  42:   eq r4.x, cb5[0].y, l(1.000000)
  43:   mul r7.xyz, v4.wwww, cb5[2].xyzx
  44:   mad r7.xyz, cb5[1].xyzx, v3.wwww, r7.xyzx
  45:   mad r7.xyz, cb5[3].xyzx, v5.wwww, r7.xyzx
  46:   add r7.xyz, r7.xyzx, cb5[4].xyzx
  47:   mov r8.y, v3.w
  48:   mov r8.z, v4.w
  49:   mov r8.w, v5.w
  50:   movc r7.xyz, r4.xxxx, r7.xyzx, r8.yzwy
  51:   add r7.xyz, r7.xyzx, -cb5[6].xyzx
  52:   mul r7.yzw, r7.xxyz, cb5[5].xxyz
  53:   mul r4.x, r7.y, l(0.250000)
  54:   mul r4.y, cb5[0].z, l(0.500000)
  55:   mad r5.w, -cb5[0].z, l(0.500000), l(0.250000)
  56:   max r4.x, r4.y, r4.x
  57:   min r7.x, r5.w, r4.x
  58:   sample r8.xyzw, r7.xzwx, t4.xyzw, s1
  59:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  60:   sample r9.xyzw, r9.xyzx, t4.xyzw, s1
  61:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  62:   sample r7.xyzw, r7.xyzx, t4.xyzw, s1
  63:   mov r2.w, l(1.000000)
  64:   dp4 r8.x, r8.xyzw, r2.xyzw
  65:   dp4 r8.y, r9.xyzw, r2.xyzw
  66:   dp4 r8.z, r7.xyzw, r2.xyzw
  67: else 
  68:   mov r2.w, l(1.000000)
  69:   dp4 r8.x, cb2[38].xyzw, r2.xyzw
  70:   dp4 r8.y, cb2[39].xyzw, r2.xyzw
  71:   dp4 r8.z, cb2[40].xyzw, r2.xyzw
  72: endif 
  73: add r7.xyz, r8.xyzx, v6.xyzx
  74: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: log r7.xyz, r7.xyzx
  76: mul r7.xyz, r7.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  77: exp r7.xyz, r7.xyzx
  78: mad r7.xyz, r7.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  79: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  80: lt r2.w, l(0.000000), cb4[2].w
  81: if_nz r2.w
  82:   dp3 r2.w, r5.xyzx, r5.xyzx
  83:   rsq r2.w, r2.w
  84:   mul r8.xyz, r2.wwww, r5.xyzx
  85:   mov r9.x, v3.w
  86:   mov r9.y, v4.w
  87:   mov r9.z, v5.w
  88:   add r10.xyz, -r9.xyzx, cb4[0].xyzx
  89:   div r10.xyz, r10.xyzx, r8.xyzx
  90:   add r11.xyz, -r9.xyzx, cb4[1].xyzx
  91:   div r11.xyz, r11.xyzx, r8.xyzx
  92:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  93:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  94:   min r2.w, r10.y, r10.x
  95:   min r2.w, r10.z, r2.w
  96:   add r9.xyz, r9.xyzx, -cb4[2].xyzx
  97:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
  98: else 
  99:   mov r8.xyz, r5.xyzx
 100: endif 
 101: mad r2.w, -r4.w, l(0.700000), l(1.700000)
 102: mul r2.w, r2.w, r4.w
 103: mul r2.w, r2.w, l(6.000000)
 104: sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r2.w
 105: add r4.x, r8.w, l(-1.000000)
 106: mad r4.x, cb4[3].w, r4.x, l(1.000000)
 107: mul r4.x, r4.x, cb4[3].x
 108: mul r9.xyz, r8.xyzx, r4.xxxx
 109: lt r4.y, cb4[1].w, l(0.999990)
 110: if_nz r4.y
 111:   lt r4.y, l(0.000000), cb4[6].w
 112:   if_nz r4.y
 113:     dp3 r4.y, r5.xyzx, r5.xyzx
 114:     rsq r4.y, r4.y
 115:     mul r10.xyz, r4.yyyy, r5.xyzx
 116:     mov r11.x, v3.w
 117:     mov r11.y, v4.w
 118:     mov r11.z, v5.w
 119:     add r12.xyz, -r11.xyzx, cb4[4].xyzx
 120:     div r12.xyz, r12.xyzx, r10.xyzx
 121:     add r13.xyz, -r11.xyzx, cb4[5].xyzx
 122:     div r13.xyz, r13.xyzx, r10.xyzx
 123:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 124:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 125:     min r4.y, r12.y, r12.x
 126:     min r4.y, r12.z, r4.y
 127:     add r11.xyz, r11.xyzx, -cb4[6].xyzx
 128:     mad r5.xyz, r10.xyzx, r4.yyyy, r11.xyzx
 129:   endif 
 130:   sample_l r5.xyzw, r5.xyzx, t3.xyzw, s0, r2.w
 131:   add r2.w, r5.w, l(-1.000000)
 132:   mad r2.w, cb4[7].w, r2.w, l(1.000000)
 133:   mul r2.w, r2.w, cb4[7].x
 134:   mul r5.xyz, r5.xyzx, r2.wwww
 135:   mad r8.xyz, r4.xxxx, r8.xyzx, -r5.xyzx
 136:   mad r9.xyz, cb4[1].wwww, r8.xyzx, r5.xyzx
 137: endif 
 138: mul r5.xyz, r4.zzzz, r9.xyzx
 139: mad r8.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 140: dp3 r2.w, r8.xyzx, r8.xyzx
 141: max r2.w, r2.w, l(0.001000)
 142: rsq r2.w, r2.w
 143: mul r8.xyz, r2.wwww, r8.xyzx
 144: dp3 r2.w, r2.xyzx, -r3.yzwy
 145: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 146: dp3_sat r2.x, r2.xyzx, r8.xyzx
 147: dp3_sat r2.y, cb2[0].xyzx, r8.xyzx
 148: mul r2.z, r2.y, r2.y
 149: dp2 r2.z, r2.zzzz, r4.wwww
 150: add r2.z, r2.z, l(-0.500000)
 151: add r3.y, -r3.x, l(1.000000)
 152: mul r3.z, r3.y, r3.y
 153: mul r3.z, r3.z, r3.z
 154: mul r3.y, r3.y, r3.z
 155: mad r3.y, r2.z, r3.y, l(1.000000)
 156: add r3.z, -|r2.w|, l(1.000000)
 157: mul r3.w, r3.z, r3.z
 158: mul r3.w, r3.w, r3.w
 159: mul r3.z, r3.z, r3.w
 160: mad r2.z, r2.z, r3.z, l(1.000000)
 161: mul r2.z, r2.z, r3.y
 162: mul r3.y, r4.w, r4.w
 163: mad r3.w, -r4.w, r4.w, l(1.000000)
 164: mad r4.x, |r2.w|, r3.w, r3.y
 165: mad r3.w, r3.x, r3.w, r3.y
 166: mul r2.w, |r2.w|, r3.w
 167: mad r2.w, r3.x, r4.x, r2.w
 168: add r2.w, r2.w, l(0.000010)
 169: div r2.w, l(0.500000), r2.w
 170: mul r3.w, r3.y, r3.y
 171: mad r4.x, r2.x, r3.w, -r2.x
 172: mad r2.x, r4.x, r2.x, l(1.000000)
 173: mul r3.w, r3.w, l(0.318310)
 174: mad r2.x, r2.x, r2.x, l(0.000000)
 175: div r2.x, r3.w, r2.x
 176: mul r2.x, r2.x, r2.w
 177: mul r2.x, r2.x, l(3.141593)
 178: max r2.x, r2.x, l(0.000100)
 179: sqrt r2.x, r2.x
 180: mul r2.xz, r3.xxxx, r2.xxzx
 181: mul r2.w, r3.y, r4.w
 182: mad r2.w, -r2.w, l(0.280000), l(1.000000)
 183: dp3 r3.x, r0.xyzx, r0.xyzx
 184: ne r3.x, r3.x, l(0.000000)
 185: and r3.x, r3.x, l(0x3f800000)
 186: mul r2.x, r2.x, r3.x
 187: mad r0.w, r0.w, cb0[9].x, -r1.w
 188: add_sat r0.w, r0.w, l(1.000000)
 189: mul r3.xyw, r2.zzzz, r6.xyxz
 190: mad r3.xyw, r7.xyxz, r4.zzzz, r3.xyxw
 191: mul r4.xyz, r6.xyzx, r2.xxxx
 192: add r1.w, -r2.y, l(1.000000)
 193: mul r2.x, r1.w, r1.w
 194: mul r2.x, r2.x, r2.x
 195: mul r1.w, r1.w, r2.x
 196: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 197: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 198: mul r2.xyz, r2.xyzx, r4.xyzx
 199: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 200: mul r2.xyz, r5.xyzx, r2.wwww
 201: add r3.xyw, -r0.xyxz, r0.wwww
 202: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 203: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 204: div r0.w, v7.z, cb1[5].y
 205: add r0.w, -r0.w, l(1.000000)
 206: mul r0.w, r0.w, cb1[5].z
 207: max r0.w, r0.w, l(0.000000)
 208: mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
 209: add r0.xyz, r0.xyzx, -cb3[0].xyzx
 210: mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
 211: mov o0.w, l(1.000000)
 212: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL VERTEXLIGHT_ON _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 70 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 25
Vector4 _MainTex_ST at 24
Float _UVSec at 26
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 22
Vector4 unity_SHBg at 21
Vector4 unity_SHBr at 20
Vector4 unity_SHC at 23

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   unity_4LightPosX0    c16      1
//   unity_4LightPosY0    c17      1
//   unity_4LightPosZ0    c18      1
//   unity_4LightAtten0   c19      1
//   unity_SHBr           c20      1
//   unity_SHBg           c21      1
//   unity_SHBb           c22      1
//   unity_SHC            c23      1
//   _MainTex_ST          c24      1
//   _DetailAlbedoMap_ST  c25      1
//   _UVSec               c26      1
//

    vs_3_0
    def c27, 1, 0, 9.99999997e-007, 0.0125228781
    def c28, 0.305306017, 0.682171106, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c27.xxxy, c27.yyyx
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp4 r1.w, c7, r0
    dp4 r6.x, c8, r1
    dp4 r6.y, c9, r1
    dp4 r6.z, c10, r1
    dp4 r6.w, c11, r1
    mad o1.xy, v2, c24, c24.zwzw
    abs r0.x, c26.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c25.xyxy, c25
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    add r1, -r0.z, c18
    mov o5.w, r0.z
    add r2, -r0.x, c16
    add r3, -r0.y, c17
    mul r4.xyz, c13, v1.y
    mad r4.xyz, v1.x, c12, r4
    mad r4.xyz, v1.z, c14, r4
    nrm r5.xyz, r4
    mul r4, r3, r5.y
    mul r3, r3, r3
    mad r3, r2, r2, r3
    mad r2, r2, r5.x, r4
    mad r2, r1, r5.z, r2
    mad r1, r1, r1, r3
    max r1, r1, c27.z
    rsq r3.x, r1.x
    rsq r3.y, r1.y
    rsq r3.z, r1.z
    rsq r3.w, r1.w
    mov r4.x, c27.x
    mad r1, r1, c19, r4.x
    mul r2, r2, r3
    max r2, r2, c27.y
    rcp r3.x, r1.x
    rcp r3.y, r1.y
    rcp r3.z, r1.z
    rcp r3.w, r1.w
    mul r1, r2, r3
    mul r2.xyz, r1.y, c1
    mad r2.xyz, c0, r1.x, r2
    mad r1.xyz, c2, r1.z, r2
    mad r1.xyz, c3, r1.w, r1
    mad r2.xyz, r1, c28.x, c28.y
    mad r2.xyz, r1, r2, c27.w
    mul r0.z, r5.y, r5.y
    mad r0.z, r5.x, r5.x, -r0.z
    mul r3, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r4.x, c20, r3
    dp4 r4.y, c21, r3
    dp4 r4.z, c22, r3
    mad r3.xyz, c23, r0.z, r4
    mad o6.xyz, r1, r2, r3
    mov r0.w, c27.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c27.y
    mov o7.xy, c27.y
    mad o0.xy, r6.w, c255, r6
    mov o0.zw, r6

// approximately 71 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 52 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r1.xyzx, r1.xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: mov o5.xyz, r1.xyzx
  28: add r2.xyzw, -r0.xxxx, cb2[2].xyzw
  29: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  30: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  31: mul r4.xyzw, r1.yyyy, r3.xyzw
  32: mul r3.xyzw, r3.xyzw, r3.xyzw
  33: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  34: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  35: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  36: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  37: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  38: rsq r3.xyzw, r0.xyzw
  39: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  40: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  41: mul r2.xyzw, r2.xyzw, r3.xyzw
  42: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  43: mul r0.xyzw, r0.xyzw, r2.xyzw
  44: mul r2.xyz, r0.yyyy, cb2[7].xyzx
  45: mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
  46: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
  47: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  48: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  49: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  50: mul r0.w, r1.y, r1.y
  51: mad r0.w, r1.x, r1.x, -r0.w
  52: mul r1.xyzw, r1.yzzx, r1.xyzz
  53: dp4 r3.x, cb2[41].xyzw, r1.xyzw
  54: dp4 r3.y, cb2[42].xyzw, r1.xyzw
  55: dp4 r3.z, cb2[43].xyzw, r1.xyzw
  56: mad r1.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  57: mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
  58: mov o6.w, l(0)
  59: mov o7.xy, l(0,0,0,0)
  60: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 70 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 25
Vector4 _MainTex_ST at 24
Float _UVSec at 26
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 22
Vector4 unity_SHBg at 21
Vector4 unity_SHBr at 20
Vector4 unity_SHC at 23

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   unity_4LightPosX0    c16      1
//   unity_4LightPosY0    c17      1
//   unity_4LightPosZ0    c18      1
//   unity_4LightAtten0   c19      1
//   unity_SHBr           c20      1
//   unity_SHBg           c21      1
//   unity_SHBb           c22      1
//   unity_SHC            c23      1
//   _MainTex_ST          c24      1
//   _DetailAlbedoMap_ST  c25      1
//   _UVSec               c26      1
//

    vs_3_0
    def c27, 1, 0, 9.99999997e-007, 0.0125228781
    def c28, 0.305306017, 0.682171106, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c27.xxxy, c27.yyyx
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp4 r1.w, c7, r0
    dp4 r6.x, c8, r1
    dp4 r6.y, c9, r1
    dp4 r6.z, c10, r1
    dp4 r6.w, c11, r1
    mad o1.xy, v2, c24, c24.zwzw
    abs r0.x, c26.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c25.xyxy, c25
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    add r1, -r0.z, c18
    mov o5.w, r0.z
    add r2, -r0.x, c16
    add r3, -r0.y, c17
    mul r4.xyz, c13, v1.y
    mad r4.xyz, v1.x, c12, r4
    mad r4.xyz, v1.z, c14, r4
    nrm r5.xyz, r4
    mul r4, r3, r5.y
    mul r3, r3, r3
    mad r3, r2, r2, r3
    mad r2, r2, r5.x, r4
    mad r2, r1, r5.z, r2
    mad r1, r1, r1, r3
    max r1, r1, c27.z
    rsq r3.x, r1.x
    rsq r3.y, r1.y
    rsq r3.z, r1.z
    rsq r3.w, r1.w
    mov r4.x, c27.x
    mad r1, r1, c19, r4.x
    mul r2, r2, r3
    max r2, r2, c27.y
    rcp r3.x, r1.x
    rcp r3.y, r1.y
    rcp r3.z, r1.z
    rcp r3.w, r1.w
    mul r1, r2, r3
    mul r2.xyz, r1.y, c1
    mad r2.xyz, c0, r1.x, r2
    mad r1.xyz, c2, r1.z, r2
    mad r1.xyz, c3, r1.w, r1
    mad r2.xyz, r1, c28.x, c28.y
    mad r2.xyz, r1, r2, c27.w
    mul r0.z, r5.y, r5.y
    mad r0.z, r5.x, r5.x, -r0.z
    mul r3, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r4.x, c20, r3
    dp4 r4.y, c21, r3
    dp4 r4.z, c22, r3
    mad r3.xyz, c23, r0.z, r4
    mad o6.xyz, r1, r2, r3
    mov r0.w, c27.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c27.y
    mov o7.xy, c27.y
    mad o0.xy, r6.w, c255, r6
    mov o0.zw, r6

// approximately 71 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 52 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r1.xyzx, r1.xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: mov o5.xyz, r1.xyzx
  28: add r2.xyzw, -r0.xxxx, cb2[2].xyzw
  29: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  30: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  31: mul r4.xyzw, r1.yyyy, r3.xyzw
  32: mul r3.xyzw, r3.xyzw, r3.xyzw
  33: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  34: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  35: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  36: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  37: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  38: rsq r3.xyzw, r0.xyzw
  39: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  40: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  41: mul r2.xyzw, r2.xyzw, r3.xyzw
  42: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  43: mul r0.xyzw, r0.xyzw, r2.xyzw
  44: mul r2.xyz, r0.yyyy, cb2[7].xyzx
  45: mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
  46: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
  47: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  48: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  49: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  50: mul r0.w, r1.y, r1.y
  51: mad r0.w, r1.x, r1.x, -r0.w
  52: mul r1.xyzw, r1.yzzx, r1.xyzz
  53: dp4 r3.x, cb2[41].xyzw, r1.xyzw
  54: dp4 r3.y, cb2[42].xyzw, r1.xyzw
  55: dp4 r3.z, cb2[43].xyzw, r1.xyzw
  56: mad r1.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  57: mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
  58: mov o6.w, l(0)
  59: mov o7.xy, l(0,0,0,0)
  60: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 75 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 26
Vector4 _MainTex_ST at 25
Vector4 _ProjectionParams at 16
Float _UVSec at 27
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 20
Vector4 unity_4LightPosX0 at 17
Vector4 unity_4LightPosY0 at 18
Vector4 unity_4LightPosZ0 at 19
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 23
Vector4 unity_SHBg at 22
Vector4 unity_SHBr at 21
Vector4 unity_SHC at 24

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   _ProjectionParams    c16      1
//   unity_4LightPosX0    c17      1
//   unity_4LightPosY0    c18      1
//   unity_4LightPosZ0    c19      1
//   unity_4LightAtten0   c20      1
//   unity_SHBr           c21      1
//   unity_SHBg           c22      1
//   unity_SHBb           c23      1
//   unity_SHC            c24      1
//   _MainTex_ST          c25      1
//   _DetailAlbedoMap_ST  c26      1
//   _UVSec               c27      1
//

    vs_3_0
    def c28, 1, 0, 0.5, 9.99999997e-007
    def c29, 0.305306017, 0.682171106, 0.0125228781, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    mad o1.xy, v2, c25, c25.zwzw
    abs r0.x, c27.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c26.xyxy, c26
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    mad r1, v0.xyzx, c28.xxxy, c28.yyyx
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp4 r2.w, c7, r1
    dp4 r1.x, c8, r2
    dp4 r1.w, c11, r2
    mul r3.xz, r1.xyww, c28.z
    dp4 r1.y, c9, r2
    dp4 r1.z, c10, r2
    mul r2.x, r1.y, c16.x
    mov r6, r1
    mov o7.zw, r1
    mul r3.w, r2.x, c28.z
    add o7.xy, r3.z, r3.xwzw
    add r1, -r0.z, c19
    mov o5.w, r0.z
    add r2, -r0.x, c17
    add r3, -r0.y, c18
    mul r4.xyz, c13, v1.y
    mad r4.xyz, v1.x, c12, r4
    mad r4.xyz, v1.z, c14, r4
    nrm r5.xyz, r4
    mul r4, r3, r5.y
    mul r3, r3, r3
    mad r3, r2, r2, r3
    mad r2, r2, r5.x, r4
    mad r2, r1, r5.z, r2
    mad r1, r1, r1, r3
    max r1, r1, c28.w
    rsq r3.x, r1.x
    rsq r3.y, r1.y
    rsq r3.z, r1.z
    rsq r3.w, r1.w
    mov r4.x, c28.x
    mad r1, r1, c20, r4.x
    mul r2, r2, r3
    max r2, r2, c28.y
    rcp r3.x, r1.x
    rcp r3.y, r1.y
    rcp r3.z, r1.z
    rcp r3.w, r1.w
    mul r1, r2, r3
    mul r2.xyz, r1.y, c1
    mad r2.xyz, c0, r1.x, r2
    mad r1.xyz, c2, r1.z, r2
    mad r1.xyz, c3, r1.w, r1
    mad r2.xyz, r1, c29.x, c29.y
    mad r2.xyz, r1, r2, c29.z
    mul r0.z, r5.y, r5.y
    mad r0.z, r5.x, r5.x, -r0.z
    mul r3, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r4.x, c21, r3
    dp4 r4.y, c22, r3
    dp4 r4.z, c23, r3
    mad r3.xyz, c24, r0.z, r4
    mad o6.xyz, r1, r2, r3
    mov r0.w, c28.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c28.y
    mad o0.xy, r6.w, c255, r6
    mov o0.zw, r6

// approximately 76 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r2.xyzx, r2.xyzx
  26: rsq r1.w, r1.w
  27: mul r2.xyz, r1.wwww, r2.xyzx
  28: mov o5.xyz, r2.xyzx
  29: add r3.xyzw, -r1.xxxx, cb2[2].xyzw
  30: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  31: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  32: mul r5.xyzw, r2.yyyy, r4.xyzw
  33: mul r4.xyzw, r4.xyzw, r4.xyzw
  34: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  35: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  36: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  37: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  38: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  39: rsq r4.xyzw, r1.xyzw
  40: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  41: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  42: mul r3.xyzw, r3.xyzw, r4.xyzw
  43: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mul r1.xyzw, r1.xyzw, r3.xyzw
  45: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  46: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  47: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  48: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  49: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  50: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  51: mul r1.w, r2.y, r2.y
  52: mad r1.w, r2.x, r2.x, -r1.w
  53: mul r2.xyzw, r2.yzzx, r2.xyzz
  54: dp4 r4.x, cb2[41].xyzw, r2.xyzw
  55: dp4 r4.y, cb2[42].xyzw, r2.xyzw
  56: dp4 r4.z, cb2[43].xyzw, r2.xyzw
  57: mad r2.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  58: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  59: mov o6.w, l(0)
  60: mul r0.y, r0.y, cb1[5].x
  61: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  62: mov o7.zw, r0.zzzw
  63: add o7.xy, r1.zzzz, r1.xwxx
  64: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 75 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 26
Vector4 _MainTex_ST at 25
Vector4 _ProjectionParams at 16
Float _UVSec at 27
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 20
Vector4 unity_4LightPosX0 at 17
Vector4 unity_4LightPosY0 at 18
Vector4 unity_4LightPosZ0 at 19
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 23
Vector4 unity_SHBg at 22
Vector4 unity_SHBr at 21
Vector4 unity_SHC at 24

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   _ProjectionParams    c16      1
//   unity_4LightPosX0    c17      1
//   unity_4LightPosY0    c18      1
//   unity_4LightPosZ0    c19      1
//   unity_4LightAtten0   c20      1
//   unity_SHBr           c21      1
//   unity_SHBg           c22      1
//   unity_SHBb           c23      1
//   unity_SHC            c24      1
//   _MainTex_ST          c25      1
//   _DetailAlbedoMap_ST  c26      1
//   _UVSec               c27      1
//

    vs_3_0
    def c28, 1, 0, 0.5, 9.99999997e-007
    def c29, 0.305306017, 0.682171106, 0.0125228781, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    mad o1.xy, v2, c25, c25.zwzw
    abs r0.x, c27.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c26.xyxy, c26
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    mad r1, v0.xyzx, c28.xxxy, c28.yyyx
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp4 r2.w, c7, r1
    dp4 r1.x, c8, r2
    dp4 r1.w, c11, r2
    mul r3.xz, r1.xyww, c28.z
    dp4 r1.y, c9, r2
    dp4 r1.z, c10, r2
    mul r2.x, r1.y, c16.x
    mov r6, r1
    mov o7.zw, r1
    mul r3.w, r2.x, c28.z
    add o7.xy, r3.z, r3.xwzw
    add r1, -r0.z, c19
    mov o5.w, r0.z
    add r2, -r0.x, c17
    add r3, -r0.y, c18
    mul r4.xyz, c13, v1.y
    mad r4.xyz, v1.x, c12, r4
    mad r4.xyz, v1.z, c14, r4
    nrm r5.xyz, r4
    mul r4, r3, r5.y
    mul r3, r3, r3
    mad r3, r2, r2, r3
    mad r2, r2, r5.x, r4
    mad r2, r1, r5.z, r2
    mad r1, r1, r1, r3
    max r1, r1, c28.w
    rsq r3.x, r1.x
    rsq r3.y, r1.y
    rsq r3.z, r1.z
    rsq r3.w, r1.w
    mov r4.x, c28.x
    mad r1, r1, c20, r4.x
    mul r2, r2, r3
    max r2, r2, c28.y
    rcp r3.x, r1.x
    rcp r3.y, r1.y
    rcp r3.z, r1.z
    rcp r3.w, r1.w
    mul r1, r2, r3
    mul r2.xyz, r1.y, c1
    mad r2.xyz, c0, r1.x, r2
    mad r1.xyz, c2, r1.z, r2
    mad r1.xyz, c3, r1.w, r1
    mad r2.xyz, r1, c29.x, c29.y
    mad r2.xyz, r1, r2, c29.z
    mul r0.z, r5.y, r5.y
    mad r0.z, r5.x, r5.x, -r0.z
    mul r3, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r4.x, c21, r3
    dp4 r4.y, c22, r3
    dp4 r4.z, c23, r3
    mad r3.xyz, c24, r0.z, r4
    mad o6.xyz, r1, r2, r3
    mov r0.w, c28.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c28.y
    mad o0.xy, r6.w, c255, r6
    mov o0.zw, r6

// approximately 76 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r2.xyzx, r2.xyzx
  26: rsq r1.w, r1.w
  27: mul r2.xyz, r1.wwww, r2.xyzx
  28: mov o5.xyz, r2.xyzx
  29: add r3.xyzw, -r1.xxxx, cb2[2].xyzw
  30: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  31: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  32: mul r5.xyzw, r2.yyyy, r4.xyzw
  33: mul r4.xyzw, r4.xyzw, r4.xyzw
  34: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  35: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  36: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  37: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  38: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  39: rsq r4.xyzw, r1.xyzw
  40: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  41: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  42: mul r3.xyzw, r3.xyzw, r4.xyzw
  43: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mul r1.xyzw, r1.xyzw, r3.xyzw
  45: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  46: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  47: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  48: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  49: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  50: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  51: mul r1.w, r2.y, r2.y
  52: mad r1.w, r2.x, r2.x, -r1.w
  53: mul r2.xyzw, r2.yzzx, r2.xyzz
  54: dp4 r4.x, cb2[41].xyzw, r2.xyzw
  55: dp4 r4.y, cb2[42].xyzw, r2.xyzw
  56: dp4 r4.z, cb2[43].xyzw, r2.xyzw
  57: mad r2.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  58: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  59: mov o6.w, l(0)
  60: mul r0.y, r0.y, cb1[5].x
  61: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  62: mov o7.zw, r0.zzzw
  63: add o7.xy, r1.zzzz, r1.xwxx
  64: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 40 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 14
Vector4 unity_SHBg at 13
Vector4 unity_SHBr at 12
Vector4 unity_SHC at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   unity_SHBr           c12      1
//   unity_SHBg           c13      1
//   unity_SHBb           c14      1
//   unity_SHC            c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c12, r1
    dp4 r2.y, c13, r1
    dp4 r2.z, c14, r1
    mad o6.xyz, c15, r0.z, r2
    mov r0.w, c19.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c19.y
    mov o7.xy, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 41 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: mov o7.xy, l(0,0,0,0)
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 42 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 14
Vector4 unity_SHBg at 13
Vector4 unity_SHBr at 12
Vector4 unity_SHC at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   unity_SHBr           c12      1
//   unity_SHBg           c13      1
//   unity_SHBb           c14      1
//   unity_SHC            c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r4.x, c4, r1
    dp4 r4.y, c5, r1
    dp4 r4.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.y, c18.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mov o5.w, r1.z
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    nrm r2.xyz, r0.yzww
    mul r0.y, r2.y, r2.y
    mad r0.y, r2.x, r2.x, -r0.y
    mul r3, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c12, r3
    dp4 r2.y, c13, r3
    dp4 r2.z, c14, r3
    mad o6.xyz, c15, r0.y, r2
    mov r4.z, r0.x
    mov o8.x, r0.x
    mov r1.w, c19.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o6.w, c19.y
    mov o7.xy, c19.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 43 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mov r0.w, l(0)
  20: mov o3.xyzw, r0.wwwx
  21: mov o4.xyzw, r0.wwwy
  22: mov o5.w, r0.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul r0.xyz, r0.wwww, r0.xyzx
  29: mov o5.xyz, r0.xyzx
  30: mul r0.w, r0.y, r0.y
  31: mad r0.w, r0.x, r0.x, -r0.w
  32: mul r1.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  34: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  35: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  36: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  37: mov o6.w, l(0)
  38: mov o7.xy, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 46 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _MainTex_ST at 17
Vector4 _ProjectionParams at 12
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 15
Vector4 unity_SHBg at 14
Vector4 unity_SHBr at 13
Vector4 unity_SHC at 16

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   unity_SHBr           c13      1
//   unity_SHBg           c14      1
//   unity_SHBb           c15      1
//   unity_SHC            c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mad r1, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c20.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.z, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r0.z, c20.z
    add o7.xy, r3.z, r3.xwzw
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c13, r1
    dp4 r2.y, c14, r1
    dp4 r2.z, c15, r1
    mad o6.xyz, c16, r0.z, r2
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c20.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 47 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul r1.xyz, r1.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mul r1.w, r1.y, r1.y
  31: mad r1.w, r1.x, r1.x, -r1.w
  32: mul r2.xyzw, r1.yzzx, r1.xyzz
  33: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  34: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  35: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  36: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  37: mov o6.w, l(0)
  38: mul r0.y, r0.y, cb1[5].x
  39: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  40: mov o7.zw, r0.zzzw
  41: add o7.xy, r1.zzzz, r1.xwxx
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 46 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _MainTex_ST at 17
Vector4 _ProjectionParams at 12
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 15
Vector4 unity_SHBg at 14
Vector4 unity_SHBr at 13
Vector4 unity_SHC at 16

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   unity_SHBr           c13      1
//   unity_SHBg           c14      1
//   unity_SHBb           c15      1
//   unity_SHC            c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mad r1, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c20.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.z, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r0.z, c20.z
    add o7.xy, r3.z, r3.xwzw
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c13, r1
    dp4 r2.y, c14, r1
    dp4 r2.z, c15, r1
    mad o6.xyz, c16, r0.z, r2
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c20.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 47 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul r1.xyz, r1.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mul r1.w, r1.y, r1.y
  31: mad r1.w, r1.x, r1.x, -r1.w
  32: mul r2.xyzw, r1.yzzx, r1.xyzz
  33: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  34: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  35: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  36: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  37: mov o6.w, l(0)
  38: mul r0.y, r0.y, cb1[5].x
  39: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  40: mov o7.zw, r0.zzzw
  41: add o7.xy, r1.zzzz, r1.xwxx
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL FOG_LINEAR VERTEXLIGHT_ON _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 72 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 25
Vector4 _MainTex_ST at 24
Float _UVSec at 26
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 22
Vector4 unity_SHBg at 21
Vector4 unity_SHBr at 20
Vector4 unity_SHC at 23

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   unity_4LightPosX0    c16      1
//   unity_4LightPosY0    c17      1
//   unity_4LightPosZ0    c18      1
//   unity_4LightAtten0   c19      1
//   unity_SHBr           c20      1
//   unity_SHBg           c21      1
//   unity_SHBb           c22      1
//   unity_SHC            c23      1
//   _MainTex_ST          c24      1
//   _DetailAlbedoMap_ST  c25      1
//   _UVSec               c26      1
//

    vs_3_0
    def c27, 1, 0, 9.99999997e-007, 0.0125228781
    def c28, 0.305306017, 0.682171106, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c27.xxxy, c27.yyyx
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp4 r1.w, c7, r0
    dp4 r7.x, c8, r1
    dp4 r7.y, c9, r1
    dp4 r7.w, c11, r1
    dp4 r0.x, c10, r1
    mad o1.xy, v2, c24, c24.zwzw
    abs r0.y, c26.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c25.xyxy, c25
    dp4 r1.x, c4, v0
    dp4 r1.y, c5, v0
    dp4 r1.z, c6, v0
    add o2.xyz, r1, -c15
    add r2, -r1.z, c18
    mov o5.w, r1.z
    add r3, -r1.x, c16
    add r4, -r1.y, c17
    mul r0.yzw, c13.xxyz, v1.y
    mad r0.yzw, v1.x, c12.xxyz, r0
    mad r0.yzw, v1.z, c14.xxyz, r0
    nrm r5.xyz, r0.yzww
    mul r6, r4, r5.y
    mul r4, r4, r4
    mad r4, r3, r3, r4
    mad r3, r3, r5.x, r6
    mad r3, r2, r5.z, r3
    mad r2, r2, r2, r4
    max r2, r2, c27.z
    rsq r4.x, r2.x
    rsq r4.y, r2.y
    rsq r4.z, r2.z
    rsq r4.w, r2.w
    mov r6.x, c27.x
    mad r2, r2, c19, r6.x
    mul r3, r3, r4
    max r3, r3, c27.y
    rcp r4.x, r2.x
    rcp r4.y, r2.y
    rcp r4.z, r2.z
    rcp r4.w, r2.w
    mul r2, r3, r4
    mul r0.yzw, r2.y, c1.xxyz
    mad r0.yzw, c0.xxyz, r2.x, r0
    mad r0.yzw, c2.xxyz, r2.z, r0
    mad r0.yzw, c3.xxyz, r2.w, r0
    mad r2.xyz, r0.yzww, c28.x, c28.y
    mad r2.xyz, r0.yzww, r2, c27.w
    mul r1.z, r5.y, r5.y
    mad r1.z, r5.x, r5.x, -r1.z
    mul r3, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r4.x, c20, r3
    dp4 r4.y, c21, r3
    dp4 r4.z, c22, r3
    mad r3.xyz, c23, r1.z, r4
    mad o6.xyz, r0.yzww, r2, r3
    mov r7.z, r0.x
    mov o8.x, r0.x
    mov r1.w, c27.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o6.w, c27.y
    mov o7.xy, c27.y
    mad o0.xy, r7.w, c255, r7
    mov o0.zw, r7

// approximately 73 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 52 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mov r0.w, l(0)
  20: mov o3.xyzw, r0.wwwx
  21: mov o4.xyzw, r0.wwwy
  22: mov o5.w, r0.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r1.xyzx, r1.xyzx
  27: rsq r0.w, r0.w
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: add r2.xyzw, -r0.xxxx, cb2[2].xyzw
  31: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  32: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  33: mul r4.xyzw, r1.yyyy, r3.xyzw
  34: mul r3.xyzw, r3.xyzw, r3.xyzw
  35: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  36: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  37: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  38: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  39: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r3.xyzw, r0.xyzw
  41: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  43: mul r2.xyzw, r2.xyzw, r3.xyzw
  44: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r0.xyzw, r0.xyzw, r2.xyzw
  46: mul r2.xyz, r0.yyyy, cb2[7].xyzx
  47: mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
  48: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
  49: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  50: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  51: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  52: mul r0.w, r1.y, r1.y
  53: mad r0.w, r1.x, r1.x, -r0.w
  54: mul r1.xyzw, r1.yzzx, r1.xyzz
  55: dp4 r3.x, cb2[41].xyzw, r1.xyzw
  56: dp4 r3.y, cb2[42].xyzw, r1.xyzw
  57: dp4 r3.z, cb2[43].xyzw, r1.xyzw
  58: mad r1.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  59: mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
  60: mov o6.w, l(0)
  61: mov o7.xy, l(0,0,0,0)
  62: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 72 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 25
Vector4 _MainTex_ST at 24
Float _UVSec at 26
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 22
Vector4 unity_SHBg at 21
Vector4 unity_SHBr at 20
Vector4 unity_SHC at 23

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   unity_4LightPosX0    c16      1
//   unity_4LightPosY0    c17      1
//   unity_4LightPosZ0    c18      1
//   unity_4LightAtten0   c19      1
//   unity_SHBr           c20      1
//   unity_SHBg           c21      1
//   unity_SHBb           c22      1
//   unity_SHC            c23      1
//   _MainTex_ST          c24      1
//   _DetailAlbedoMap_ST  c25      1
//   _UVSec               c26      1
//

    vs_3_0
    def c27, 1, 0, 9.99999997e-007, 0.0125228781
    def c28, 0.305306017, 0.682171106, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c27.xxxy, c27.yyyx
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp4 r1.w, c7, r0
    dp4 r7.x, c8, r1
    dp4 r7.y, c9, r1
    dp4 r7.w, c11, r1
    dp4 r0.x, c10, r1
    mad o1.xy, v2, c24, c24.zwzw
    abs r0.y, c26.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c25.xyxy, c25
    dp4 r1.x, c4, v0
    dp4 r1.y, c5, v0
    dp4 r1.z, c6, v0
    add o2.xyz, r1, -c15
    add r2, -r1.z, c18
    mov o5.w, r1.z
    add r3, -r1.x, c16
    add r4, -r1.y, c17
    mul r0.yzw, c13.xxyz, v1.y
    mad r0.yzw, v1.x, c12.xxyz, r0
    mad r0.yzw, v1.z, c14.xxyz, r0
    nrm r5.xyz, r0.yzww
    mul r6, r4, r5.y
    mul r4, r4, r4
    mad r4, r3, r3, r4
    mad r3, r3, r5.x, r6
    mad r3, r2, r5.z, r3
    mad r2, r2, r2, r4
    max r2, r2, c27.z
    rsq r4.x, r2.x
    rsq r4.y, r2.y
    rsq r4.z, r2.z
    rsq r4.w, r2.w
    mov r6.x, c27.x
    mad r2, r2, c19, r6.x
    mul r3, r3, r4
    max r3, r3, c27.y
    rcp r4.x, r2.x
    rcp r4.y, r2.y
    rcp r4.z, r2.z
    rcp r4.w, r2.w
    mul r2, r3, r4
    mul r0.yzw, r2.y, c1.xxyz
    mad r0.yzw, c0.xxyz, r2.x, r0
    mad r0.yzw, c2.xxyz, r2.z, r0
    mad r0.yzw, c3.xxyz, r2.w, r0
    mad r2.xyz, r0.yzww, c28.x, c28.y
    mad r2.xyz, r0.yzww, r2, c27.w
    mul r1.z, r5.y, r5.y
    mad r1.z, r5.x, r5.x, -r1.z
    mul r3, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r4.x, c20, r3
    dp4 r4.y, c21, r3
    dp4 r4.z, c22, r3
    mad r3.xyz, c23, r1.z, r4
    mad o6.xyz, r0.yzww, r2, r3
    mov r7.z, r0.x
    mov o8.x, r0.x
    mov r1.w, c27.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o6.w, c27.y
    mov o7.xy, c27.y
    mad o0.xy, r7.w, c255, r7
    mov o0.zw, r7

// approximately 73 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 52 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mov r0.w, l(0)
  20: mov o3.xyzw, r0.wwwx
  21: mov o4.xyzw, r0.wwwy
  22: mov o5.w, r0.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r1.xyzx, r1.xyzx
  27: rsq r0.w, r0.w
  28: mul r1.xyz, r0.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: add r2.xyzw, -r0.xxxx, cb2[2].xyzw
  31: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  32: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  33: mul r4.xyzw, r1.yyyy, r3.xyzw
  34: mul r3.xyzw, r3.xyzw, r3.xyzw
  35: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  36: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  37: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  38: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  39: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r3.xyzw, r0.xyzw
  41: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  43: mul r2.xyzw, r2.xyzw, r3.xyzw
  44: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r0.xyzw, r0.xyzw, r2.xyzw
  46: mul r2.xyz, r0.yyyy, cb2[7].xyzx
  47: mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
  48: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
  49: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  50: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  51: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  52: mul r0.w, r1.y, r1.y
  53: mad r0.w, r1.x, r1.x, -r0.w
  54: mul r1.xyzw, r1.yzzx, r1.xyzz
  55: dp4 r3.x, cb2[41].xyzw, r1.xyzw
  56: dp4 r3.y, cb2[42].xyzw, r1.xyzw
  57: dp4 r3.z, cb2[43].xyzw, r1.xyzw
  58: mad r1.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  59: mad o6.xyz, r0.xyzx, r2.xyzx, r1.xyzx
  60: mov o6.w, l(0)
  61: mov o7.xy, l(0,0,0,0)
  62: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN FOG_LINEAR VERTEXLIGHT_ON _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 76 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 26
Vector4 _MainTex_ST at 25
Vector4 _ProjectionParams at 16
Float _UVSec at 27
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 20
Vector4 unity_4LightPosX0 at 17
Vector4 unity_4LightPosY0 at 18
Vector4 unity_4LightPosZ0 at 19
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 23
Vector4 unity_SHBg at 22
Vector4 unity_SHBr at 21
Vector4 unity_SHC at 24

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   _ProjectionParams    c16      1
//   unity_4LightPosX0    c17      1
//   unity_4LightPosY0    c18      1
//   unity_4LightPosZ0    c19      1
//   unity_4LightAtten0   c20      1
//   unity_SHBr           c21      1
//   unity_SHBg           c22      1
//   unity_SHBb           c23      1
//   unity_SHC            c24      1
//   _MainTex_ST          c25      1
//   _DetailAlbedoMap_ST  c26      1
//   _UVSec               c27      1
//

    vs_3_0
    def c28, 1, 0, 0.5, 9.99999997e-007
    def c29, 0.305306017, 0.682171106, 0.0125228781, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c25, c25.zwzw
    abs r0.x, c27.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c26.xyxy, c26
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    mad r1, v0.xyzx, c28.xxxy, c28.yyyx
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp4 r2.w, c7, r1
    dp4 r1.x, c8, r2
    dp4 r1.w, c11, r2
    mul r3.xz, r1.xyww, c28.z
    dp4 r1.y, c9, r2
    dp4 r1.z, c10, r2
    mul r2.x, r1.y, c16.x
    mov r6, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r2.x, c28.z
    add o7.xy, r3.z, r3.xwzw
    add r1, -r0.z, c19
    mov o5.w, r0.z
    add r2, -r0.x, c17
    add r3, -r0.y, c18
    mul r4.xyz, c13, v1.y
    mad r4.xyz, v1.x, c12, r4
    mad r4.xyz, v1.z, c14, r4
    nrm r5.xyz, r4
    mul r4, r3, r5.y
    mul r3, r3, r3
    mad r3, r2, r2, r3
    mad r2, r2, r5.x, r4
    mad r2, r1, r5.z, r2
    mad r1, r1, r1, r3
    max r1, r1, c28.w
    rsq r3.x, r1.x
    rsq r3.y, r1.y
    rsq r3.z, r1.z
    rsq r3.w, r1.w
    mov r4.x, c28.x
    mad r1, r1, c20, r4.x
    mul r2, r2, r3
    max r2, r2, c28.y
    rcp r3.x, r1.x
    rcp r3.y, r1.y
    rcp r3.z, r1.z
    rcp r3.w, r1.w
    mul r1, r2, r3
    mul r2.xyz, r1.y, c1
    mad r2.xyz, c0, r1.x, r2
    mad r1.xyz, c2, r1.z, r2
    mad r1.xyz, c3, r1.w, r1
    mad r2.xyz, r1, c29.x, c29.y
    mad r2.xyz, r1, r2, c29.z
    mul r0.z, r5.y, r5.y
    mad r0.z, r5.x, r5.x, -r0.z
    mul r3, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r4.x, c21, r3
    dp4 r4.y, c22, r3
    dp4 r4.z, c23, r3
    mad r3.xyz, c24, r0.z, r4
    mad o6.xyz, r1, r2, r3
    mov r0.w, c28.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c28.y
    mad o0.xy, r6.w, c255, r6
    mov o0.zw, r6

// approximately 77 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r2.xyzx, r2.xyzx
  27: rsq r1.w, r1.w
  28: mul r2.xyz, r1.wwww, r2.xyzx
  29: mov o5.xyz, r2.xyzx
  30: add r3.xyzw, -r1.xxxx, cb2[2].xyzw
  31: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  32: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  33: mul r5.xyzw, r2.yyyy, r4.xyzw
  34: mul r4.xyzw, r4.xyzw, r4.xyzw
  35: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  36: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  37: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  38: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r4.xyzw, r1.xyzw
  41: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  43: mul r3.xyzw, r3.xyzw, r4.xyzw
  44: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r1.xyzw, r1.xyzw, r3.xyzw
  46: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  47: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  48: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  49: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  50: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  51: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  52: mul r1.w, r2.y, r2.y
  53: mad r1.w, r2.x, r2.x, -r1.w
  54: mul r2.xyzw, r2.yzzx, r2.xyzz
  55: dp4 r4.x, cb2[41].xyzw, r2.xyzw
  56: dp4 r4.y, cb2[42].xyzw, r2.xyzw
  57: dp4 r4.z, cb2[43].xyzw, r2.xyzw
  58: mad r2.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  59: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  60: mov o6.w, l(0)
  61: mul r0.y, r0.y, cb1[5].x
  62: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  63: mov o7.zw, r0.zzzw
  64: add o7.xy, r1.zzzz, r1.xwxx
  65: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 76 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 26
Vector4 _MainTex_ST at 25
Vector4 _ProjectionParams at 16
Float _UVSec at 27
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 20
Vector4 unity_4LightPosX0 at 17
Vector4 unity_4LightPosY0 at 18
Vector4 unity_4LightPosZ0 at 19
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 23
Vector4 unity_SHBg at 22
Vector4 unity_SHBr at 21
Vector4 unity_SHC at 24

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   _ProjectionParams    c16      1
//   unity_4LightPosX0    c17      1
//   unity_4LightPosY0    c18      1
//   unity_4LightPosZ0    c19      1
//   unity_4LightAtten0   c20      1
//   unity_SHBr           c21      1
//   unity_SHBg           c22      1
//   unity_SHBb           c23      1
//   unity_SHC            c24      1
//   _MainTex_ST          c25      1
//   _DetailAlbedoMap_ST  c26      1
//   _UVSec               c27      1
//

    vs_3_0
    def c28, 1, 0, 0.5, 9.99999997e-007
    def c29, 0.305306017, 0.682171106, 0.0125228781, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c25, c25.zwzw
    abs r0.x, c27.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c26.xyxy, c26
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    mad r1, v0.xyzx, c28.xxxy, c28.yyyx
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp4 r2.w, c7, r1
    dp4 r1.x, c8, r2
    dp4 r1.w, c11, r2
    mul r3.xz, r1.xyww, c28.z
    dp4 r1.y, c9, r2
    dp4 r1.z, c10, r2
    mul r2.x, r1.y, c16.x
    mov r6, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r2.x, c28.z
    add o7.xy, r3.z, r3.xwzw
    add r1, -r0.z, c19
    mov o5.w, r0.z
    add r2, -r0.x, c17
    add r3, -r0.y, c18
    mul r4.xyz, c13, v1.y
    mad r4.xyz, v1.x, c12, r4
    mad r4.xyz, v1.z, c14, r4
    nrm r5.xyz, r4
    mul r4, r3, r5.y
    mul r3, r3, r3
    mad r3, r2, r2, r3
    mad r2, r2, r5.x, r4
    mad r2, r1, r5.z, r2
    mad r1, r1, r1, r3
    max r1, r1, c28.w
    rsq r3.x, r1.x
    rsq r3.y, r1.y
    rsq r3.z, r1.z
    rsq r3.w, r1.w
    mov r4.x, c28.x
    mad r1, r1, c20, r4.x
    mul r2, r2, r3
    max r2, r2, c28.y
    rcp r3.x, r1.x
    rcp r3.y, r1.y
    rcp r3.z, r1.z
    rcp r3.w, r1.w
    mul r1, r2, r3
    mul r2.xyz, r1.y, c1
    mad r2.xyz, c0, r1.x, r2
    mad r1.xyz, c2, r1.z, r2
    mad r1.xyz, c3, r1.w, r1
    mad r2.xyz, r1, c29.x, c29.y
    mad r2.xyz, r1, r2, c29.z
    mul r0.z, r5.y, r5.y
    mad r0.z, r5.x, r5.x, -r0.z
    mul r3, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r4.x, c21, r3
    dp4 r4.y, c22, r3
    dp4 r4.z, c23, r3
    mad r3.xyz, c24, r0.z, r4
    mad o6.xyz, r1, r2, r3
    mov r0.w, c28.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c28.y
    mad o0.xy, r6.w, c255, r6
    mov o0.zw, r6

// approximately 77 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r2.xyzx, r2.xyzx
  27: rsq r1.w, r1.w
  28: mul r2.xyz, r1.wwww, r2.xyzx
  29: mov o5.xyz, r2.xyzx
  30: add r3.xyzw, -r1.xxxx, cb2[2].xyzw
  31: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  32: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  33: mul r5.xyzw, r2.yyyy, r4.xyzw
  34: mul r4.xyzw, r4.xyzw, r4.xyzw
  35: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  36: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  37: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  38: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r4.xyzw, r1.xyzw
  41: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  43: mul r3.xyzw, r3.xyzw, r4.xyzw
  44: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r1.xyzw, r1.xyzw, r3.xyzw
  46: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  47: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  48: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  49: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  50: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  51: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  52: mul r1.w, r2.y, r2.y
  53: mad r1.w, r2.x, r2.x, -r1.w
  54: mul r2.xyzw, r2.yzzx, r2.xyzz
  55: dp4 r4.x, cb2[41].xyzw, r2.xyzw
  56: dp4 r4.y, cb2[42].xyzw, r2.xyzw
  57: dp4 r4.z, cb2[43].xyzw, r2.xyzw
  58: mad r2.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  59: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  60: mov o6.w, l(0)
  61: mul r0.y, r0.y, cb1[5].x
  62: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  63: mov o7.zw, r0.zzzw
  64: add o7.xy, r1.zzzz, r1.xwxx
  65: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 42 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 14
Vector4 unity_SHBg at 13
Vector4 unity_SHBr at 12
Vector4 unity_SHC at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   unity_SHBr           c12      1
//   unity_SHBg           c13      1
//   unity_SHBb           c14      1
//   unity_SHC            c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r4.x, c4, r1
    dp4 r4.y, c5, r1
    dp4 r4.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.y, c18.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mov o5.w, r1.z
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    nrm r2.xyz, r0.yzww
    mul r0.y, r2.y, r2.y
    mad r0.y, r2.x, r2.x, -r0.y
    mul r3, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c12, r3
    dp4 r2.y, c13, r3
    dp4 r2.z, c14, r3
    mad o6.xyz, c15, r0.y, r2
    mov r4.z, r0.x
    mov o8.x, r0.x
    mov r1.w, c19.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o6.w, c19.y
    mov o7.xy, c19.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 43 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mov r0.w, l(0)
  20: mov o3.xyzw, r0.wwwx
  21: mov o4.xyzw, r0.wwwy
  22: mov o5.w, r0.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul r0.xyz, r0.wwww, r0.xyzx
  29: mov o5.xyz, r0.xyzx
  30: mul r0.w, r0.y, r0.y
  31: mad r0.w, r0.x, r0.x, -r0.w
  32: mul r1.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  34: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  35: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  36: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  37: mov o6.w, l(0)
  38: mov o7.xy, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //         d3d9: 34 avg math (33..39)
 //        d3d11: 23 avg math (23..26)
 // Stats for Fragment shader:
 //         d3d9: 100 avg math (78..121), 4 avg texture (1..11)
 //        d3d11: 106 avg math (82..149), 3 avg texture (2..4), 2 avg branch (2..4)
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="FORWARDADD" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: POINT 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 87 math, 2 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 4
Float _Glossiness at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _Glossiness        c6       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 1, 0, 0.00100000005, 31.622776
    def c9, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c10, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    nrm_pp r0.xyz, v1
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    mad_pp r2.xyz, r1, r0.w, -r0
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c8.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c8.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r3, r1
    dp3_pp r0.x, r3, -r0
    mov r2, c7
    add_pp r0.y, r2.w, -c6.x
    mul_pp r0.z, r0.y, r0.y
    mul_pp r1.y, r0.z, r0.z
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c7.w
    mad r0.w, r0.w, r0.w, c10.x
    rcp r0.w, r0.w
    mul r1.y, r1.y, c9.w
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.y, -r0.y, c7.w
    mad_pp r1.z, r0_abs.x, r1.y, r0.z
    mad_pp r0.z, r1.x, r1.y, r0.z
    mul_pp r0.z, r0.z, r0_abs.x
    add_pp r0.x, -r0_abs.x, c7.w
    mad r0.z, r1.x, r1.z, r0.z
    add r0.z, r0.z, c9.y
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c9.z
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c10.y
    mad r0.z, r0.z, -c10.y, c10.z
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c10.w, r0.w
    mul_pp r0.z, r1.x, r0.z
    texld r3, v0, s0
    mad_pp r4.xyz, c4, r3, r2.x
    mul_pp r3.xyz, r3, c4
    mad_pp r2.xyw, c5.x, r4.xyzz, r2.y
    dp3_pp r0.w, r2.xyww, r2.xyww
    cmp r0.w, -r0.w, c8.y, c8.x
    mul_pp r0.z, r0.w, r0.z
    mad r4, v5.xyzx, c8.xxxy, c8.yyyx
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r0.w, r5, r5
    texld_pp r4, r0.w, s1
    mul_pp r4.xyz, r4.x, c3
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.w, c7.w
    mul_pp r0.w, r1.w, r1.w
    dp2add_pp r0.y, r0.w, r0.y, c9.x
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    lrp_pp r1.yzw, r0.z, c7.w, r2.xxyw
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.y, r0.x, c7.w
    add_pp r0.z, -r1.x, c7.w
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.y, r0.y, r0.z, c7.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c5.x, -r2.z, r2.z
    mul_pp r2.xyz, r0.w, r3
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c7.w

// approximately 88 instruction slots used (2 texture, 86 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  23:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  26:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r0.w, r1.w
  29:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r5.xyzw, cb1[45].xyzw
  34: dp3 r1.w, r4.xyzx, r4.xyzx
  35: sample r4.xyzw, r1.wwww, t1.xyzw, s2
  36: mul r0.w, r0.w, r4.x
  37: mov r4.x, v3.w
  38: mov r4.y, v4.w
  39: mov r4.z, v5.w
  40: dp3 r1.w, r4.xyzx, r4.xyzx
  41: rsq r1.w, r1.w
  42: mul r5.xyz, r1.wwww, r4.xyzx
  43: mul r6.xyz, r0.wwww, cb0[2].xyzx
  44: add r0.w, -cb0[8].w, l(1.000000)
  45: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  46: dp3 r1.w, r4.xyzx, r4.xyzx
  47: max r1.w, r1.w, l(0.001000)
  48: rsq r1.w, r1.w
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: dp3 r1.w, r2.xyzx, -r3.xyzx
  51: dp3_sat r2.w, r2.xyzx, r5.xyzx
  52: dp3_sat r2.x, r2.xyzx, r4.xyzx
  53: dp3_sat r2.y, r5.xyzx, r4.xyzx
  54: mul r2.z, r2.y, r2.y
  55: dp2 r2.z, r2.zzzz, r0.wwww
  56: add r2.z, r2.z, l(-0.500000)
  57: add r3.x, -r2.w, l(1.000000)
  58: mul r3.y, r3.x, r3.x
  59: mul r3.y, r3.y, r3.y
  60: mul r3.x, r3.x, r3.y
  61: mad r3.x, r2.z, r3.x, l(1.000000)
  62: add r3.y, -|r1.w|, l(1.000000)
  63: mul r3.z, r3.y, r3.y
  64: mul r3.z, r3.z, r3.z
  65: mul r3.y, r3.y, r3.z
  66: mad r2.z, r2.z, r3.y, l(1.000000)
  67: mul r2.z, r2.z, r3.x
  68: mul r2.z, r2.w, r2.z
  69: mul r3.x, r0.w, r0.w
  70: mad r0.w, -r0.w, r0.w, l(1.000000)
  71: mad r3.y, |r1.w|, r0.w, r3.x
  72: mad r0.w, r2.w, r0.w, r3.x
  73: mul r0.w, r0.w, |r1.w|
  74: mad r0.w, r2.w, r3.y, r0.w
  75: add r0.w, r0.w, l(0.000010)
  76: div r0.w, l(0.500000), r0.w
  77: mul r1.w, r3.x, r3.x
  78: mad r3.x, r2.x, r1.w, -r2.x
  79: mad r2.x, r3.x, r2.x, l(1.000000)
  80: mul r1.w, r1.w, l(0.318310)
  81: mad r2.x, r2.x, r2.x, l(0.000000)
  82: div r1.w, r1.w, r2.x
  83: mul r0.w, r0.w, r1.w
  84: mul r0.w, r0.w, l(3.141593)
  85: max r0.w, r0.w, l(0.000100)
  86: sqrt r0.w, r0.w
  87: mul r0.w, r2.w, r0.w
  88: dp3 r1.w, r0.xyzx, r0.xyzx
  89: ne r1.w, r1.w, l(0.000000)
  90: and r1.w, r1.w, l(0x3f800000)
  91: mul r0.w, r0.w, r1.w
  92: mul r2.xzw, r2.zzzz, r6.xxyz
  93: mul r3.xyz, r6.xyzx, r0.wwww
  94: add r0.w, -r2.y, l(1.000000)
  95: mul r1.w, r0.w, r0.w
  96: mul r1.w, r1.w, r1.w
  97: mul r0.w, r0.w, r1.w
  98: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  99: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 100: mul r0.xyz, r0.xyzx, r3.xyzx
 101: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 102: mov o0.w, l(1.000000)
 103: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 78 math, 1 textures
Vector4 _Color at 1
Float _GlossMapScale at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "_MainTex" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   _LightColor0   c0       1
//   _Color         c1       1
//   _Metallic      c2       1
//   _GlossMapScale c3       1
//   _MainTex       s0       1
//

    ps_3_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c6, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c7, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_2d s0
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r0.yzw, v1.xxyz, -r0.x, r1.xxyz
    mul_pp r2.xyz, r0.x, v1
    dp3_pp r0.x, r0.yzww, r0.yzww
    add r1.w, -r0.x, c5.x
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c5.y, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r0
    dp3_sat_pp r0.x, r1, r0
    dp3_sat_pp r0.y, r3, r1
    dp3_pp r0.z, r3, -r2
    texld r1, v0, s0
    mov r2, c4
    mad_pp r1.w, r1.w, -c3.x, r2.w
    mul_pp r2.w, r1.w, r1.w
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c4.w
    mad r0.w, r0.w, r0.w, c6.y
    rcp r0.w, r0.w
    mul r3.x, r3.x, c6.x
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.w, -r1.w, c4.w
    mad_pp r3.y, r0_abs.z, r3.x, r2.w
    mad_pp r2.w, r0.y, r3.x, r2.w
    mul_pp r2.w, r0_abs.z, r2.w
    add_pp r0.z, -r0_abs.z, c4.w
    mad r2.w, r0.y, r3.y, r2.w
    add r2.w, r2.w, c5.w
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, -c5.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c6.z
    mad r0.w, r0.w, -c6.z, c6.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c7.x, r2.w
    mul_pp r0.w, r0.y, r0.w
    mad_pp r3.xyz, c1, r1, r2.x
    mul_pp r1.xyz, r1, c1
    mad_pp r2.xyw, c2.x, r3.xyzz, r2.y
    dp3_pp r3.x, r2.xyww, r2.xyww
    cmp r3.x, -r3.x, c7.y, c7.z
    mul_pp r0.w, r0.w, r3.x
    mul_pp r3.xyz, r0.w, c0
    add_pp r0.w, -r0.x, c4.w
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r1.w, c5.z
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r4.xyz, r0.w, c4.w, r2.xyww
    mul_pp r2.xyw, r3.xyzz, r4.xyzz
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.z, r0.x, r0.z, c4.w
    add_pp r0.w, -r0.y, c4.w
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    mad_pp r0.x, r0.x, r0.w, c4.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, c0
    mad_pp r0.w, c2.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    mad_pp oC0.xyz, r1, r0, r2.xyww
    mov_pp oC0.w, c4.w

// approximately 78 instruction slots used (1 texture, 77 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 82 math, 7 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: eq r2.w, cb2[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r2.w, r3.w
  25:   sample r4.xyzw, r4.xzwx, t1.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r4.xyzw, cb1[45].xyzw
  30: mul r4.xyz, r2.wwww, cb0[2].xyzx
  31: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  32: mov r5.x, v3.w
  33: mov r5.y, v4.w
  34: mov r5.z, v5.w
  35: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  36: dp3 r1.w, r6.xyzx, r6.xyzx
  37: max r1.w, r1.w, l(0.001000)
  38: rsq r1.w, r1.w
  39: mul r6.xyz, r1.wwww, r6.xyzx
  40: dp3 r1.w, r2.xyzx, -r3.xyzx
  41: dp3_sat r2.w, r2.xyzx, r5.xyzx
  42: dp3_sat r2.x, r2.xyzx, r6.xyzx
  43: dp3_sat r2.y, r5.xyzx, r6.xyzx
  44: mul r2.z, r2.y, r2.y
  45: dp2 r2.z, r2.zzzz, r0.wwww
  46: add r2.z, r2.z, l(-0.500000)
  47: add r3.x, -r2.w, l(1.000000)
  48: mul r3.y, r3.x, r3.x
  49: mul r3.y, r3.y, r3.y
  50: mul r3.x, r3.x, r3.y
  51: mad r3.x, r2.z, r3.x, l(1.000000)
  52: add r3.y, -|r1.w|, l(1.000000)
  53: mul r3.z, r3.y, r3.y
  54: mul r3.z, r3.z, r3.z
  55: mul r3.y, r3.y, r3.z
  56: mad r2.z, r2.z, r3.y, l(1.000000)
  57: mul r2.z, r2.z, r3.x
  58: mul r2.z, r2.w, r2.z
  59: mul r3.x, r0.w, r0.w
  60: mad r0.w, -r0.w, r0.w, l(1.000000)
  61: mad r3.y, |r1.w|, r0.w, r3.x
  62: mad r0.w, r2.w, r0.w, r3.x
  63: mul r0.w, r0.w, |r1.w|
  64: mad r0.w, r2.w, r3.y, r0.w
  65: add r0.w, r0.w, l(0.000010)
  66: div r0.w, l(0.500000), r0.w
  67: mul r1.w, r3.x, r3.x
  68: mad r3.x, r2.x, r1.w, -r2.x
  69: mad r2.x, r3.x, r2.x, l(1.000000)
  70: mul r1.w, r1.w, l(0.318310)
  71: mad r2.x, r2.x, r2.x, l(0.000000)
  72: div r1.w, r1.w, r2.x
  73: mul r0.w, r0.w, r1.w
  74: mul r0.w, r0.w, l(3.141593)
  75: max r0.w, r0.w, l(0.000100)
  76: sqrt r0.w, r0.w
  77: mul r0.w, r2.w, r0.w
  78: dp3 r1.w, r0.xyzx, r0.xyzx
  79: ne r1.w, r1.w, l(0.000000)
  80: and r1.w, r1.w, l(0x3f800000)
  81: mul r0.w, r0.w, r1.w
  82: mul r2.xzw, r2.zzzz, r4.xxyz
  83: mul r3.xyz, r4.xyzx, r0.wwww
  84: add r0.w, -r2.y, l(1.000000)
  85: mul r1.w, r0.w, r0.w
  86: mul r1.w, r1.w, r1.w
  87: mul r0.w, r0.w, r1.w
  88: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  89: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  90: mul r0.xyz, r0.xyzx, r3.xyzx
  91: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  92: mov o0.w, l(1.000000)
  93: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 78 math, 1 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "_MainTex" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   _LightColor0 c0       1
//   _Color       c1       1
//   _Metallic    c2       1
//   _Glossiness  c3       1
//   _MainTex     s0       1
//

    ps_3_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c6, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c7, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_2d s0
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r0.yzw, v1.xxyz, -r0.x, r1.xxyz
    mul_pp r2.xyz, r0.x, v1
    dp3_pp r0.x, r0.yzww, r0.yzww
    add r1.w, -r0.x, c5.x
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c5.y, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r0
    dp3_sat_pp r0.x, r1, r0
    dp3_sat_pp r0.y, r3, r1
    dp3_pp r0.z, r3, -r2
    mov r1, c4
    add_pp r1.w, r1.w, -c3.x
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c4.w
    mad r0.w, r0.w, r0.w, c6.y
    rcp r0.w, r0.w
    mul r2.y, r2.y, c6.x
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.w, -r1.w, c4.w
    mad_pp r2.z, r0_abs.z, r2.y, r2.x
    mad_pp r2.x, r0.y, r2.y, r2.x
    mul_pp r2.x, r0_abs.z, r2.x
    add_pp r0.z, -r0_abs.z, c4.w
    mad r2.x, r0.y, r2.z, r2.x
    add r2.x, r2.x, c5.w
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, -c5.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c6.z
    mad r0.w, r0.w, -c6.z, c6.w
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c7.x, r2.x
    mul_pp r0.w, r0.y, r0.w
    texld r2, v0, s0
    mad_pp r3.xyz, c1, r2, r1.x
    mul_pp r2.xyz, r2, c1
    mad_pp r3.xyz, c2.x, r3, r1.y
    dp3_pp r1.x, r3, r3
    cmp r1.x, -r1.x, c7.y, c7.z
    mul_pp r0.w, r0.w, r1.x
    mul_pp r4.xyz, r0.w, c0
    add_pp r0.w, -r0.x, c4.w
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r1.w, c5.z
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    lrp_pp r1.xyw, r0.w, c4.w, r3.xyzz
    mul_pp r1.xyw, r1, r4.xyzz
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.z, r0.x, r0.z, c4.w
    add_pp r0.w, -r0.y, c4.w
    mul_pp r2.w, r0.w, r0.w
    mul_pp r2.w, r2.w, r2.w
    mul_pp r0.w, r0.w, r2.w
    mad_pp r0.x, r0.x, r0.w, c4.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, c0
    mad_pp r0.w, c2.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1.xyww
    mov_pp oC0.w, c4.w

// approximately 78 instruction slots used (1 texture, 77 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 82 math, 7 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t1.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[45].xyzw
  30: mul r4.xyz, r1.wwww, cb0[2].xyzx
  31: add r1.w, -cb0[8].w, l(1.000000)
  32: mov r5.x, v3.w
  33: mov r5.y, v4.w
  34: mov r5.z, v5.w
  35: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  36: dp3 r0.w, r6.xyzx, r6.xyzx
  37: max r0.w, r0.w, l(0.001000)
  38: rsq r0.w, r0.w
  39: mul r6.xyz, r0.wwww, r6.xyzx
  40: dp3 r0.w, r2.xyzx, -r3.xyzx
  41: dp3_sat r2.w, r2.xyzx, r5.xyzx
  42: dp3_sat r2.x, r2.xyzx, r6.xyzx
  43: dp3_sat r2.y, r5.xyzx, r6.xyzx
  44: mul r2.z, r2.y, r2.y
  45: dp2 r2.z, r2.zzzz, r1.wwww
  46: add r2.z, r2.z, l(-0.500000)
  47: add r3.x, -r2.w, l(1.000000)
  48: mul r3.y, r3.x, r3.x
  49: mul r3.y, r3.y, r3.y
  50: mul r3.x, r3.x, r3.y
  51: mad r3.x, r2.z, r3.x, l(1.000000)
  52: add r3.y, -|r0.w|, l(1.000000)
  53: mul r3.z, r3.y, r3.y
  54: mul r3.z, r3.z, r3.z
  55: mul r3.y, r3.y, r3.z
  56: mad r2.z, r2.z, r3.y, l(1.000000)
  57: mul r2.z, r2.z, r3.x
  58: mul r2.z, r2.w, r2.z
  59: mul r3.x, r1.w, r1.w
  60: mad r1.w, -r1.w, r1.w, l(1.000000)
  61: mad r3.y, |r0.w|, r1.w, r3.x
  62: mad r1.w, r2.w, r1.w, r3.x
  63: mul r0.w, |r0.w|, r1.w
  64: mad r0.w, r2.w, r3.y, r0.w
  65: add r0.w, r0.w, l(0.000010)
  66: div r0.w, l(0.500000), r0.w
  67: mul r1.w, r3.x, r3.x
  68: mad r3.x, r2.x, r1.w, -r2.x
  69: mad r2.x, r3.x, r2.x, l(1.000000)
  70: mul r1.w, r1.w, l(0.318310)
  71: mad r2.x, r2.x, r2.x, l(0.000000)
  72: div r1.w, r1.w, r2.x
  73: mul r0.w, r0.w, r1.w
  74: mul r0.w, r0.w, l(3.141593)
  75: max r0.w, r0.w, l(0.000100)
  76: sqrt r0.w, r0.w
  77: mul r0.w, r2.w, r0.w
  78: dp3 r1.w, r0.xyzx, r0.xyzx
  79: ne r1.w, r1.w, l(0.000000)
  80: and r1.w, r1.w, l(0x3f800000)
  81: mul r0.w, r0.w, r1.w
  82: mul r2.xzw, r2.zzzz, r4.xxyz
  83: mul r3.xyz, r4.xyzx, r0.wwww
  84: add r0.w, -r2.y, l(1.000000)
  85: mul r1.w, r0.w, r0.w
  86: mul r1.w, r1.w, r1.w
  87: mul r0.w, r0.w, r1.w
  88: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  89: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  90: mul r0.xyz, r0.xyzx, r3.xyzx
  91: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  92: mov o0.w, l(1.000000)
  93: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 93 math, 3 textures
Matrix4x4 unity_WorldToLight at 0
Vector4 _Color at 5
Float _GlossMapScale at 7
Vector4 _LightColor0 at 4
Float _Metallic at 6

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       4
//   _LightColor0       c4       1
//   _Color             c5       1
//   _Metallic          c6       1
//   _GlossMapScale     c7       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//   _LightTextureB0    s2       1
//

    ps_3_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 0.5
    def c9, 1, 0, 0.00100000005, 31.622776
    def c10, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c11, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mad r0, v5.xyzx, c9.xxxy, c9.yyyx
    dp4 r1.x, c3, r0
    rcp r1.x, r1.x
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r2.z, c2, r0
    mad r0.xy, r2, r1.x, c8.w
    dp3 r0.z, r2, r2
    texld_pp r1, r0.z, s2
    texld_pp r0, r0, s1
    mul r0.x, r1.x, r0.w
    mul_pp r0.xyz, r0.x, c4
    cmp_pp r0.xyz, -r2.z, c9.y, r0
    nrm_pp r1.xyz, v1
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    dp3_pp r0.w, r2, r2
    rsq_pp r0.w, r0.w
    mad_pp r3.xyz, r2, r0.w, -r1
    mul_pp r2.xyz, r0.w, r2
    dp3_pp r0.w, r3, r3
    add r1.w, -r0.w, c9.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c9.w, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r3
    dp3_sat_pp r1.w, r2, r3
    dp3_sat_pp r2.x, r4, r2
    dp3_pp r1.x, r4, -r1
    texld r3, v0, s0
    mov r4.x, c9.x
    mad_pp r1.y, r3.w, -c7.x, r4.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r2.y, r1.z, r1.z
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c9.x
    mad r0.w, r0.w, r0.w, c10.z
    rcp r0.w, r0.w
    mul r2.y, r2.y, c10.y
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.y, -r1.y, c9.x
    mad_pp r2.z, r2.x, r2.y, r1.z
    mad_pp r1.z, r1_abs.x, r2.y, r1.z
    mul_pp r2.y, r1_abs.x, r2.z
    add_pp r1.x, -r1_abs.x, c9.x
    mad r1.z, r2.x, r1.z, r2.y
    add r1.z, r1.z, c10.x
    rcp r1.z, r1.z
    mul_pp r1.z, r1.z, c8.w
    mul r0.w, r0.w, r1.z
    mul_pp r1.z, r0.w, c10.w
    mad r0.w, r0.w, -c11.x, c11.y
    rsq r1.z, r1.z
    rcp_pp r1.z, r1.z
    cmp_pp r0.w, r0.w, c11.z, r1.z
    mul_pp r0.w, r2.x, r0.w
    mov r4.xyz, c8
    mad_pp r2.yzw, c5.xxyz, r3.xxyz, r4.x
    mul_pp r3.xyz, r3, c5
    mad_pp r2.yzw, c6.x, r2, r4.y
    dp3_pp r1.z, r2.yzww, r2.yzww
    cmp r1.z, -r1.z, c9.y, c9.x
    mul_pp r0.w, r0.w, r1.z
    mul_pp r4.xyw, r0.xyzz, r0.w
    add_pp r0.w, -r1.w, c9.x
    mul_pp r1.z, r1.w, r1.w
    dp2add_pp r1.y, r1.z, r1.y, -c8.w
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    lrp_pp r5.xyz, r0.w, c9.x, r2.yzww
    mul_pp r2.yzw, r4.xxyw, r5.xxyz
    mul_pp r0.w, r1.x, r1.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r0.w, r1.y, r0.w, c9.x
    add_pp r1.x, -r2.x, c9.x
    mul_pp r1.z, r1.x, r1.x
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.x, r1.x, r1.z
    mad_pp r1.x, r1.y, r1.x, c9.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c6.x, -r4.z, r4.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.yzww
    mov_pp oC0.w, c9.x

// approximately 95 instruction slots used (3 texture, 92 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  16: eq r1.w, cb2[0].x, l(1.000000)
  17: if_nz r1.w
  18:   eq r1.w, cb2[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  23:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  26:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r1.w, r2.w
  29:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r1.w, r5.xyzw, cb1[45].xyzw
  34: lt r2.w, l(0.000000), r4.z
  35: and r2.w, r2.w, l(0x3f800000)
  36: div r5.xy, r4.xyxx, r4.wwww
  37: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  38: sample r5.xyzw, r5.xyxx, t1.xyzw, s2
  39: mul r2.w, r2.w, r5.w
  40: dp3 r3.w, r4.xyzx, r4.xyzx
  41: sample r4.xyzw, r3.wwww, t2.xyzw, s3
  42: mul r2.w, r2.w, r4.x
  43: mul r1.w, r1.w, r2.w
  44: mov r4.x, v3.w
  45: mov r4.y, v4.w
  46: mov r4.z, v5.w
  47: dp3 r2.w, r4.xyzx, r4.xyzx
  48: rsq r2.w, r2.w
  49: mul r5.xyz, r2.wwww, r4.xyzx
  50: mul r6.xyz, r1.wwww, cb0[2].xyzx
  51: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  52: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  53: dp3 r1.w, r4.xyzx, r4.xyzx
  54: max r1.w, r1.w, l(0.001000)
  55: rsq r1.w, r1.w
  56: mul r4.xyz, r1.wwww, r4.xyzx
  57: dp3 r1.w, r2.xyzx, -r3.xyzx
  58: dp3_sat r2.w, r2.xyzx, r5.xyzx
  59: dp3_sat r2.x, r2.xyzx, r4.xyzx
  60: dp3_sat r2.y, r5.xyzx, r4.xyzx
  61: mul r2.z, r2.y, r2.y
  62: dp2 r2.z, r2.zzzz, r0.wwww
  63: add r2.z, r2.z, l(-0.500000)
  64: add r3.x, -r2.w, l(1.000000)
  65: mul r3.y, r3.x, r3.x
  66: mul r3.y, r3.y, r3.y
  67: mul r3.x, r3.x, r3.y
  68: mad r3.x, r2.z, r3.x, l(1.000000)
  69: add r3.y, -|r1.w|, l(1.000000)
  70: mul r3.z, r3.y, r3.y
  71: mul r3.z, r3.z, r3.z
  72: mul r3.y, r3.y, r3.z
  73: mad r2.z, r2.z, r3.y, l(1.000000)
  74: mul r2.z, r2.z, r3.x
  75: mul r2.z, r2.w, r2.z
  76: mul r3.x, r0.w, r0.w
  77: mad r0.w, -r0.w, r0.w, l(1.000000)
  78: mad r3.y, |r1.w|, r0.w, r3.x
  79: mad r0.w, r2.w, r0.w, r3.x
  80: mul r0.w, r0.w, |r1.w|
  81: mad r0.w, r2.w, r3.y, r0.w
  82: add r0.w, r0.w, l(0.000010)
  83: div r0.w, l(0.500000), r0.w
  84: mul r1.w, r3.x, r3.x
  85: mad r3.x, r2.x, r1.w, -r2.x
  86: mad r2.x, r3.x, r2.x, l(1.000000)
  87: mul r1.w, r1.w, l(0.318310)
  88: mad r2.x, r2.x, r2.x, l(0.000000)
  89: div r1.w, r1.w, r2.x
  90: mul r0.w, r0.w, r1.w
  91: mul r0.w, r0.w, l(3.141593)
  92: max r0.w, r0.w, l(0.000100)
  93: sqrt r0.w, r0.w
  94: mul r0.w, r2.w, r0.w
  95: dp3 r1.w, r0.xyzx, r0.xyzx
  96: ne r1.w, r1.w, l(0.000000)
  97: and r1.w, r1.w, l(0x3f800000)
  98: mul r0.w, r0.w, r1.w
  99: mul r2.xzw, r2.zzzz, r6.xxyz
 100: mul r3.xyz, r6.xyzx, r0.wwww
 101: add r0.w, -r2.y, l(1.000000)
 102: mul r1.w, r0.w, r0.w
 103: mul r1.w, r1.w, r1.w
 104: mul r0.w, r0.w, r1.w
 105: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 107: mul r0.xyz, r0.xyzx, r3.xyzx
 108: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 109: mov o0.w, l(1.000000)
 110: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 93 math, 3 textures
Matrix4x4 unity_WorldToLight at 0
Vector4 _Color at 5
Float _Glossiness at 7
Vector4 _LightColor0 at 4
Float _Metallic at 6

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       4
//   _LightColor0       c4       1
//   _Color             c5       1
//   _Metallic          c6       1
//   _Glossiness        c7       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//   _LightTextureB0    s2       1
//

    ps_3_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 0.5
    def c9, 1, 0, 0.00100000005, 31.622776
    def c10, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c11, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mad r0, v5.xyzx, c9.xxxy, c9.yyyx
    dp4 r1.x, c3, r0
    rcp r1.x, r1.x
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r2.z, c2, r0
    mad r0.xy, r2, r1.x, c8.w
    dp3 r0.z, r2, r2
    texld_pp r1, r0.z, s2
    texld_pp r0, r0, s1
    mul r0.x, r1.x, r0.w
    mul_pp r0.xyz, r0.x, c4
    cmp_pp r0.xyz, -r2.z, c9.y, r0
    nrm_pp r1.xyz, v1
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    dp3_pp r0.w, r2, r2
    rsq_pp r0.w, r0.w
    mad_pp r3.xyz, r2, r0.w, -r1
    mul_pp r2.xyz, r0.w, r2
    dp3_pp r0.w, r3, r3
    add r1.w, -r0.w, c9.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c9.w, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r3
    dp3_sat_pp r1.w, r2, r3
    dp3_sat_pp r2.x, r4, r2
    dp3_pp r1.x, r4, -r1
    mov r3.x, c9.x
    add_pp r1.y, r3.x, -c7.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r2.y, r1.z, r1.z
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c9.x
    mad r0.w, r0.w, r0.w, c10.z
    rcp r0.w, r0.w
    mul r2.y, r2.y, c10.y
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.y, -r1.y, c9.x
    mad_pp r2.z, r1_abs.x, r2.y, r1.z
    mad_pp r1.z, r2.x, r2.y, r1.z
    mul_pp r1.z, r1.z, r1_abs.x
    add_pp r1.x, -r1_abs.x, c9.x
    mad r1.z, r2.x, r2.z, r1.z
    add r1.z, r1.z, c10.x
    rcp r1.z, r1.z
    mul_pp r1.z, r1.z, c8.w
    mul r0.w, r0.w, r1.z
    mul_pp r1.z, r0.w, c10.w
    mad r0.w, r0.w, -c11.x, c11.y
    rsq r1.z, r1.z
    rcp_pp r1.z, r1.z
    cmp_pp r0.w, r0.w, c11.z, r1.z
    mul_pp r0.w, r2.x, r0.w
    texld r3, v0, s0
    mov r4.xyz, c8
    mad_pp r2.yzw, c5.xxyz, r3.xxyz, r4.x
    mul_pp r3.xyz, r3, c5
    mad_pp r2.yzw, c6.x, r2, r4.y
    dp3_pp r1.z, r2.yzww, r2.yzww
    cmp r1.z, -r1.z, c9.y, c9.x
    mul_pp r0.w, r0.w, r1.z
    mul_pp r4.xyw, r0.xyzz, r0.w
    add_pp r0.w, -r1.w, c9.x
    mul_pp r1.z, r1.w, r1.w
    dp2add_pp r1.y, r1.z, r1.y, -c8.w
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    lrp_pp r5.xyz, r0.w, c9.x, r2.yzww
    mul_pp r2.yzw, r4.xxyw, r5.xxyz
    mul_pp r0.w, r1.x, r1.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r0.w, r1.y, r0.w, c9.x
    add_pp r1.x, -r2.x, c9.x
    mul_pp r1.z, r1.x, r1.x
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.x, r1.x, r1.z
    mad_pp r1.x, r1.y, r1.x, c9.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c6.x, -r4.z, r4.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.yzww
    mov_pp oC0.w, c9.x

// approximately 95 instruction slots used (3 texture, 92 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  23:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  26:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r0.w, r1.w
  29:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r5.xyzw, cb1[45].xyzw
  34: lt r1.w, l(0.000000), r4.z
  35: and r1.w, r1.w, l(0x3f800000)
  36: div r5.xy, r4.xyxx, r4.wwww
  37: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  38: sample r5.xyzw, r5.xyxx, t1.xyzw, s2
  39: mul r1.w, r1.w, r5.w
  40: dp3 r2.w, r4.xyzx, r4.xyzx
  41: sample r4.xyzw, r2.wwww, t2.xyzw, s3
  42: mul r1.w, r1.w, r4.x
  43: mul r0.w, r0.w, r1.w
  44: mov r4.x, v3.w
  45: mov r4.y, v4.w
  46: mov r4.z, v5.w
  47: dp3 r1.w, r4.xyzx, r4.xyzx
  48: rsq r1.w, r1.w
  49: mul r5.xyz, r1.wwww, r4.xyzx
  50: mul r6.xyz, r0.wwww, cb0[2].xyzx
  51: add r0.w, -cb0[8].w, l(1.000000)
  52: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  53: dp3 r1.w, r4.xyzx, r4.xyzx
  54: max r1.w, r1.w, l(0.001000)
  55: rsq r1.w, r1.w
  56: mul r4.xyz, r1.wwww, r4.xyzx
  57: dp3 r1.w, r2.xyzx, -r3.xyzx
  58: dp3_sat r2.w, r2.xyzx, r5.xyzx
  59: dp3_sat r2.x, r2.xyzx, r4.xyzx
  60: dp3_sat r2.y, r5.xyzx, r4.xyzx
  61: mul r2.z, r2.y, r2.y
  62: dp2 r2.z, r2.zzzz, r0.wwww
  63: add r2.z, r2.z, l(-0.500000)
  64: add r3.x, -r2.w, l(1.000000)
  65: mul r3.y, r3.x, r3.x
  66: mul r3.y, r3.y, r3.y
  67: mul r3.x, r3.x, r3.y
  68: mad r3.x, r2.z, r3.x, l(1.000000)
  69: add r3.y, -|r1.w|, l(1.000000)
  70: mul r3.z, r3.y, r3.y
  71: mul r3.z, r3.z, r3.z
  72: mul r3.y, r3.y, r3.z
  73: mad r2.z, r2.z, r3.y, l(1.000000)
  74: mul r2.z, r2.z, r3.x
  75: mul r2.z, r2.w, r2.z
  76: mul r3.x, r0.w, r0.w
  77: mad r0.w, -r0.w, r0.w, l(1.000000)
  78: mad r3.y, |r1.w|, r0.w, r3.x
  79: mad r0.w, r2.w, r0.w, r3.x
  80: mul r0.w, r0.w, |r1.w|
  81: mad r0.w, r2.w, r3.y, r0.w
  82: add r0.w, r0.w, l(0.000010)
  83: div r0.w, l(0.500000), r0.w
  84: mul r1.w, r3.x, r3.x
  85: mad r3.x, r2.x, r1.w, -r2.x
  86: mad r2.x, r3.x, r2.x, l(1.000000)
  87: mul r1.w, r1.w, l(0.318310)
  88: mad r2.x, r2.x, r2.x, l(0.000000)
  89: div r1.w, r1.w, r2.x
  90: mul r0.w, r0.w, r1.w
  91: mul r0.w, r0.w, l(3.141593)
  92: max r0.w, r0.w, l(0.000100)
  93: sqrt r0.w, r0.w
  94: mul r0.w, r2.w, r0.w
  95: dp3 r1.w, r0.xyzx, r0.xyzx
  96: ne r1.w, r1.w, l(0.000000)
  97: and r1.w, r1.w, l(0x3f800000)
  98: mul r0.w, r0.w, r1.w
  99: mul r2.xzw, r2.zzzz, r6.xxyz
 100: mul r3.xyz, r6.xyzx, r0.wwww
 101: add r0.w, -r2.y, l(1.000000)
 102: mul r1.w, r0.w, r0.w
 103: mul r1.w, r1.w, r1.w
 104: mul r0.w, r0.w, r1.w
 105: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 107: mul r0.xyz, r0.xyzx, r3.xyzx
 108: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 109: mov o0.w, l(1.000000)
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 88 math, 3 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 4
Float _GlossMapScale at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5

Set 2D Texture "_MainTex" to slot 0
Set CUBE Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _GlossMapScale     c6       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//   _LightTextureB0    s2       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 1, 0, 0.00100000005, 31.622776
    def c9, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c10, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    nrm_pp r0.xyz, v1
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    mad_pp r2.xyz, r1, r0.w, -r0
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c8.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c8.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r3, r1
    dp3_pp r0.x, r3, -r0
    texld r2, v0, s0
    mov r3, c7
    mad_pp r0.y, r2.w, -c6.x, r3.w
    mul_pp r0.z, r0.y, r0.y
    mul_pp r1.y, r0.z, r0.z
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c7.w
    mad r0.w, r0.w, r0.w, c10.x
    rcp r0.w, r0.w
    mul r1.y, r1.y, c9.w
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.y, -r0.y, c7.w
    mad_pp r1.z, r1.x, r1.y, r0.z
    mad_pp r0.z, r0_abs.x, r1.y, r0.z
    mul_pp r1.y, r0_abs.x, r1.z
    add_pp r0.x, -r0_abs.x, c7.w
    mad r0.z, r1.x, r0.z, r1.y
    add r0.z, r0.z, c9.y
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c9.z
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c10.y
    mad r0.z, r0.z, -c10.y, c10.z
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c10.w, r0.w
    mul_pp r0.z, r1.x, r0.z
    mad_pp r4.xyz, c4, r2, r3.x
    mul_pp r2.xyz, r2, c4
    mad_pp r3.xyw, c5.x, r4.xyzz, r3.y
    dp3_pp r0.w, r3.xyww, r3.xyww
    cmp r0.w, -r0.w, c8.y, c8.x
    mul_pp r0.z, r0.w, r0.z
    mad r4, v5.xyzx, c8.xxxy, c8.yyyx
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r0.w, r5, r5
    texld r4, r5, s1
    texld r5, r0.w, s2
    mul_pp r0.w, r4.w, r5.x
    mul_pp r4.xyz, r0.w, c3
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.w, c7.w
    mul_pp r0.w, r1.w, r1.w
    dp2add_pp r0.y, r0.w, r0.y, c9.x
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    lrp_pp r1.yzw, r0.z, c7.w, r3.xxyw
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.y, r0.x, c7.w
    add_pp r0.z, -r1.x, c7.w
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.y, r0.y, r0.z, c7.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c5.x, -r3.z, r3.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c7.w

// approximately 90 instruction slots used (3 texture, 87 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 92 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: eq r1.w, cb2[0].x, l(1.000000)
  17: if_nz r1.w
  18:   eq r1.w, cb2[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  23:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  26:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r1.w, r2.w
  29:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r1.w, r5.xyzw, cb1[45].xyzw
  34: dp3 r2.w, r4.xyzx, r4.xyzx
  35: sample r5.xyzw, r2.wwww, t1.xyzw, s3
  36: sample r4.xyzw, r4.xyzx, t2.xyzw, s2
  37: mul r2.w, r4.w, r5.x
  38: mul r1.w, r1.w, r2.w
  39: mov r4.x, v3.w
  40: mov r4.y, v4.w
  41: mov r4.z, v5.w
  42: dp3 r2.w, r4.xyzx, r4.xyzx
  43: rsq r2.w, r2.w
  44: mul r5.xyz, r2.wwww, r4.xyzx
  45: mul r6.xyz, r1.wwww, cb0[2].xyzx
  46: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  47: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  48: dp3 r1.w, r4.xyzx, r4.xyzx
  49: max r1.w, r1.w, l(0.001000)
  50: rsq r1.w, r1.w
  51: mul r4.xyz, r1.wwww, r4.xyzx
  52: dp3 r1.w, r2.xyzx, -r3.xyzx
  53: dp3_sat r2.w, r2.xyzx, r5.xyzx
  54: dp3_sat r2.x, r2.xyzx, r4.xyzx
  55: dp3_sat r2.y, r5.xyzx, r4.xyzx
  56: mul r2.z, r2.y, r2.y
  57: dp2 r2.z, r2.zzzz, r0.wwww
  58: add r2.z, r2.z, l(-0.500000)
  59: add r3.x, -r2.w, l(1.000000)
  60: mul r3.y, r3.x, r3.x
  61: mul r3.y, r3.y, r3.y
  62: mul r3.x, r3.x, r3.y
  63: mad r3.x, r2.z, r3.x, l(1.000000)
  64: add r3.y, -|r1.w|, l(1.000000)
  65: mul r3.z, r3.y, r3.y
  66: mul r3.z, r3.z, r3.z
  67: mul r3.y, r3.y, r3.z
  68: mad r2.z, r2.z, r3.y, l(1.000000)
  69: mul r2.z, r2.z, r3.x
  70: mul r2.z, r2.w, r2.z
  71: mul r3.x, r0.w, r0.w
  72: mad r0.w, -r0.w, r0.w, l(1.000000)
  73: mad r3.y, |r1.w|, r0.w, r3.x
  74: mad r0.w, r2.w, r0.w, r3.x
  75: mul r0.w, r0.w, |r1.w|
  76: mad r0.w, r2.w, r3.y, r0.w
  77: add r0.w, r0.w, l(0.000010)
  78: div r0.w, l(0.500000), r0.w
  79: mul r1.w, r3.x, r3.x
  80: mad r3.x, r2.x, r1.w, -r2.x
  81: mad r2.x, r3.x, r2.x, l(1.000000)
  82: mul r1.w, r1.w, l(0.318310)
  83: mad r2.x, r2.x, r2.x, l(0.000000)
  84: div r1.w, r1.w, r2.x
  85: mul r0.w, r0.w, r1.w
  86: mul r0.w, r0.w, l(3.141593)
  87: max r0.w, r0.w, l(0.000100)
  88: sqrt r0.w, r0.w
  89: mul r0.w, r2.w, r0.w
  90: dp3 r1.w, r0.xyzx, r0.xyzx
  91: ne r1.w, r1.w, l(0.000000)
  92: and r1.w, r1.w, l(0x3f800000)
  93: mul r0.w, r0.w, r1.w
  94: mul r2.xzw, r2.zzzz, r6.xxyz
  95: mul r3.xyz, r6.xyzx, r0.wwww
  96: add r0.w, -r2.y, l(1.000000)
  97: mul r1.w, r0.w, r0.w
  98: mul r1.w, r1.w, r1.w
  99: mul r0.w, r0.w, r1.w
 100: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 101: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 102: mul r0.xyz, r0.xyzx, r3.xyzx
 103: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 104: mov o0.w, l(1.000000)
 105: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 88 math, 3 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 4
Float _Glossiness at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5

Set 2D Texture "_MainTex" to slot 0
Set CUBE Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _Glossiness        c6       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//   _LightTextureB0    s2       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 1, 0, 0.00100000005, 31.622776
    def c9, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c10, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    nrm_pp r0.xyz, v1
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    mad_pp r2.xyz, r1, r0.w, -r0
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c8.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c8.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r3, r1
    dp3_pp r0.x, r3, -r0
    mov r2, c7
    add_pp r0.y, r2.w, -c6.x
    mul_pp r0.z, r0.y, r0.y
    mul_pp r1.y, r0.z, r0.z
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c7.w
    mad r0.w, r0.w, r0.w, c10.x
    rcp r0.w, r0.w
    mul r1.y, r1.y, c9.w
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.y, -r0.y, c7.w
    mad_pp r1.z, r0_abs.x, r1.y, r0.z
    mad_pp r0.z, r1.x, r1.y, r0.z
    mul_pp r0.z, r0.z, r0_abs.x
    add_pp r0.x, -r0_abs.x, c7.w
    mad r0.z, r1.x, r1.z, r0.z
    add r0.z, r0.z, c9.y
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c9.z
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c10.y
    mad r0.z, r0.z, -c10.y, c10.z
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c10.w, r0.w
    mul_pp r0.z, r1.x, r0.z
    texld r3, v0, s0
    mad_pp r4.xyz, c4, r3, r2.x
    mul_pp r3.xyz, r3, c4
    mad_pp r2.xyw, c5.x, r4.xyzz, r2.y
    dp3_pp r0.w, r2.xyww, r2.xyww
    cmp r0.w, -r0.w, c8.y, c8.x
    mul_pp r0.z, r0.w, r0.z
    mad r4, v5.xyzx, c8.xxxy, c8.yyyx
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r0.w, r5, r5
    texld r4, r5, s1
    texld r5, r0.w, s2
    mul_pp r0.w, r4.w, r5.x
    mul_pp r4.xyz, r0.w, c3
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.w, c7.w
    mul_pp r0.w, r1.w, r1.w
    dp2add_pp r0.y, r0.w, r0.y, c9.x
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    lrp_pp r1.yzw, r0.z, c7.w, r2.xxyw
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.y, r0.x, c7.w
    add_pp r0.z, -r1.x, c7.w
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.y, r0.y, r0.z, c7.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c5.x, -r2.z, r2.z
    mul_pp r2.xyz, r0.w, r3
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c7.w

// approximately 90 instruction slots used (3 texture, 87 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 92 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  23:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  26:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r0.w, r1.w
  29:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r5.xyzw, cb1[45].xyzw
  34: dp3 r1.w, r4.xyzx, r4.xyzx
  35: sample r5.xyzw, r1.wwww, t1.xyzw, s3
  36: sample r4.xyzw, r4.xyzx, t2.xyzw, s2
  37: mul r1.w, r4.w, r5.x
  38: mul r0.w, r0.w, r1.w
  39: mov r4.x, v3.w
  40: mov r4.y, v4.w
  41: mov r4.z, v5.w
  42: dp3 r1.w, r4.xyzx, r4.xyzx
  43: rsq r1.w, r1.w
  44: mul r5.xyz, r1.wwww, r4.xyzx
  45: mul r6.xyz, r0.wwww, cb0[2].xyzx
  46: add r0.w, -cb0[8].w, l(1.000000)
  47: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  48: dp3 r1.w, r4.xyzx, r4.xyzx
  49: max r1.w, r1.w, l(0.001000)
  50: rsq r1.w, r1.w
  51: mul r4.xyz, r1.wwww, r4.xyzx
  52: dp3 r1.w, r2.xyzx, -r3.xyzx
  53: dp3_sat r2.w, r2.xyzx, r5.xyzx
  54: dp3_sat r2.x, r2.xyzx, r4.xyzx
  55: dp3_sat r2.y, r5.xyzx, r4.xyzx
  56: mul r2.z, r2.y, r2.y
  57: dp2 r2.z, r2.zzzz, r0.wwww
  58: add r2.z, r2.z, l(-0.500000)
  59: add r3.x, -r2.w, l(1.000000)
  60: mul r3.y, r3.x, r3.x
  61: mul r3.y, r3.y, r3.y
  62: mul r3.x, r3.x, r3.y
  63: mad r3.x, r2.z, r3.x, l(1.000000)
  64: add r3.y, -|r1.w|, l(1.000000)
  65: mul r3.z, r3.y, r3.y
  66: mul r3.z, r3.z, r3.z
  67: mul r3.y, r3.y, r3.z
  68: mad r2.z, r2.z, r3.y, l(1.000000)
  69: mul r2.z, r2.z, r3.x
  70: mul r2.z, r2.w, r2.z
  71: mul r3.x, r0.w, r0.w
  72: mad r0.w, -r0.w, r0.w, l(1.000000)
  73: mad r3.y, |r1.w|, r0.w, r3.x
  74: mad r0.w, r2.w, r0.w, r3.x
  75: mul r0.w, r0.w, |r1.w|
  76: mad r0.w, r2.w, r3.y, r0.w
  77: add r0.w, r0.w, l(0.000010)
  78: div r0.w, l(0.500000), r0.w
  79: mul r1.w, r3.x, r3.x
  80: mad r3.x, r2.x, r1.w, -r2.x
  81: mad r2.x, r3.x, r2.x, l(1.000000)
  82: mul r1.w, r1.w, l(0.318310)
  83: mad r2.x, r2.x, r2.x, l(0.000000)
  84: div r1.w, r1.w, r2.x
  85: mul r0.w, r0.w, r1.w
  86: mul r0.w, r0.w, l(3.141593)
  87: max r0.w, r0.w, l(0.000100)
  88: sqrt r0.w, r0.w
  89: mul r0.w, r2.w, r0.w
  90: dp3 r1.w, r0.xyzx, r0.xyzx
  91: ne r1.w, r1.w, l(0.000000)
  92: and r1.w, r1.w, l(0x3f800000)
  93: mul r0.w, r0.w, r1.w
  94: mul r2.xzw, r2.zzzz, r6.xxyz
  95: mul r3.xyz, r6.xyzx, r0.wwww
  96: add r0.w, -r2.y, l(1.000000)
  97: mul r1.w, r0.w, r0.w
  98: mul r1.w, r1.w, r1.w
  99: mul r0.w, r0.w, r1.w
 100: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 101: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 102: mul r0.xyz, r0.xyzx, r3.xyzx
 103: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 104: mov o0.w, l(1.000000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 82 math, 2 textures
Matrix4x2 unity_WorldToLight at 0
Vector4 _Color at 3
Float _GlossMapScale at 5
Vector4 _LightColor0 at 2
Float _Metallic at 4

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       2
//   _LightColor0       c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _GlossMapScale     c5       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//

    ps_3_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 1
    def c7, 1, 0, 0.00100000005, 31.622776
    def c8, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c9, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r0.yzw, v1.xxyz, -r0.x, r1.xxyz
    mul_pp r2.xyz, r0.x, v1
    dp3_pp r0.x, r0.yzww, r0.yzww
    add r1.w, -r0.x, c7.z
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c7.w, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r0
    dp3_sat_pp r0.x, r1, r0
    dp3_sat_pp r0.y, r3, r1
    dp3_pp r0.z, r3, -r2
    texld r1, v0, s0
    mov r2, c6
    mad_pp r1.w, r1.w, -c5.x, r2.w
    mul_pp r2.w, r1.w, r1.w
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c6.w
    mad r0.w, r0.w, r0.w, c9.x
    rcp r0.w, r0.w
    mul r3.x, r3.x, c8.w
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.w, -r1.w, c6.w
    mad_pp r3.y, r0_abs.z, r3.x, r2.w
    mad_pp r2.w, r0.y, r3.x, r2.w
    mul_pp r2.w, r0_abs.z, r2.w
    add_pp r0.z, -r0_abs.z, c6.w
    mad r2.w, r0.y, r3.y, r2.w
    add r2.w, r2.w, c8.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c8.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c9.y
    mad r0.w, r0.w, -c9.y, c9.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c9.w, r2.w
    mul_pp r0.w, r0.y, r0.w
    mad_pp r3.xyz, c3, r1, r2.x
    mul_pp r1.xyz, r1, c3
    mad_pp r2.xyw, c4.x, r3.xyzz, r2.y
    dp3_pp r3.x, r2.xyww, r2.xyww
    cmp r3.x, -r3.x, c7.y, c7.x
    mul_pp r0.w, r0.w, r3.x
    mad r3, v5.xyzx, c7.xxxy, c7.yyyx
    dp4 r4.x, c0, r3
    dp4 r4.y, c1, r3
    texld_pp r3, r4, s1
    mul_pp r3.xyz, r3.w, c2
    mul_pp r4.xyz, r0.w, r3
    add_pp r0.w, -r0.x, c6.w
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r1.w, c8.x
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c6.w, r2.xyww
    mul_pp r2.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.z, r0.x, r0.z, c6.w
    add_pp r0.w, -r0.y, c6.w
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    mad_pp r0.x, r0.x, r0.w, c6.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r3
    mad_pp r0.w, c4.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    mad_pp oC0.xyz, r1, r0, r2.xyww
    mov_pp oC0.w, c6.w

// approximately 83 instruction slots used (2 texture, 81 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 87 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: eq r2.w, cb2[0].x, l(1.000000)
  17: if_nz r2.w
  18:   eq r2.w, cb2[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  23:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  26:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r2.w, r3.w
  29:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r2.w, r5.xyzw, cb1[45].xyzw
  34: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  35: mul r2.w, r2.w, r4.w
  36: mul r4.xyz, r2.wwww, cb0[2].xyzx
  37: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  38: mov r5.x, v3.w
  39: mov r5.y, v4.w
  40: mov r5.z, v5.w
  41: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  42: dp3 r1.w, r6.xyzx, r6.xyzx
  43: max r1.w, r1.w, l(0.001000)
  44: rsq r1.w, r1.w
  45: mul r6.xyz, r1.wwww, r6.xyzx
  46: dp3 r1.w, r2.xyzx, -r3.xyzx
  47: dp3_sat r2.w, r2.xyzx, r5.xyzx
  48: dp3_sat r2.x, r2.xyzx, r6.xyzx
  49: dp3_sat r2.y, r5.xyzx, r6.xyzx
  50: mul r2.z, r2.y, r2.y
  51: dp2 r2.z, r2.zzzz, r0.wwww
  52: add r2.z, r2.z, l(-0.500000)
  53: add r3.x, -r2.w, l(1.000000)
  54: mul r3.y, r3.x, r3.x
  55: mul r3.y, r3.y, r3.y
  56: mul r3.x, r3.x, r3.y
  57: mad r3.x, r2.z, r3.x, l(1.000000)
  58: add r3.y, -|r1.w|, l(1.000000)
  59: mul r3.z, r3.y, r3.y
  60: mul r3.z, r3.z, r3.z
  61: mul r3.y, r3.y, r3.z
  62: mad r2.z, r2.z, r3.y, l(1.000000)
  63: mul r2.z, r2.z, r3.x
  64: mul r2.z, r2.w, r2.z
  65: mul r3.x, r0.w, r0.w
  66: mad r0.w, -r0.w, r0.w, l(1.000000)
  67: mad r3.y, |r1.w|, r0.w, r3.x
  68: mad r0.w, r2.w, r0.w, r3.x
  69: mul r0.w, r0.w, |r1.w|
  70: mad r0.w, r2.w, r3.y, r0.w
  71: add r0.w, r0.w, l(0.000010)
  72: div r0.w, l(0.500000), r0.w
  73: mul r1.w, r3.x, r3.x
  74: mad r3.x, r2.x, r1.w, -r2.x
  75: mad r2.x, r3.x, r2.x, l(1.000000)
  76: mul r1.w, r1.w, l(0.318310)
  77: mad r2.x, r2.x, r2.x, l(0.000000)
  78: div r1.w, r1.w, r2.x
  79: mul r0.w, r0.w, r1.w
  80: mul r0.w, r0.w, l(3.141593)
  81: max r0.w, r0.w, l(0.000100)
  82: sqrt r0.w, r0.w
  83: mul r0.w, r2.w, r0.w
  84: dp3 r1.w, r0.xyzx, r0.xyzx
  85: ne r1.w, r1.w, l(0.000000)
  86: and r1.w, r1.w, l(0x3f800000)
  87: mul r0.w, r0.w, r1.w
  88: mul r2.xzw, r2.zzzz, r4.xxyz
  89: mul r3.xyz, r4.xyzx, r0.wwww
  90: add r0.w, -r2.y, l(1.000000)
  91: mul r1.w, r0.w, r0.w
  92: mul r1.w, r1.w, r1.w
  93: mul r0.w, r0.w, r1.w
  94: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  95: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  96: mul r0.xyz, r0.xyzx, r3.xyzx
  97: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  98: mov o0.w, l(1.000000)
  99: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 82 math, 2 textures
Matrix4x2 unity_WorldToLight at 0
Vector4 _Color at 3
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Float _Metallic at 4

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       2
//   _LightColor0       c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//

    ps_3_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 1
    def c7, 1, 0, 0.00100000005, 31.622776
    def c8, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c9, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r0.yzw, v1.xxyz, -r0.x, r1.xxyz
    mul_pp r2.xyz, r0.x, v1
    dp3_pp r0.x, r0.yzww, r0.yzww
    add r1.w, -r0.x, c7.z
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c7.w, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r0
    dp3_sat_pp r0.x, r1, r0
    dp3_sat_pp r0.y, r3, r1
    dp3_pp r0.z, r3, -r2
    mov r1, c6
    add_pp r1.w, r1.w, -c5.x
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c6.w
    mad r0.w, r0.w, r0.w, c9.x
    rcp r0.w, r0.w
    mul r2.y, r2.y, c8.w
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.w, -r1.w, c6.w
    mad_pp r2.z, r0_abs.z, r2.y, r2.x
    mad_pp r2.x, r0.y, r2.y, r2.x
    mul_pp r2.x, r0_abs.z, r2.x
    add_pp r0.z, -r0_abs.z, c6.w
    mad r2.x, r0.y, r2.z, r2.x
    add r2.x, r2.x, c8.y
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, c8.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c9.y
    mad r0.w, r0.w, -c9.y, c9.z
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c9.w, r2.x
    mul_pp r0.w, r0.y, r0.w
    texld r2, v0, s0
    mad_pp r3.xyz, c3, r2, r1.x
    mul_pp r2.xyz, r2, c3
    mad_pp r3.xyz, c4.x, r3, r1.y
    dp3_pp r1.x, r3, r3
    cmp r1.x, -r1.x, c7.y, c7.x
    mul_pp r0.w, r0.w, r1.x
    mad r4, v5.xyzx, c7.xxxy, c7.yyyx
    dp4 r1.x, c0, r4
    dp4 r1.y, c1, r4
    texld_pp r4, r1, s1
    mul_pp r4.xyz, r4.w, c2
    mul_pp r5.xyz, r0.w, r4
    add_pp r0.w, -r0.x, c6.w
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r1.w, c8.x
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    lrp_pp r1.xyw, r0.w, c6.w, r3.xyzz
    mul_pp r1.xyw, r1, r5.xyzz
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.z, r0.x, r0.z, c6.w
    add_pp r0.w, -r0.y, c6.w
    mul_pp r2.w, r0.w, r0.w
    mul_pp r2.w, r2.w, r2.w
    mul_pp r0.w, r0.w, r2.w
    mad_pp r0.x, r0.x, r0.w, c6.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1.xyww
    mov_pp oC0.w, c6.w

// approximately 83 instruction slots used (2 texture, 81 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 87 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: eq r1.w, cb2[0].x, l(1.000000)
  17: if_nz r1.w
  18:   eq r1.w, cb2[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  23:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  26:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r1.w, r2.w
  29:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r1.w, r5.xyzw, cb1[45].xyzw
  34: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  35: mul r1.w, r1.w, r4.w
  36: mul r4.xyz, r1.wwww, cb0[2].xyzx
  37: add r1.w, -cb0[8].w, l(1.000000)
  38: mov r5.x, v3.w
  39: mov r5.y, v4.w
  40: mov r5.z, v5.w
  41: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  42: dp3 r0.w, r6.xyzx, r6.xyzx
  43: max r0.w, r0.w, l(0.001000)
  44: rsq r0.w, r0.w
  45: mul r6.xyz, r0.wwww, r6.xyzx
  46: dp3 r0.w, r2.xyzx, -r3.xyzx
  47: dp3_sat r2.w, r2.xyzx, r5.xyzx
  48: dp3_sat r2.x, r2.xyzx, r6.xyzx
  49: dp3_sat r2.y, r5.xyzx, r6.xyzx
  50: mul r2.z, r2.y, r2.y
  51: dp2 r2.z, r2.zzzz, r1.wwww
  52: add r2.z, r2.z, l(-0.500000)
  53: add r3.x, -r2.w, l(1.000000)
  54: mul r3.y, r3.x, r3.x
  55: mul r3.y, r3.y, r3.y
  56: mul r3.x, r3.x, r3.y
  57: mad r3.x, r2.z, r3.x, l(1.000000)
  58: add r3.y, -|r0.w|, l(1.000000)
  59: mul r3.z, r3.y, r3.y
  60: mul r3.z, r3.z, r3.z
  61: mul r3.y, r3.y, r3.z
  62: mad r2.z, r2.z, r3.y, l(1.000000)
  63: mul r2.z, r2.z, r3.x
  64: mul r2.z, r2.w, r2.z
  65: mul r3.x, r1.w, r1.w
  66: mad r1.w, -r1.w, r1.w, l(1.000000)
  67: mad r3.y, |r0.w|, r1.w, r3.x
  68: mad r1.w, r2.w, r1.w, r3.x
  69: mul r0.w, |r0.w|, r1.w
  70: mad r0.w, r2.w, r3.y, r0.w
  71: add r0.w, r0.w, l(0.000010)
  72: div r0.w, l(0.500000), r0.w
  73: mul r1.w, r3.x, r3.x
  74: mad r3.x, r2.x, r1.w, -r2.x
  75: mad r2.x, r3.x, r2.x, l(1.000000)
  76: mul r1.w, r1.w, l(0.318310)
  77: mad r2.x, r2.x, r2.x, l(0.000000)
  78: div r1.w, r1.w, r2.x
  79: mul r0.w, r0.w, r1.w
  80: mul r0.w, r0.w, l(3.141593)
  81: max r0.w, r0.w, l(0.000100)
  82: sqrt r0.w, r0.w
  83: mul r0.w, r2.w, r0.w
  84: dp3 r1.w, r0.xyzx, r0.xyzx
  85: ne r1.w, r1.w, l(0.000000)
  86: and r1.w, r1.w, l(0x3f800000)
  87: mul r0.w, r0.w, r1.w
  88: mul r2.xzw, r2.zzzz, r4.xxyz
  89: mul r3.xyz, r4.xyzx, r0.wwww
  90: add r0.w, -r2.y, l(1.000000)
  91: mul r1.w, r0.w, r0.w
  92: mul r1.w, r1.w, r1.w
  93: mul r0.w, r0.w, r1.w
  94: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  95: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  96: mul r0.xyz, r0.xyzx, r3.xyzx
  97: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  98: mov o0.w, l(1.000000)
  99: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 109 math, 4 textures
Matrix4x3 unity_MatrixV at 8
Matrix4x4 unity_WorldToLight at 4
Matrix4x4 unity_WorldToShadow at 0
Vector4 _Color at 15
Float _GlossMapScale at 17
Vector4 _LightColor0 at 14
Vector4 _LightShadowData at 12
Float _Metallic at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_ShadowFadeCenterAndType at 13

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_WorldToShadow           c0       4
//   unity_WorldToLight            c4       4
//   unity_MatrixV                 c8       3
//   _WorldSpaceCameraPos          c11      1
//   _LightShadowData              c12      1
//   unity_ShadowFadeCenterAndType c13      1
//   _LightColor0                  c14      1
//   _Color                        c15      1
//   _Metallic                     c16      1
//   _GlossMapScale                c17      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c18, -0.220916301, 0.220916301, 0.779083729, 1
    def c19, 1, 0, 0.5, 0.00100000005
    def c20, 31.622776, 9.99999975e-006, 0.318309873, 1.00000001e-007
    def c21, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    add r0.xyz, -c13, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c11.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c10
    lrp r1.x, c13.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c12.z, c12.w
    mov r1, c18
    mad r2, v5.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r2
    dp4 r3.y, c1, r2
    dp4 r3.z, c2, r2
    dp4 r3.w, c3, r2
    texldp_pp r3, r3, s0
    lrp_pp r0.y, r3.x, r1.w, c12.x
    add_sat_pp r0.x, r0.x, r0.y
    dp4 r0.y, c7, r2
    rcp r0.y, r0.y
    dp4 r3.x, c4, r2
    dp4 r3.y, c5, r2
    dp4 r3.z, c6, r2
    mad r0.yz, r3.xxyw, r0.y, c19.z
    dp3 r0.w, r3, r3
    texld_pp r2, r0.w, s3
    texld_pp r4, r0.yzzw, s2
    mul r0.y, r2.x, r4.w
    mul r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c14
    cmp_pp r0.xyz, -r3.z, c19.y, r0
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r4.xyz, r3, r0.w, -r2
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r4, r4
    add r2.w, -r0.w, c19.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c20.x, r0.w
    mul_pp r4.xyz, r0.w, r4
    nrm_pp r5.xyz, v4
    dp3_sat_pp r0.w, r5, r4
    dp3_sat_pp r2.w, r3, r4
    dp3_sat_pp r3.x, r5, r3
    dp3_pp r2.x, r5, -r2
    texld r4, v0, s1
    mad_pp r1.w, r4.w, -c17.x, r1.w
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.z, r2.y, r2.y
    mad_pp r3.y, r0.w, r2.z, -r0.w
    mad_pp r0.w, r3.y, r0.w, c18.w
    mad r0.w, r0.w, r0.w, c20.w
    rcp r0.w, r0.w
    mul r2.z, r2.z, c20.z
    mul_pp r0.w, r0.w, r2.z
    mad_pp r2.z, r1.w, -r1.w, c18.w
    mad_pp r3.y, r3.x, r2.z, r2.y
    mad_pp r2.y, r2_abs.x, r2.z, r2.y
    mul_pp r2.z, r2_abs.x, r3.y
    add_pp r2.x, -r2_abs.x, c18.w
    mad r2.y, r3.x, r2.y, r2.z
    add r2.y, r2.y, c20.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, c19.z
    mul r0.w, r0.w, r2.y
    mul_pp r2.y, r0.w, c21.x
    mad r0.w, r0.w, -c21.x, c21.y
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r0.w, r0.w, c21.z, r2.y
    mul_pp r0.w, r3.x, r0.w
    mad_pp r3.yzw, c15.xxyz, r4.xxyz, r1.x
    mul_pp r4.xyz, r4, c15
    mad_pp r3.yzw, c16.x, r3, r1.y
    dp3_pp r1.x, r3.yzww, r3.yzww
    cmp r1.x, -r1.x, c19.y, c19.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r5.xyz, r0, r0.w
    add_pp r0.w, -r2.w, c18.w
    mul_pp r1.x, r2.w, r2.w
    dp2add_pp r1.x, r1.x, r1.w, -c19.z
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r2.yzw, r0.w, c18.w, r3
    mul_pp r2.yzw, r2, r5.xxyz
    mul_pp r0.w, r2.x, r2.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r2.x, r0.w
    mad_pp r0.w, r1.x, r0.w, c18.w
    add_pp r1.y, -r3.x, c18.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c18.w
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r3.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c16.x, -r1.z, r1.z
    mul_pp r1.xyz, r0.w, r4
    mad_pp oC0.xyz, r1, r0, r2.yzww
    mov_pp oC0.w, c18.w

// approximately 110 instruction slots used (4 texture, 106 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 114 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb5[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r5.y, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r5.y
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  46: mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  47: mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  48: add r5.xyzw, r5.xyzw, cb3[11].xyzw
  49: div r5.xyz, r5.xyzx, r5.wwww
  50: sample_c_lz r5.x, r5.xyxx, t4.xxxx, s1, r5.z
  51: add r5.y, -cb3[24].x, l(1.000000)
  52: mad r5.x, r5.x, r5.y, cb3[24].x
  53: add_sat r1.w, r1.w, r5.x
  54: min r3.w, r1.w, r3.w
  55: movc r1.w, r2.w, r3.w, r1.w
  56: lt r2.w, l(0.000000), r4.z
  57: and r2.w, r2.w, l(0x3f800000)
  58: div r5.xy, r4.xyxx, r4.wwww
  59: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  60: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
  61: mul r2.w, r2.w, r5.w
  62: dp3 r3.w, r4.xyzx, r4.xyzx
  63: sample r4.xyzw, r3.wwww, t2.xyzw, s4
  64: mul r2.w, r2.w, r4.x
  65: mul r1.w, r1.w, r2.w
  66: mov r4.x, v3.w
  67: mov r4.y, v4.w
  68: mov r4.z, v5.w
  69: dp3 r2.w, r4.xyzx, r4.xyzx
  70: rsq r2.w, r2.w
  71: mul r5.xyz, r2.wwww, r4.xyzx
  72: mul r6.xyz, r1.wwww, cb0[2].xyzx
  73: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  74: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  75: dp3 r1.w, r4.xyzx, r4.xyzx
  76: max r1.w, r1.w, l(0.001000)
  77: rsq r1.w, r1.w
  78: mul r4.xyz, r1.wwww, r4.xyzx
  79: dp3 r1.w, r2.xyzx, -r3.xyzx
  80: dp3_sat r2.w, r2.xyzx, r5.xyzx
  81: dp3_sat r2.x, r2.xyzx, r4.xyzx
  82: dp3_sat r2.y, r5.xyzx, r4.xyzx
  83: mul r2.z, r2.y, r2.y
  84: dp2 r2.z, r2.zzzz, r0.wwww
  85: add r2.z, r2.z, l(-0.500000)
  86: add r3.x, -r2.w, l(1.000000)
  87: mul r3.y, r3.x, r3.x
  88: mul r3.y, r3.y, r3.y
  89: mul r3.x, r3.x, r3.y
  90: mad r3.x, r2.z, r3.x, l(1.000000)
  91: add r3.y, -|r1.w|, l(1.000000)
  92: mul r3.z, r3.y, r3.y
  93: mul r3.z, r3.z, r3.z
  94: mul r3.y, r3.y, r3.z
  95: mad r2.z, r2.z, r3.y, l(1.000000)
  96: mul r2.z, r2.z, r3.x
  97: mul r2.z, r2.w, r2.z
  98: mul r3.x, r0.w, r0.w
  99: mad r0.w, -r0.w, r0.w, l(1.000000)
 100: mad r3.y, |r1.w|, r0.w, r3.x
 101: mad r0.w, r2.w, r0.w, r3.x
 102: mul r0.w, r0.w, |r1.w|
 103: mad r0.w, r2.w, r3.y, r0.w
 104: add r0.w, r0.w, l(0.000010)
 105: div r0.w, l(0.500000), r0.w
 106: mul r1.w, r3.x, r3.x
 107: mad r3.x, r2.x, r1.w, -r2.x
 108: mad r2.x, r3.x, r2.x, l(1.000000)
 109: mul r1.w, r1.w, l(0.318310)
 110: mad r2.x, r2.x, r2.x, l(0.000000)
 111: div r1.w, r1.w, r2.x
 112: mul r0.w, r0.w, r1.w
 113: mul r0.w, r0.w, l(3.141593)
 114: max r0.w, r0.w, l(0.000100)
 115: sqrt r0.w, r0.w
 116: mul r0.w, r2.w, r0.w
 117: dp3 r1.w, r0.xyzx, r0.xyzx
 118: ne r1.w, r1.w, l(0.000000)
 119: and r1.w, r1.w, l(0x3f800000)
 120: mul r0.w, r0.w, r1.w
 121: mul r2.xzw, r2.zzzz, r6.xxyz
 122: mul r3.xyz, r6.xyzx, r0.wwww
 123: add r0.w, -r2.y, l(1.000000)
 124: mul r1.w, r0.w, r0.w
 125: mul r1.w, r1.w, r1.w
 126: mul r0.w, r0.w, r1.w
 127: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 128: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 129: mul r0.xyz, r0.xyzx, r3.xyzx
 130: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 131: mov o0.w, l(1.000000)
 132: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 109 math, 4 textures
Matrix4x3 unity_MatrixV at 8
Matrix4x4 unity_WorldToLight at 4
Matrix4x4 unity_WorldToShadow at 0
Vector4 _Color at 15
Float _Glossiness at 17
Vector4 _LightColor0 at 14
Vector4 _LightShadowData at 12
Float _Metallic at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_ShadowFadeCenterAndType at 13

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_WorldToShadow           c0       4
//   unity_WorldToLight            c4       4
//   unity_MatrixV                 c8       3
//   _WorldSpaceCameraPos          c11      1
//   _LightShadowData              c12      1
//   unity_ShadowFadeCenterAndType c13      1
//   _LightColor0                  c14      1
//   _Color                        c15      1
//   _Metallic                     c16      1
//   _Glossiness                   c17      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c18, -0.220916301, 0.220916301, 0.779083729, 1
    def c19, 1, 0, 0.5, 0.00100000005
    def c20, 31.622776, 9.99999975e-006, 0.318309873, 1.00000001e-007
    def c21, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    add r0.xyz, -c13, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c11.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c10
    lrp r1.x, c13.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c12.z, c12.w
    mov r1, c18
    mad r2, v5.xyzx, c19.xxxy, c19.yyyx
    dp4 r3.x, c0, r2
    dp4 r3.y, c1, r2
    dp4 r3.z, c2, r2
    dp4 r3.w, c3, r2
    texldp_pp r3, r3, s0
    lrp_pp r0.y, r3.x, r1.w, c12.x
    add_sat_pp r0.x, r0.x, r0.y
    dp4 r0.y, c7, r2
    rcp r0.y, r0.y
    dp4 r3.x, c4, r2
    dp4 r3.y, c5, r2
    dp4 r3.z, c6, r2
    mad r0.yz, r3.xxyw, r0.y, c19.z
    dp3 r0.w, r3, r3
    texld_pp r2, r0.w, s3
    texld_pp r4, r0.yzzw, s2
    mul r0.y, r2.x, r4.w
    mul r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c14
    cmp_pp r0.xyz, -r3.z, c19.y, r0
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r4.xyz, r3, r0.w, -r2
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r4, r4
    add r2.w, -r0.w, c19.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c20.x, r0.w
    mul_pp r4.xyz, r0.w, r4
    nrm_pp r5.xyz, v4
    dp3_sat_pp r0.w, r5, r4
    dp3_sat_pp r2.w, r3, r4
    dp3_sat_pp r3.x, r5, r3
    dp3_pp r2.x, r5, -r2
    add_pp r1.w, r1.w, -c17.x
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.z, r2.y, r2.y
    mad_pp r3.y, r0.w, r2.z, -r0.w
    mad_pp r0.w, r3.y, r0.w, c18.w
    mad r0.w, r0.w, r0.w, c20.w
    rcp r0.w, r0.w
    mul r2.z, r2.z, c20.z
    mul_pp r0.w, r0.w, r2.z
    mad_pp r2.z, r1.w, -r1.w, c18.w
    mad_pp r3.y, r2_abs.x, r2.z, r2.y
    mad_pp r2.y, r3.x, r2.z, r2.y
    mul_pp r2.y, r2.y, r2_abs.x
    add_pp r2.x, -r2_abs.x, c18.w
    mad r2.y, r3.x, r3.y, r2.y
    add r2.y, r2.y, c20.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, c19.z
    mul r0.w, r0.w, r2.y
    mul_pp r2.y, r0.w, c21.x
    mad r0.w, r0.w, -c21.x, c21.y
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r0.w, r0.w, c21.z, r2.y
    mul_pp r0.w, r3.x, r0.w
    texld r4, v0, s1
    mad_pp r3.yzw, c15.xxyz, r4.xxyz, r1.x
    mul_pp r4.xyz, r4, c15
    mad_pp r3.yzw, c16.x, r3, r1.y
    dp3_pp r1.x, r3.yzww, r3.yzww
    cmp r1.x, -r1.x, c19.y, c19.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r5.xyz, r0, r0.w
    add_pp r0.w, -r2.w, c18.w
    mul_pp r1.x, r2.w, r2.w
    dp2add_pp r1.x, r1.x, r1.w, -c19.z
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r2.yzw, r0.w, c18.w, r3
    mul_pp r2.yzw, r2, r5.xxyz
    mul_pp r0.w, r2.x, r2.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r2.x, r0.w
    mad_pp r0.w, r1.x, r0.w, c18.w
    add_pp r1.y, -r3.x, c18.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c18.w
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r3.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c16.x, -r1.z, r1.z
    mul_pp r1.xyz, r0.w, r4
    mad_pp oC0.xyz, r1, r0, r2.yzww
    mov_pp oC0.w, c18.w

// approximately 110 instruction slots used (4 texture, 106 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 114 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  45: mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  46: mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  47: mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  48: add r5.xyzw, r5.xyzw, cb3[11].xyzw
  49: div r5.xyz, r5.xyzx, r5.wwww
  50: sample_c_lz r3.w, r5.xyxx, t4.xxxx, s1, r5.z
  51: add r5.x, -cb3[24].x, l(1.000000)
  52: mad r3.w, r3.w, r5.x, cb3[24].x
  53: add_sat r0.w, r0.w, r3.w
  54: min r2.w, r0.w, r2.w
  55: movc r0.w, r1.w, r2.w, r0.w
  56: lt r1.w, l(0.000000), r4.z
  57: and r1.w, r1.w, l(0x3f800000)
  58: div r5.xy, r4.xyxx, r4.wwww
  59: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  60: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
  61: mul r1.w, r1.w, r5.w
  62: dp3 r2.w, r4.xyzx, r4.xyzx
  63: sample r4.xyzw, r2.wwww, t2.xyzw, s4
  64: mul r1.w, r1.w, r4.x
  65: mul r0.w, r0.w, r1.w
  66: mov r4.x, v3.w
  67: mov r4.y, v4.w
  68: mov r4.z, v5.w
  69: dp3 r1.w, r4.xyzx, r4.xyzx
  70: rsq r1.w, r1.w
  71: mul r5.xyz, r1.wwww, r4.xyzx
  72: mul r6.xyz, r0.wwww, cb0[2].xyzx
  73: add r0.w, -cb0[8].w, l(1.000000)
  74: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  75: dp3 r1.w, r4.xyzx, r4.xyzx
  76: max r1.w, r1.w, l(0.001000)
  77: rsq r1.w, r1.w
  78: mul r4.xyz, r1.wwww, r4.xyzx
  79: dp3 r1.w, r2.xyzx, -r3.xyzx
  80: dp3_sat r2.w, r2.xyzx, r5.xyzx
  81: dp3_sat r2.x, r2.xyzx, r4.xyzx
  82: dp3_sat r2.y, r5.xyzx, r4.xyzx
  83: mul r2.z, r2.y, r2.y
  84: dp2 r2.z, r2.zzzz, r0.wwww
  85: add r2.z, r2.z, l(-0.500000)
  86: add r3.x, -r2.w, l(1.000000)
  87: mul r3.y, r3.x, r3.x
  88: mul r3.y, r3.y, r3.y
  89: mul r3.x, r3.x, r3.y
  90: mad r3.x, r2.z, r3.x, l(1.000000)
  91: add r3.y, -|r1.w|, l(1.000000)
  92: mul r3.z, r3.y, r3.y
  93: mul r3.z, r3.z, r3.z
  94: mul r3.y, r3.y, r3.z
  95: mad r2.z, r2.z, r3.y, l(1.000000)
  96: mul r2.z, r2.z, r3.x
  97: mul r2.z, r2.w, r2.z
  98: mul r3.x, r0.w, r0.w
  99: mad r0.w, -r0.w, r0.w, l(1.000000)
 100: mad r3.y, |r1.w|, r0.w, r3.x
 101: mad r0.w, r2.w, r0.w, r3.x
 102: mul r0.w, r0.w, |r1.w|
 103: mad r0.w, r2.w, r3.y, r0.w
 104: add r0.w, r0.w, l(0.000010)
 105: div r0.w, l(0.500000), r0.w
 106: mul r1.w, r3.x, r3.x
 107: mad r3.x, r2.x, r1.w, -r2.x
 108: mad r2.x, r3.x, r2.x, l(1.000000)
 109: mul r1.w, r1.w, l(0.318310)
 110: mad r2.x, r2.x, r2.x, l(0.000000)
 111: div r1.w, r1.w, r2.x
 112: mul r0.w, r0.w, r1.w
 113: mul r0.w, r0.w, l(3.141593)
 114: max r0.w, r0.w, l(0.000100)
 115: sqrt r0.w, r0.w
 116: mul r0.w, r2.w, r0.w
 117: dp3 r1.w, r0.xyzx, r0.xyzx
 118: ne r1.w, r1.w, l(0.000000)
 119: and r1.w, r1.w, l(0x3f800000)
 120: mul r0.w, r0.w, r1.w
 121: mul r2.xzw, r2.zzzz, r6.xxyz
 122: mul r3.xyz, r6.xyzx, r0.wwww
 123: add r0.w, -r2.y, l(1.000000)
 124: mul r1.w, r0.w, r0.w
 125: mul r1.w, r1.w, r1.w
 126: mul r0.w, r0.w, r1.w
 127: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 128: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 129: mul r0.xyz, r0.xyzx, r3.xyzx
 130: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 131: mov o0.w, l(1.000000)
 132: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH SHADOWS_SOFT _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 119 math, 7 textures
Matrix4x3 unity_MatrixV at 12
Matrix4x4 unity_WorldToLight at 8
Matrix4x4 unity_WorldToShadow at 0
Vector4 _Color at 19
Float _GlossMapScale at 21
Vector4 _LightColor0 at 18
Vector4 _LightShadowData at 16
Float _Metallic at 20
Vector4 _ShadowOffsets[4] at 4
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_ShadowFadeCenterAndType at 17

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 _ShadowOffsets[4];
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_WorldToShadow           c0       4
//   _ShadowOffsets                c4       4
//   unity_WorldToLight            c8       4
//   unity_MatrixV                 c12      3
//   _WorldSpaceCameraPos          c15      1
//   _LightShadowData              c16      1
//   unity_ShadowFadeCenterAndType c17      1
//   _LightColor0                  c18      1
//   _Color                        c19      1
//   _Metallic                     c20      1
//   _GlossMapScale                c21      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c22, -0.220916301, 0.220916301, 0.779083729, 0.25
    def c23, 1, 0, 0.5, 0.00100000005
    def c24, 31.622776, 9.99999975e-006, 0.318309873, 1.00000001e-007
    def c25, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    add r0.xyz, -c17, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c15.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c14
    lrp r1.x, c17.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c16.z, c16.w
    mad r1, v5.xyzx, c23.xxxy, c23.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    rcp r0.y, r2.w
    mad r3, r2, r0.y, c4
    texldp_pp r3, r3, s0
    mad r4, r2, r0.y, c5
    texldp_pp r4, r4, s0
    mov_pp r3.y, r4.x
    mad r4, r2, r0.y, c6
    mad r2, r2, r0.y, c7
    texldp_pp r2, r2, s0
    mov_pp r3.w, r2.x
    texldp_pp r2, r4, s0
    mov_pp r3.z, r2.x
    dp4_pp r0.y, r3, c22.w
    mov r2.x, c23.x
    lrp_pp r3.x, r0.y, r2.x, c16.x
    add_sat_pp r0.x, r0.x, r3.x
    dp4 r0.y, c11, r1
    rcp r0.y, r0.y
    dp4 r3.x, c8, r1
    dp4 r3.y, c9, r1
    dp4 r3.z, c10, r1
    mad r0.yz, r3.xxyw, r0.y, c23.z
    dp3 r0.w, r3, r3
    texld_pp r1, r0.w, s3
    texld_pp r4, r0.yzzw, s2
    mul r0.y, r1.x, r4.w
    mul r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c18
    cmp_pp r0.xyz, -r3.z, c23.y, r0
    nrm_pp r1.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r2.yzw, r3.xxyz, r0.w, -r1.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r2.yzww, r2.yzww
    add r1.w, -r0.w, c23.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c24.x, r0.w
    mul_pp r2.yzw, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2.yzww
    dp3_sat_pp r1.w, r3, r2.yzww
    dp3_sat_pp r2.y, r4, r3
    dp3_pp r1.x, r4, -r1
    texld r3, v0, s1
    mad_pp r1.y, r3.w, -c21.x, r2.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r2.x, r1.z, r1.z
    mad_pp r2.z, r0.w, r2.x, -r0.w
    mad_pp r0.w, r2.z, r0.w, c23.x
    mad r0.w, r0.w, r0.w, c24.w
    rcp r0.w, r0.w
    mul r2.x, r2.x, c24.z
    mul_pp r0.w, r0.w, r2.x
    mad_pp r2.x, r1.y, -r1.y, c23.x
    mad_pp r2.z, r2.y, r2.x, r1.z
    mad_pp r1.z, r1_abs.x, r2.x, r1.z
    mul_pp r2.x, r1_abs.x, r2.z
    add_pp r1.x, -r1_abs.x, c23.x
    mad r1.z, r2.y, r1.z, r2.x
    add r1.z, r1.z, c24.y
    rcp r1.z, r1.z
    mul_pp r1.z, r1.z, c23.z
    mul r0.w, r0.w, r1.z
    mul_pp r1.z, r0.w, c25.x
    mad r0.w, r0.w, -c25.x, c25.y
    rsq r1.z, r1.z
    rcp_pp r1.z, r1.z
    cmp_pp r0.w, r0.w, c25.z, r1.z
    mul_pp r0.w, r2.y, r0.w
    mov r4.xyz, c22
    mad_pp r2.xzw, c19.xyyz, r3.xyyz, r4.x
    mul_pp r3.xyz, r3, c19
    mad_pp r2.xzw, c20.x, r2, r4.y
    dp3_pp r1.z, r2.xzww, r2.xzww
    cmp r1.z, -r1.z, c23.y, c23.x
    mul_pp r0.w, r0.w, r1.z
    mul_pp r4.xyw, r0.xyzz, r0.w
    add_pp r0.w, -r1.w, c23.x
    mul_pp r1.z, r1.w, r1.w
    dp2add_pp r1.y, r1.z, r1.y, -c23.z
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    lrp_pp r5.xyz, r0.w, c23.x, r2.xzww
    mul_pp r2.xzw, r4.xyyw, r5.xyyz
    mul_pp r0.w, r1.x, r1.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r0.w, r1.y, r0.w, c23.x
    add_pp r1.x, -r2.y, c23.x
    mul_pp r1.z, r1.x, r1.x
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.x, r1.x, r1.z
    mad_pp r1.x, r1.y, r1.x, c23.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.y, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c20.x, -r4.z, r4.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.xzww
    mov_pp oC0.w, c23.x

// approximately 123 instruction slots used (7 texture, 116 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[14].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[12].xxxy, cb0[12].zzzw
  11: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 143 math, 11 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _Metallic at 216
  Float _GlossMapScale at 224
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 11
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[9].xyzx
   2: mad r0.xyz, cb0[9].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[13].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[13].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  13: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb5[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r5.y, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r5.y
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: lt r5.x, r1.w, l(0.990000)
  46: if_nz r5.x
  47:   mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  48:   mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  49:   mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  50:   add r5.xyzw, r5.xyzw, cb3[11].xyzw
  51:   div r5.xyz, r5.xyzx, r5.wwww
  52:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  53:   round_ni r6.xy, r6.xyxx
  54:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  55:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  56:   mul r8.xw, r7.xxxz, r7.xxxz
  57:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  58:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  59:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  61:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  63:   mov r9.x, r6.z
  64:   mov r9.y, r7.x
  65:   mov r9.z, r5.x
  66:   mov r9.w, r8.x
  67:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  68:   mov r8.x, r6.w
  69:   mov r8.y, r7.z
  70:   mov r8.z, r5.y
  71:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  72:   add r8.xyzw, r9.ywyw, r9.xzxz
  73:   add r10.xyzw, r7.yyww, r7.xxzz
  74:   div r5.xy, r9.ywyy, r8.zwzz
  75:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  76:   div r6.zw, r7.yyyw, r10.yyyw
  77:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  78:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  79:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  80:   mul r8.xyzw, r8.xyzw, r10.xyzw
  81:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  82:   sample_c_lz r5.x, r9.xyxx, t4.xxxx, s1, r5.z
  83:   sample_c_lz r5.y, r9.zwzz, t4.xxxx, s1, r5.z
  84:   mul r5.y, r5.y, r8.y
  85:   mad r5.x, r8.x, r5.x, r5.y
  86:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
  87:   sample_c_lz r5.y, r6.xyxx, t4.xxxx, s1, r5.z
  88:   mad r5.x, r8.z, r5.y, r5.x
  89:   sample_c_lz r5.y, r6.zwzz, t4.xxxx, s1, r5.z
  90:   mad r5.x, r8.w, r5.y, r5.x
  91:   add r5.y, -cb3[24].x, l(1.000000)
  92:   mad r5.x, r5.x, r5.y, cb3[24].x
  93: else 
  94:   mov r5.x, l(1.000000)
  95: endif 
  96: add_sat r1.w, r1.w, r5.x
  97: min r3.w, r1.w, r3.w
  98: movc r1.w, r2.w, r3.w, r1.w
  99: lt r2.w, l(0.000000), r4.z
 100: and r2.w, r2.w, l(0x3f800000)
 101: div r5.xy, r4.xyxx, r4.wwww
 102: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 103: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
 104: mul r2.w, r2.w, r5.w
 105: dp3 r3.w, r4.xyzx, r4.xyzx
 106: sample r4.xyzw, r3.wwww, t2.xyzw, s4
 107: mul r2.w, r2.w, r4.x
 108: mul r1.w, r1.w, r2.w
 109: mov r4.x, v3.w
 110: mov r4.y, v4.w
 111: mov r4.z, v5.w
 112: dp3 r2.w, r4.xyzx, r4.xyzx
 113: rsq r2.w, r2.w
 114: mul r5.xyz, r2.wwww, r4.xyzx
 115: mul r6.xyz, r1.wwww, cb0[2].xyzx
 116: mad r0.w, -r0.w, cb0[14].x, l(1.000000)
 117: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
 118: dp3 r1.w, r4.xyzx, r4.xyzx
 119: max r1.w, r1.w, l(0.001000)
 120: rsq r1.w, r1.w
 121: mul r4.xyz, r1.wwww, r4.xyzx
 122: dp3 r1.w, r2.xyzx, -r3.xyzx
 123: dp3_sat r2.w, r2.xyzx, r5.xyzx
 124: dp3_sat r2.x, r2.xyzx, r4.xyzx
 125: dp3_sat r2.y, r5.xyzx, r4.xyzx
 126: mul r2.z, r2.y, r2.y
 127: dp2 r2.z, r2.zzzz, r0.wwww
 128: add r2.z, r2.z, l(-0.500000)
 129: add r3.x, -r2.w, l(1.000000)
 130: mul r3.y, r3.x, r3.x
 131: mul r3.y, r3.y, r3.y
 132: mul r3.x, r3.x, r3.y
 133: mad r3.x, r2.z, r3.x, l(1.000000)
 134: add r3.y, -|r1.w|, l(1.000000)
 135: mul r3.z, r3.y, r3.y
 136: mul r3.z, r3.z, r3.z
 137: mul r3.y, r3.y, r3.z
 138: mad r2.z, r2.z, r3.y, l(1.000000)
 139: mul r2.z, r2.z, r3.x
 140: mul r2.z, r2.w, r2.z
 141: mul r3.x, r0.w, r0.w
 142: mad r0.w, -r0.w, r0.w, l(1.000000)
 143: mad r3.y, |r1.w|, r0.w, r3.x
 144: mad r0.w, r2.w, r0.w, r3.x
 145: mul r0.w, r0.w, |r1.w|
 146: mad r0.w, r2.w, r3.y, r0.w
 147: add r0.w, r0.w, l(0.000010)
 148: div r0.w, l(0.500000), r0.w
 149: mul r1.w, r3.x, r3.x
 150: mad r3.x, r2.x, r1.w, -r2.x
 151: mad r2.x, r3.x, r2.x, l(1.000000)
 152: mul r1.w, r1.w, l(0.318310)
 153: mad r2.x, r2.x, r2.x, l(0.000000)
 154: div r1.w, r1.w, r2.x
 155: mul r0.w, r0.w, r1.w
 156: mul r0.w, r0.w, l(3.141593)
 157: max r0.w, r0.w, l(0.000100)
 158: sqrt r0.w, r0.w
 159: mul r0.w, r2.w, r0.w
 160: dp3 r1.w, r0.xyzx, r0.xyzx
 161: ne r1.w, r1.w, l(0.000000)
 162: and r1.w, r1.w, l(0x3f800000)
 163: mul r0.w, r0.w, r1.w
 164: mul r2.xzw, r2.zzzz, r6.xxyz
 165: mul r3.xyz, r6.xyzx, r0.wwww
 166: add r0.w, -r2.y, l(1.000000)
 167: mul r1.w, r0.w, r0.w
 168: mul r1.w, r1.w, r1.w
 169: mul r0.w, r0.w, r1.w
 170: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 171: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 172: mul r0.xyz, r0.xyzx, r3.xyzx
 173: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 174: mov o0.w, l(1.000000)
 175: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 119 math, 7 textures
Matrix4x3 unity_MatrixV at 12
Matrix4x4 unity_WorldToLight at 8
Matrix4x4 unity_WorldToShadow at 0
Vector4 _Color at 19
Float _Glossiness at 21
Vector4 _LightColor0 at 18
Vector4 _LightShadowData at 16
Float _Metallic at 20
Vector4 _ShadowOffsets[4] at 4
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_ShadowFadeCenterAndType at 17

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 _ShadowOffsets[4];
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_WorldToShadow           c0       4
//   _ShadowOffsets                c4       4
//   unity_WorldToLight            c8       4
//   unity_MatrixV                 c12      3
//   _WorldSpaceCameraPos          c15      1
//   _LightShadowData              c16      1
//   unity_ShadowFadeCenterAndType c17      1
//   _LightColor0                  c18      1
//   _Color                        c19      1
//   _Metallic                     c20      1
//   _Glossiness                   c21      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c22, -0.220916301, 0.220916301, 0.779083729, 0.25
    def c23, 1, 0, 0.5, 0.00100000005
    def c24, 31.622776, 9.99999975e-006, 0.318309873, 1.00000001e-007
    def c25, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    add r0.xyz, -c17, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c15.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c14
    lrp r1.x, c17.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c16.z, c16.w
    mad r1, v5.xyzx, c23.xxxy, c23.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    rcp r0.y, r2.w
    mad r3, r2, r0.y, c4
    texldp_pp r3, r3, s0
    mad r4, r2, r0.y, c5
    texldp_pp r4, r4, s0
    mov_pp r3.y, r4.x
    mad r4, r2, r0.y, c6
    mad r2, r2, r0.y, c7
    texldp_pp r2, r2, s0
    mov_pp r3.w, r2.x
    texldp_pp r2, r4, s0
    mov_pp r3.z, r2.x
    dp4_pp r0.y, r3, c22.w
    mov r2.x, c23.x
    lrp_pp r3.x, r0.y, r2.x, c16.x
    add_sat_pp r0.x, r0.x, r3.x
    dp4 r0.y, c11, r1
    rcp r0.y, r0.y
    dp4 r3.x, c8, r1
    dp4 r3.y, c9, r1
    dp4 r3.z, c10, r1
    mad r0.yz, r3.xxyw, r0.y, c23.z
    dp3 r0.w, r3, r3
    texld_pp r1, r0.w, s3
    texld_pp r4, r0.yzzw, s2
    mul r0.y, r1.x, r4.w
    mul r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c18
    cmp_pp r0.xyz, -r3.z, c23.y, r0
    nrm_pp r1.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r2.yzw, r3.xxyz, r0.w, -r1.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r2.yzww, r2.yzww
    add r1.w, -r0.w, c23.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c24.x, r0.w
    mul_pp r2.yzw, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2.yzww
    dp3_sat_pp r1.w, r3, r2.yzww
    dp3_sat_pp r2.y, r4, r3
    dp3_pp r1.x, r4, -r1
    add_pp r1.y, r2.x, -c21.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r2.x, r1.z, r1.z
    mad_pp r2.z, r0.w, r2.x, -r0.w
    mad_pp r0.w, r2.z, r0.w, c23.x
    mad r0.w, r0.w, r0.w, c24.w
    rcp r0.w, r0.w
    mul r2.x, r2.x, c24.z
    mul_pp r0.w, r0.w, r2.x
    mad_pp r2.x, r1.y, -r1.y, c23.x
    mad_pp r2.z, r1_abs.x, r2.x, r1.z
    mad_pp r1.z, r2.y, r2.x, r1.z
    mul_pp r1.z, r1.z, r1_abs.x
    add_pp r1.x, -r1_abs.x, c23.x
    mad r1.z, r2.y, r2.z, r1.z
    add r1.z, r1.z, c24.y
    rcp r1.z, r1.z
    mul_pp r1.z, r1.z, c23.z
    mul r0.w, r0.w, r1.z
    mul_pp r1.z, r0.w, c25.x
    mad r0.w, r0.w, -c25.x, c25.y
    rsq r1.z, r1.z
    rcp_pp r1.z, r1.z
    cmp_pp r0.w, r0.w, c25.z, r1.z
    mul_pp r0.w, r2.y, r0.w
    texld r3, v0, s1
    mov r4.xyz, c22
    mad_pp r2.xzw, c19.xyyz, r3.xyyz, r4.x
    mul_pp r3.xyz, r3, c19
    mad_pp r2.xzw, c20.x, r2, r4.y
    dp3_pp r1.z, r2.xzww, r2.xzww
    cmp r1.z, -r1.z, c23.y, c23.x
    mul_pp r0.w, r0.w, r1.z
    mul_pp r4.xyw, r0.xyzz, r0.w
    add_pp r0.w, -r1.w, c23.x
    mul_pp r1.z, r1.w, r1.w
    dp2add_pp r1.y, r1.z, r1.y, -c23.z
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    lrp_pp r5.xyz, r0.w, c23.x, r2.xzww
    mul_pp r2.xzw, r4.xyyw, r5.xyyz
    mul_pp r0.w, r1.x, r1.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r0.w, r1.y, r0.w, c23.x
    add_pp r1.x, -r2.y, c23.x
    mul_pp r1.z, r1.x, r1.x
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.x, r1.x, r1.z
    mad_pp r1.x, r1.y, r1.x, c23.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.y, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c20.x, -r4.z, r4.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.xzww
    mov_pp oC0.w, c23.x

// approximately 123 instruction slots used (7 texture, 116 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[14].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[12].xxxy, cb0[12].zzzw
  11: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 143 math, 11 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _Metallic at 216
  Float _Glossiness at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 11
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[9].xyzx
   2: mad r0.xyz, cb0[9].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[13].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[13].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  13: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  45: lt r3.w, r0.w, l(0.990000)
  46: if_nz r3.w
  47:   mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  48:   mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  49:   mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  50:   add r5.xyzw, r5.xyzw, cb3[11].xyzw
  51:   div r5.xyz, r5.xyzx, r5.wwww
  52:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  53:   round_ni r6.xy, r6.xyxx
  54:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  55:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  56:   mul r8.xw, r7.xxxz, r7.xxxz
  57:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  58:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  59:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  61:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  63:   mov r9.x, r6.z
  64:   mov r9.y, r7.x
  65:   mov r9.z, r5.x
  66:   mov r9.w, r8.x
  67:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  68:   mov r8.x, r6.w
  69:   mov r8.y, r7.z
  70:   mov r8.z, r5.y
  71:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  72:   add r8.xyzw, r9.ywyw, r9.xzxz
  73:   add r10.xyzw, r7.yyww, r7.xxzz
  74:   div r5.xy, r9.ywyy, r8.zwzz
  75:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  76:   div r6.zw, r7.yyyw, r10.yyyw
  77:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  78:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  79:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  80:   mul r8.xyzw, r8.xyzw, r10.xyzw
  81:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  82:   sample_c_lz r3.w, r9.xyxx, t4.xxxx, s1, r5.z
  83:   sample_c_lz r5.x, r9.zwzz, t4.xxxx, s1, r5.z
  84:   mul r5.x, r5.x, r8.y
  85:   mad r3.w, r8.x, r3.w, r5.x
  86:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
  87:   sample_c_lz r5.x, r6.xyxx, t4.xxxx, s1, r5.z
  88:   mad r3.w, r8.z, r5.x, r3.w
  89:   sample_c_lz r5.x, r6.zwzz, t4.xxxx, s1, r5.z
  90:   mad r3.w, r8.w, r5.x, r3.w
  91:   add r5.x, -cb3[24].x, l(1.000000)
  92:   mad r3.w, r3.w, r5.x, cb3[24].x
  93: else 
  94:   mov r3.w, l(1.000000)
  95: endif 
  96: add_sat r0.w, r0.w, r3.w
  97: min r2.w, r0.w, r2.w
  98: movc r0.w, r1.w, r2.w, r0.w
  99: lt r1.w, l(0.000000), r4.z
 100: and r1.w, r1.w, l(0x3f800000)
 101: div r5.xy, r4.xyxx, r4.wwww
 102: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 103: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
 104: mul r1.w, r1.w, r5.w
 105: dp3 r2.w, r4.xyzx, r4.xyzx
 106: sample r4.xyzw, r2.wwww, t2.xyzw, s4
 107: mul r1.w, r1.w, r4.x
 108: mul r0.w, r0.w, r1.w
 109: mov r4.x, v3.w
 110: mov r4.y, v4.w
 111: mov r4.z, v5.w
 112: dp3 r1.w, r4.xyzx, r4.xyzx
 113: rsq r1.w, r1.w
 114: mul r5.xyz, r1.wwww, r4.xyzx
 115: mul r6.xyz, r0.wwww, cb0[2].xyzx
 116: add r0.w, -cb0[13].w, l(1.000000)
 117: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
 118: dp3 r1.w, r4.xyzx, r4.xyzx
 119: max r1.w, r1.w, l(0.001000)
 120: rsq r1.w, r1.w
 121: mul r4.xyz, r1.wwww, r4.xyzx
 122: dp3 r1.w, r2.xyzx, -r3.xyzx
 123: dp3_sat r2.w, r2.xyzx, r5.xyzx
 124: dp3_sat r2.x, r2.xyzx, r4.xyzx
 125: dp3_sat r2.y, r5.xyzx, r4.xyzx
 126: mul r2.z, r2.y, r2.y
 127: dp2 r2.z, r2.zzzz, r0.wwww
 128: add r2.z, r2.z, l(-0.500000)
 129: add r3.x, -r2.w, l(1.000000)
 130: mul r3.y, r3.x, r3.x
 131: mul r3.y, r3.y, r3.y
 132: mul r3.x, r3.x, r3.y
 133: mad r3.x, r2.z, r3.x, l(1.000000)
 134: add r3.y, -|r1.w|, l(1.000000)
 135: mul r3.z, r3.y, r3.y
 136: mul r3.z, r3.z, r3.z
 137: mul r3.y, r3.y, r3.z
 138: mad r2.z, r2.z, r3.y, l(1.000000)
 139: mul r2.z, r2.z, r3.x
 140: mul r2.z, r2.w, r2.z
 141: mul r3.x, r0.w, r0.w
 142: mad r0.w, -r0.w, r0.w, l(1.000000)
 143: mad r3.y, |r1.w|, r0.w, r3.x
 144: mad r0.w, r2.w, r0.w, r3.x
 145: mul r0.w, r0.w, |r1.w|
 146: mad r0.w, r2.w, r3.y, r0.w
 147: add r0.w, r0.w, l(0.000010)
 148: div r0.w, l(0.500000), r0.w
 149: mul r1.w, r3.x, r3.x
 150: mad r3.x, r2.x, r1.w, -r2.x
 151: mad r2.x, r3.x, r2.x, l(1.000000)
 152: mul r1.w, r1.w, l(0.318310)
 153: mad r2.x, r2.x, r2.x, l(0.000000)
 154: div r1.w, r1.w, r2.x
 155: mul r0.w, r0.w, r1.w
 156: mul r0.w, r0.w, l(3.141593)
 157: max r0.w, r0.w, l(0.000100)
 158: sqrt r0.w, r0.w
 159: mul r0.w, r2.w, r0.w
 160: dp3 r1.w, r0.xyzx, r0.xyzx
 161: ne r1.w, r1.w, l(0.000000)
 162: and r1.w, r1.w, l(0x3f800000)
 163: mul r0.w, r0.w, r1.w
 164: mul r2.xzw, r2.zzzz, r6.xxyz
 165: mul r3.xyz, r6.xyzx, r0.wwww
 166: add r0.w, -r2.y, l(1.000000)
 167: mul r1.w, r0.w, r0.w
 168: mul r1.w, r1.w, r1.w
 169: mul r0.w, r0.w, r1.w
 170: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 171: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 172: mul r0.xyz, r0.xyzx, r3.xyzx
 173: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 174: mov o0.w, l(1.000000)
 175: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 89 math, 2 textures
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 7
Float _GlossMapScale at 9
Vector4 _LightColor0 at 6
Vector4 _LightShadowData at 4
Float _Metallic at 8
Vector4 _WorldSpaceCameraPos at 3
Vector4 unity_ShadowFadeCenterAndType at 5

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _LightShadowData              c4       1
//   unity_ShadowFadeCenterAndType c5       1
//   _LightColor0                  c6       1
//   _Color                        c7       1
//   _Metallic                     c8       1
//   _GlossMapScale                c9       1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//

    ps_3_0
    def c10, -0.220916301, 0.220916301, 0.779083729, 1
    def c11, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c12, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c13, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    add r0.xyz, -c5, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c3.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c5.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c4.z, c4.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mul_pp r0.xyz, r0.x, c6
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c11.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c11.y, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    texld r2, v0, s0
    mov r3, c10
    mad_pp r1.z, r2.w, -c9.x, r3.w
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.w, r2.w, r2.w
    mad_pp r4.x, r0.w, r3.w, -r0.w
    mad_pp r0.w, r4.x, r0.w, c10.w
    mad r0.w, r0.w, r0.w, c12.y
    rcp r0.w, r0.w
    mul r3.w, r3.w, c12.x
    mul_pp r0.w, r0.w, r3.w
    mad_pp r3.w, r1.z, -r1.z, c10.w
    mad_pp r4.x, r1_abs.y, r3.w, r2.w
    mad_pp r2.w, r1.x, r3.w, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c10.w
    mad r2.w, r1.x, r4.x, r2.w
    add r2.w, r2.w, c11.w
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, -c11.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c12.z
    mad r0.w, r0.w, -c12.z, c12.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c13.x, r2.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r4.xyz, c7, r2, r3.x
    mul_pp r2.xyz, r2, c7
    mad_pp r3.xyw, c8.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c13.y, c13.z
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c10.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c11.z
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c10.w, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c10.w
    add_pp r1.y, -r1.x, c10.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c10.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c8.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c10.w

// approximately 89 instruction slots used (2 texture, 87 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  13: mov r5.x, cb4[9].z
  14: mov r5.y, cb4[10].z
  15: mov r5.z, cb4[11].z
  16: dp3 r2.w, r4.xyzx, r5.xyzx
  17: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  18: dp3 r3.w, r4.xyzx, r4.xyzx
  19: sqrt r3.w, r3.w
  20: add r3.w, -r2.w, r3.w
  21: mad r2.w, cb3[25].w, r3.w, r2.w
  22: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  23: eq r3.w, cb5[0].x, l(1.000000)
  24: if_nz r3.w
  25:   eq r4.x, cb5[0].y, l(1.000000)
  26:   mul r4.yzw, v6.yyyy, cb5[2].xxyz
  27:   mad r4.yzw, cb5[1].xxyz, v6.xxxx, r4.yyzw
  28:   mad r4.yzw, cb5[3].xxyz, v6.zzzz, r4.yyzw
  29:   add r4.yzw, r4.yyzw, cb5[4].xxyz
  30:   movc r4.xyz, r4.xxxx, r4.yzwy, v6.xyzx
  31:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  32:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  33:   mad r4.y, r4.y, l(0.250000), l(0.750000)
  34:   mad r5.x, cb5[0].z, l(0.500000), l(0.750000)
  35:   max r4.x, r4.y, r5.x
  36:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  37: else 
  38:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r4.x, r4.xyzw, cb2[45].xyzw
  41: div r4.yz, v7.xxyx, v7.wwww
  42: sample r5.xyzw, r4.yzyy, t1.xyzw, s2
  43: add_sat r2.w, r2.w, r5.x
  44: min r4.x, r2.w, r4.x
  45: movc r2.w, r3.w, r4.x, r2.w
  46: mul r4.xyz, r2.wwww, cb0[2].xyzx
  47: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  52: dp3 r1.w, r6.xyzx, r6.xyzx
  53: max r1.w, r1.w, l(0.001000)
  54: rsq r1.w, r1.w
  55: mul r6.xyz, r1.wwww, r6.xyzx
  56: dp3 r1.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r0.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r1.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r3.x, r0.w, r0.w
  76: mad r0.w, -r0.w, r0.w, l(1.000000)
  77: mad r3.y, |r1.w|, r0.w, r3.x
  78: mad r0.w, r2.w, r0.w, r3.x
  79: mul r0.w, r0.w, |r1.w|
  80: mad r0.w, r2.w, r3.y, r0.w
  81: add r0.w, r0.w, l(0.000010)
  82: div r0.w, l(0.500000), r0.w
  83: mul r1.w, r3.x, r3.x
  84: mad r3.x, r2.x, r1.w, -r2.x
  85: mad r2.x, r3.x, r2.x, l(1.000000)
  86: mul r1.w, r1.w, l(0.318310)
  87: mad r2.x, r2.x, r2.x, l(0.000000)
  88: div r1.w, r1.w, r2.x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r0.w, l(3.141593)
  91: max r0.w, r0.w, l(0.000100)
  92: sqrt r0.w, r0.w
  93: mul r0.w, r2.w, r0.w
  94: dp3 r1.w, r0.xyzx, r0.xyzx
  95: ne r1.w, r1.w, l(0.000000)
  96: and r1.w, r1.w, l(0x3f800000)
  97: mul r0.w, r0.w, r1.w
  98: mul r2.xzw, r2.zzzz, r4.xxyz
  99: mul r3.xyz, r4.xyzx, r0.wwww
 100: add r0.w, -r2.y, l(1.000000)
 101: mul r1.w, r0.w, r0.w
 102: mul r1.w, r1.w, r1.w
 103: mul r0.w, r0.w, r1.w
 104: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 106: mul r0.xyz, r0.xyzx, r3.xyzx
 107: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 108: mov o0.w, l(1.000000)
 109: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 89 math, 2 textures
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 7
Float _Glossiness at 9
Vector4 _LightColor0 at 6
Vector4 _LightShadowData at 4
Float _Metallic at 8
Vector4 _WorldSpaceCameraPos at 3
Vector4 unity_ShadowFadeCenterAndType at 5

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _LightShadowData              c4       1
//   unity_ShadowFadeCenterAndType c5       1
//   _LightColor0                  c6       1
//   _Color                        c7       1
//   _Metallic                     c8       1
//   _Glossiness                   c9       1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//

    ps_3_0
    def c10, -0.220916301, 0.220916301, 0.779083729, 1
    def c11, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c12, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c13, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    add r0.xyz, -c5, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c3.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c5.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c4.z, c4.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mul_pp r0.xyz, r0.x, c6
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c11.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c11.y, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    mov r2, c10
    add_pp r1.z, r2.w, -c9.x
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c10.w
    mad r0.w, r0.w, r0.w, c12.y
    rcp r0.w, r0.w
    mul r3.x, r3.x, c12.x
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.z, -r1.z, c10.w
    mad_pp r3.y, r1_abs.y, r3.x, r2.w
    mad_pp r2.w, r1.x, r3.x, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c10.w
    mad r2.w, r1.x, r3.y, r2.w
    add r2.w, r2.w, c11.w
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, -c11.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c12.z
    mad r0.w, r0.w, -c12.z, c12.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c13.x, r2.w
    mul_pp r0.w, r1.x, r0.w
    texld r3, v0, s0
    mad_pp r4.xyz, c7, r3, r2.x
    mul_pp r3.xyz, r3, c7
    mad_pp r2.xyw, c8.x, r4.xyzz, r2.y
    dp3_pp r3.w, r2.xyww, r2.xyww
    cmp r3.w, -r3.w, c13.y, c13.z
    mul_pp r0.w, r0.w, r3.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c10.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c11.z
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c10.w, r2.xyww
    mul_pp r2.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c10.w
    add_pp r1.y, -r1.x, c10.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c10.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c8.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.xyww
    mov_pp oC0.w, c10.w

// approximately 89 instruction slots used (2 texture, 87 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  13: mov r5.x, cb4[9].z
  14: mov r5.y, cb4[10].z
  15: mov r5.z, cb4[11].z
  16: dp3 r1.w, r4.xyzx, r5.xyzx
  17: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  18: dp3 r2.w, r4.xyzx, r4.xyzx
  19: sqrt r2.w, r2.w
  20: add r2.w, -r1.w, r2.w
  21: mad r1.w, cb3[25].w, r2.w, r1.w
  22: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  23: eq r2.w, cb5[0].x, l(1.000000)
  24: if_nz r2.w
  25:   eq r3.w, cb5[0].y, l(1.000000)
  26:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  27:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  28:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  29:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  30:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  31:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  32:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  33:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  34:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  35:   max r4.x, r3.w, r4.y
  36:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  37: else 
  38:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r3.w, r4.xyzw, cb2[45].xyzw
  41: div r4.xy, v7.xyxx, v7.wwww
  42: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  43: add_sat r1.w, r1.w, r4.x
  44: min r3.w, r1.w, r3.w
  45: movc r1.w, r2.w, r3.w, r1.w
  46: mul r4.xyz, r1.wwww, cb0[2].xyzx
  47: add r1.w, -cb0[8].w, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  52: dp3 r0.w, r6.xyzx, r6.xyzx
  53: max r0.w, r0.w, l(0.001000)
  54: rsq r0.w, r0.w
  55: mul r6.xyz, r0.wwww, r6.xyzx
  56: dp3 r0.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r1.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r0.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r3.x, r1.w, r1.w
  76: mad r1.w, -r1.w, r1.w, l(1.000000)
  77: mad r3.y, |r0.w|, r1.w, r3.x
  78: mad r1.w, r2.w, r1.w, r3.x
  79: mul r0.w, |r0.w|, r1.w
  80: mad r0.w, r2.w, r3.y, r0.w
  81: add r0.w, r0.w, l(0.000010)
  82: div r0.w, l(0.500000), r0.w
  83: mul r1.w, r3.x, r3.x
  84: mad r3.x, r2.x, r1.w, -r2.x
  85: mad r2.x, r3.x, r2.x, l(1.000000)
  86: mul r1.w, r1.w, l(0.318310)
  87: mad r2.x, r2.x, r2.x, l(0.000000)
  88: div r1.w, r1.w, r2.x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r0.w, l(3.141593)
  91: max r0.w, r0.w, l(0.000100)
  92: sqrt r0.w, r0.w
  93: mul r0.w, r2.w, r0.w
  94: dp3 r1.w, r0.xyzx, r0.xyzx
  95: ne r1.w, r1.w, l(0.000000)
  96: and r1.w, r1.w, l(0x3f800000)
  97: mul r0.w, r0.w, r1.w
  98: mul r2.xzw, r2.zzzz, r4.xxyz
  99: mul r3.xyz, r4.xyzx, r0.wwww
 100: add r0.w, -r2.y, l(1.000000)
 101: mul r1.w, r0.w, r0.w
 102: mul r1.w, r1.w, r1.w
 103: mul r0.w, r0.w, r1.w
 104: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 106: mul r0.xyz, r0.xyzx, r3.xyzx
 107: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 108: mov o0.w, l(1.000000)
 109: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE SHADOWS_SCREEN _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 93 math, 3 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x2 unity_WorldToLight at 3
Vector4 _Color at 9
Float _GlossMapScale at 11
Vector4 _LightColor0 at 8
Vector4 _LightShadowData at 6
Float _Metallic at 10
Vector4 _WorldSpaceCameraPos at 5
Vector4 unity_ShadowFadeCenterAndType at 7

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       2
//   _WorldSpaceCameraPos          c5       1
//   _LightShadowData              c6       1
//   unity_ShadowFadeCenterAndType c7       1
//   _LightColor0                  c8       1
//   _Color                        c9       1
//   _Metallic                     c10      1
//   _GlossMapScale                c11      1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c12, -0.220916301, 0.220916301, 0.779083729, 1
    def c13, 1, 0, 0.00100000005, 31.622776
    def c14, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c15, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c5.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c7.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c6.z, c6.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mad r1, v5.xyzx, c13.xxxy, c13.yyyx
    dp4 r2.x, c3, r1
    dp4 r2.y, c4, r1
    texld r1, r2, s2
    mul_pp r0.x, r0.x, r1.w
    mul_pp r0.xyz, r0.x, c8
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c13.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c13.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    texld r2, v0, s0
    mov r3, c12
    mad_pp r1.z, r2.w, -c11.x, r3.w
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.w, r2.w, r2.w
    mad_pp r4.x, r0.w, r3.w, -r0.w
    mad_pp r0.w, r4.x, r0.w, c12.w
    mad r0.w, r0.w, r0.w, c15.x
    rcp r0.w, r0.w
    mul r3.w, r3.w, c14.w
    mul_pp r0.w, r0.w, r3.w
    mad_pp r3.w, r1.z, -r1.z, c12.w
    mad_pp r4.x, r1_abs.y, r3.w, r2.w
    mad_pp r2.w, r1.x, r3.w, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c12.w
    mad r2.w, r1.x, r4.x, r2.w
    add r2.w, r2.w, c14.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c14.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c15.y
    mad r0.w, r0.w, -c15.y, c15.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c15.w, r2.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r4.xyz, c9, r2, r3.x
    mul_pp r2.xyz, r2, c9
    mad_pp r3.xyw, c10.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c13.y, c13.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c12.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c14.x
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c12.w, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c12.w
    add_pp r1.y, -r1.x, c12.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c12.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c10.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c12.w

// approximately 94 instruction slots used (3 texture, 91 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r2.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r3.w, r5.xyzx, r5.xyzx
  23: sqrt r3.w, r3.w
  24: add r3.w, -r2.w, r3.w
  25: mad r2.w, cb3[25].w, r3.w, r2.w
  26: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  27: eq r3.w, cb5[0].x, l(1.000000)
  28: if_nz r3.w
  29:   eq r4.z, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r4.zzzz, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r4.z, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r4.w, r4.z
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r4.z, r5.xyzw, cb2[45].xyzw
  45: div r5.xy, v7.xyxx, v7.wwww
  46: sample r5.xyzw, r5.xyxx, t1.xyzw, s2
  47: add_sat r2.w, r2.w, r5.x
  48: min r4.z, r2.w, r4.z
  49: movc r2.w, r3.w, r4.z, r2.w
  50: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  51: mul r2.w, r2.w, r4.w
  52: mul r4.xyz, r2.wwww, cb0[2].xyzx
  53: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  58: dp3 r1.w, r6.xyzx, r6.xyzx
  59: max r1.w, r1.w, l(0.001000)
  60: rsq r1.w, r1.w
  61: mul r6.xyz, r1.wwww, r6.xyzx
  62: dp3 r1.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r0.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r1.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r3.x, r0.w, r0.w
  82: mad r0.w, -r0.w, r0.w, l(1.000000)
  83: mad r3.y, |r1.w|, r0.w, r3.x
  84: mad r0.w, r2.w, r0.w, r3.x
  85: mul r0.w, r0.w, |r1.w|
  86: mad r0.w, r2.w, r3.y, r0.w
  87: add r0.w, r0.w, l(0.000010)
  88: div r0.w, l(0.500000), r0.w
  89: mul r1.w, r3.x, r3.x
  90: mad r3.x, r2.x, r1.w, -r2.x
  91: mad r2.x, r3.x, r2.x, l(1.000000)
  92: mul r1.w, r1.w, l(0.318310)
  93: mad r2.x, r2.x, r2.x, l(0.000000)
  94: div r1.w, r1.w, r2.x
  95: mul r0.w, r0.w, r1.w
  96: mul r0.w, r0.w, l(3.141593)
  97: max r0.w, r0.w, l(0.000100)
  98: sqrt r0.w, r0.w
  99: mul r0.w, r2.w, r0.w
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r4.xxyz
 105: mul r3.xyz, r4.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 93 math, 3 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x2 unity_WorldToLight at 3
Vector4 _Color at 9
Float _Glossiness at 11
Vector4 _LightColor0 at 8
Vector4 _LightShadowData at 6
Float _Metallic at 10
Vector4 _WorldSpaceCameraPos at 5
Vector4 unity_ShadowFadeCenterAndType at 7

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       2
//   _WorldSpaceCameraPos          c5       1
//   _LightShadowData              c6       1
//   unity_ShadowFadeCenterAndType c7       1
//   _LightColor0                  c8       1
//   _Color                        c9       1
//   _Metallic                     c10      1
//   _Glossiness                   c11      1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c12, -0.220916301, 0.220916301, 0.779083729, 1
    def c13, 1, 0, 0.00100000005, 31.622776
    def c14, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c15, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c5.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c7.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c6.z, c6.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mad r1, v5.xyzx, c13.xxxy, c13.yyyx
    dp4 r2.x, c3, r1
    dp4 r2.y, c4, r1
    texld r1, r2, s2
    mul_pp r0.x, r0.x, r1.w
    mul_pp r0.xyz, r0.x, c8
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c13.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c13.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    mov r2, c12
    add_pp r1.z, r2.w, -c11.x
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c12.w
    mad r0.w, r0.w, r0.w, c15.x
    rcp r0.w, r0.w
    mul r3.x, r3.x, c14.w
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.z, -r1.z, c12.w
    mad_pp r3.y, r1_abs.y, r3.x, r2.w
    mad_pp r2.w, r1.x, r3.x, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c12.w
    mad r2.w, r1.x, r3.y, r2.w
    add r2.w, r2.w, c14.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c14.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c15.y
    mad r0.w, r0.w, -c15.y, c15.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c15.w, r2.w
    mul_pp r0.w, r1.x, r0.w
    texld r3, v0, s0
    mad_pp r4.xyz, c9, r3, r2.x
    mul_pp r3.xyz, r3, c9
    mad_pp r2.xyw, c10.x, r4.xyzz, r2.y
    dp3_pp r3.w, r2.xyww, r2.xyww
    cmp r3.w, -r3.w, c13.y, c13.x
    mul_pp r0.w, r0.w, r3.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c12.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c14.x
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c12.w, r2.xyww
    mul_pp r2.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c12.w
    add_pp r1.y, -r1.x, c12.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c12.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c10.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.xyww
    mov_pp oC0.w, c12.w

// approximately 94 instruction slots used (3 texture, 91 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb5[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.z
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: div r4.zw, v7.xxxy, v7.wwww
  46: sample r5.xyzw, r4.zwzz, t1.xyzw, s2
  47: add_sat r1.w, r1.w, r5.x
  48: min r3.w, r1.w, r3.w
  49: movc r1.w, r2.w, r3.w, r1.w
  50: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  51: mul r1.w, r1.w, r4.w
  52: mul r4.xyz, r1.wwww, cb0[2].xyzx
  53: add r1.w, -cb0[8].w, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  58: dp3 r0.w, r6.xyzx, r6.xyzx
  59: max r0.w, r0.w, l(0.001000)
  60: rsq r0.w, r0.w
  61: mul r6.xyz, r0.wwww, r6.xyzx
  62: dp3 r0.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r1.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r0.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r3.x, r1.w, r1.w
  82: mad r1.w, -r1.w, r1.w, l(1.000000)
  83: mad r3.y, |r0.w|, r1.w, r3.x
  84: mad r1.w, r2.w, r1.w, r3.x
  85: mul r0.w, |r0.w|, r1.w
  86: mad r0.w, r2.w, r3.y, r0.w
  87: add r0.w, r0.w, l(0.000010)
  88: div r0.w, l(0.500000), r0.w
  89: mul r1.w, r3.x, r3.x
  90: mad r3.x, r2.x, r1.w, -r2.x
  91: mad r2.x, r3.x, r2.x, l(1.000000)
  92: mul r1.w, r1.w, l(0.318310)
  93: mad r2.x, r2.x, r2.x, l(0.000000)
  94: div r1.w, r1.w, r2.x
  95: mul r0.w, r0.w, r1.w
  96: mul r0.w, r0.w, l(3.141593)
  97: max r0.w, r0.w, l(0.000100)
  98: sqrt r0.w, r0.w
  99: mul r0.w, r2.w, r0.w
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r4.xxyz
 105: mul r3.xyz, r4.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 107 math, 4 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 11
Float _GlossMapScale at 13
Vector4 _LightColor0 at 10
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 12
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   _LightColor0                  c10      1
//   _Color                        c11      1
//   _Metallic                     c12      1
//   _GlossMapScale                c13      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c14, -0.220916301, 0.220916301, 0.779083729, 0
    def c15, 1, 0, 0.970000029, 0.00100000005
    def c16, 31.622776, -0.5, 9.99999975e-006, 0.5
    def c17, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c18, 0.00999999978, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r1.x, r0, r0
    rsq r1.x, r1.x
    rcp r1.x, r1.x
    mul r1.x, r1.x, c7.w
    mov r0.w, c14.w
    texldl r0, r0, s0
    mad r0.x, r1.x, -c15.z, r0.x
    mov r1.x, c15.x
    cmp_pp r0.x, r0.x, r1.x, c8.x
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c15.xxxy, c15.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r0.y, s2
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c10
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c15.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c16.x, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    texld r2, v0, s1
    mad_pp r1.x, r2.w, -c13.x, r1.x
    mul_pp r2.w, r1.x, r1.x
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c15.x
    mad r0.w, r0.w, r0.w, c17.y
    rcp r0.w, r0.w
    mul r3.x, r3.x, c17.x
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.x, -r1.x, c15.x
    mad_pp r3.y, r1.z, r3.x, r2.w
    mad_pp r2.w, r1_abs.w, r3.x, r2.w
    mul_pp r3.x, r1_abs.w, r3.y
    add_pp r1.w, -r1_abs.w, c15.x
    mad r2.w, r1.z, r2.w, r3.x
    add r2.w, r2.w, c16.z
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c16.w
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c17.z
    mad r0.w, r0.w, -c17.z, c17.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c18.x, r2.w
    mul_pp r0.w, r1.z, r0.w
    mov r3.xyz, c14
    mad_pp r4.xyz, c11, r2, r3.x
    mul_pp r2.xyz, r2, c11
    mad_pp r3.xyw, c12.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c15.y, c15.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c15.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c16.y
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c15.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c15.x
    add_pp r1.y, -r1.z, c15.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c15.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c12.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c15.x

// approximately 109 instruction slots used (4 texture, 105 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 107 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb5[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  46: dp3 r4.w, r5.xyzx, r5.xyzx
  47: sqrt r4.w, r4.w
  48: mul r4.w, r4.w, cb2[1].w
  49: mul r4.w, r4.w, l(0.970000)
  50: sample_l r5.xyzw, r5.xyzx, t1.xyzw, s1, l(0.000000)
  51: lt r4.w, r5.x, r4.w
  52: movc r4.w, r4.w, cb3[24].x, l(1.000000)
  53: add_sat r1.w, r1.w, r4.w
  54: min r3.w, r1.w, r3.w
  55: movc r1.w, r2.w, r3.w, r1.w
  56: dp3 r2.w, r4.xyzx, r4.xyzx
  57: sample r4.xyzw, r2.wwww, t2.xyzw, s3
  58: mul r1.w, r1.w, r4.x
  59: mov r4.x, v3.w
  60: mov r4.y, v4.w
  61: mov r4.z, v5.w
  62: dp3 r2.w, r4.xyzx, r4.xyzx
  63: rsq r2.w, r2.w
  64: mul r5.xyz, r2.wwww, r4.xyzx
  65: mul r6.xyz, r1.wwww, cb0[2].xyzx
  66: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  67: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  68: dp3 r1.w, r4.xyzx, r4.xyzx
  69: max r1.w, r1.w, l(0.001000)
  70: rsq r1.w, r1.w
  71: mul r4.xyz, r1.wwww, r4.xyzx
  72: dp3 r1.w, r2.xyzx, -r3.xyzx
  73: dp3_sat r2.w, r2.xyzx, r5.xyzx
  74: dp3_sat r2.x, r2.xyzx, r4.xyzx
  75: dp3_sat r2.y, r5.xyzx, r4.xyzx
  76: mul r2.z, r2.y, r2.y
  77: dp2 r2.z, r2.zzzz, r0.wwww
  78: add r2.z, r2.z, l(-0.500000)
  79: add r3.x, -r2.w, l(1.000000)
  80: mul r3.y, r3.x, r3.x
  81: mul r3.y, r3.y, r3.y
  82: mul r3.x, r3.x, r3.y
  83: mad r3.x, r2.z, r3.x, l(1.000000)
  84: add r3.y, -|r1.w|, l(1.000000)
  85: mul r3.z, r3.y, r3.y
  86: mul r3.z, r3.z, r3.z
  87: mul r3.y, r3.y, r3.z
  88: mad r2.z, r2.z, r3.y, l(1.000000)
  89: mul r2.z, r2.z, r3.x
  90: mul r2.z, r2.w, r2.z
  91: mul r3.x, r0.w, r0.w
  92: mad r0.w, -r0.w, r0.w, l(1.000000)
  93: mad r3.y, |r1.w|, r0.w, r3.x
  94: mad r0.w, r2.w, r0.w, r3.x
  95: mul r0.w, r0.w, |r1.w|
  96: mad r0.w, r2.w, r3.y, r0.w
  97: add r0.w, r0.w, l(0.000010)
  98: div r0.w, l(0.500000), r0.w
  99: mul r1.w, r3.x, r3.x
 100: mad r3.x, r2.x, r1.w, -r2.x
 101: mad r2.x, r3.x, r2.x, l(1.000000)
 102: mul r1.w, r1.w, l(0.318310)
 103: mad r2.x, r2.x, r2.x, l(0.000000)
 104: div r1.w, r1.w, r2.x
 105: mul r0.w, r0.w, r1.w
 106: mul r0.w, r0.w, l(3.141593)
 107: max r0.w, r0.w, l(0.000100)
 108: sqrt r0.w, r0.w
 109: mul r0.w, r2.w, r0.w
 110: dp3 r1.w, r0.xyzx, r0.xyzx
 111: ne r1.w, r1.w, l(0.000000)
 112: and r1.w, r1.w, l(0x3f800000)
 113: mul r0.w, r0.w, r1.w
 114: mul r2.xzw, r2.zzzz, r6.xxyz
 115: mul r3.xyz, r6.xyzx, r0.wwww
 116: add r0.w, -r2.y, l(1.000000)
 117: mul r1.w, r0.w, r0.w
 118: mul r1.w, r1.w, r1.w
 119: mul r0.w, r0.w, r1.w
 120: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 121: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 122: mul r0.xyz, r0.xyzx, r3.xyzx
 123: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 124: mov o0.w, l(1.000000)
 125: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 107 math, 4 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 11
Float _Glossiness at 13
Vector4 _LightColor0 at 10
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 12
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   _LightColor0                  c10      1
//   _Color                        c11      1
//   _Metallic                     c12      1
//   _Glossiness                   c13      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c14, -0.220916301, 0.220916301, 0.779083729, 0
    def c15, 1, 0, 0.970000029, 0.00100000005
    def c16, 31.622776, -0.5, 9.99999975e-006, 0.5
    def c17, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c18, 0.00999999978, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r1.x, r0, r0
    rsq r1.x, r1.x
    rcp r1.x, r1.x
    mul r1.x, r1.x, c7.w
    mov r0.w, c14.w
    texldl r0, r0, s0
    mad r0.x, r1.x, -c15.z, r0.x
    mov r1.x, c15.x
    cmp_pp r0.x, r0.x, r1.x, c8.x
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c15.xxxy, c15.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r0.y, s2
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c10
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c15.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c16.x, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    add_pp r1.x, r1.x, -c13.x
    mul_pp r2.x, r1.x, r1.x
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c15.x
    mad r0.w, r0.w, r0.w, c17.y
    rcp r0.w, r0.w
    mul r2.y, r2.y, c17.x
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.x, -r1.x, c15.x
    mad_pp r2.z, r1_abs.w, r2.y, r2.x
    mad_pp r2.x, r1.z, r2.y, r2.x
    mul_pp r2.x, r1_abs.w, r2.x
    add_pp r1.w, -r1_abs.w, c15.x
    mad r2.x, r1.z, r2.z, r2.x
    add r2.x, r2.x, c16.z
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, c16.w
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c17.z
    mad r0.w, r0.w, -c17.z, c17.w
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c18.x, r2.x
    mul_pp r0.w, r1.z, r0.w
    texld r2, v0, s1
    mov r3.xyz, c14
    mad_pp r4.xyz, c11, r2, r3.x
    mul_pp r2.xyz, r2, c11
    mad_pp r3.xyw, c12.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c15.y, c15.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c15.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c16.y
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c15.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c15.x
    add_pp r1.y, -r1.z, c15.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c15.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c12.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c15.x

// approximately 109 instruction slots used (4 texture, 105 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 107 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  45: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  46: dp3 r3.w, r5.xyzx, r5.xyzx
  47: sqrt r3.w, r3.w
  48: mul r3.w, r3.w, cb2[1].w
  49: mul r3.w, r3.w, l(0.970000)
  50: sample_l r5.xyzw, r5.xyzx, t1.xyzw, s1, l(0.000000)
  51: lt r3.w, r5.x, r3.w
  52: movc r3.w, r3.w, cb3[24].x, l(1.000000)
  53: add_sat r0.w, r0.w, r3.w
  54: min r2.w, r0.w, r2.w
  55: movc r0.w, r1.w, r2.w, r0.w
  56: dp3 r1.w, r4.xyzx, r4.xyzx
  57: sample r4.xyzw, r1.wwww, t2.xyzw, s3
  58: mul r0.w, r0.w, r4.x
  59: mov r4.x, v3.w
  60: mov r4.y, v4.w
  61: mov r4.z, v5.w
  62: dp3 r1.w, r4.xyzx, r4.xyzx
  63: rsq r1.w, r1.w
  64: mul r5.xyz, r1.wwww, r4.xyzx
  65: mul r6.xyz, r0.wwww, cb0[2].xyzx
  66: add r0.w, -cb0[8].w, l(1.000000)
  67: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  68: dp3 r1.w, r4.xyzx, r4.xyzx
  69: max r1.w, r1.w, l(0.001000)
  70: rsq r1.w, r1.w
  71: mul r4.xyz, r1.wwww, r4.xyzx
  72: dp3 r1.w, r2.xyzx, -r3.xyzx
  73: dp3_sat r2.w, r2.xyzx, r5.xyzx
  74: dp3_sat r2.x, r2.xyzx, r4.xyzx
  75: dp3_sat r2.y, r5.xyzx, r4.xyzx
  76: mul r2.z, r2.y, r2.y
  77: dp2 r2.z, r2.zzzz, r0.wwww
  78: add r2.z, r2.z, l(-0.500000)
  79: add r3.x, -r2.w, l(1.000000)
  80: mul r3.y, r3.x, r3.x
  81: mul r3.y, r3.y, r3.y
  82: mul r3.x, r3.x, r3.y
  83: mad r3.x, r2.z, r3.x, l(1.000000)
  84: add r3.y, -|r1.w|, l(1.000000)
  85: mul r3.z, r3.y, r3.y
  86: mul r3.z, r3.z, r3.z
  87: mul r3.y, r3.y, r3.z
  88: mad r2.z, r2.z, r3.y, l(1.000000)
  89: mul r2.z, r2.z, r3.x
  90: mul r2.z, r2.w, r2.z
  91: mul r3.x, r0.w, r0.w
  92: mad r0.w, -r0.w, r0.w, l(1.000000)
  93: mad r3.y, |r1.w|, r0.w, r3.x
  94: mad r0.w, r2.w, r0.w, r3.x
  95: mul r0.w, r0.w, |r1.w|
  96: mad r0.w, r2.w, r3.y, r0.w
  97: add r0.w, r0.w, l(0.000010)
  98: div r0.w, l(0.500000), r0.w
  99: mul r1.w, r3.x, r3.x
 100: mad r3.x, r2.x, r1.w, -r2.x
 101: mad r2.x, r3.x, r2.x, l(1.000000)
 102: mul r1.w, r1.w, l(0.318310)
 103: mad r2.x, r2.x, r2.x, l(0.000000)
 104: div r1.w, r1.w, r2.x
 105: mul r0.w, r0.w, r1.w
 106: mul r0.w, r0.w, l(3.141593)
 107: max r0.w, r0.w, l(0.000100)
 108: sqrt r0.w, r0.w
 109: mul r0.w, r2.w, r0.w
 110: dp3 r1.w, r0.xyzx, r0.xyzx
 111: ne r1.w, r1.w, l(0.000000)
 112: and r1.w, r1.w, l(0x3f800000)
 113: mul r0.w, r0.w, r1.w
 114: mul r2.xzw, r2.zzzz, r6.xxyz
 115: mul r3.xyz, r6.xyzx, r0.wwww
 116: add r0.w, -r2.y, l(1.000000)
 117: mul r1.w, r0.w, r0.w
 118: mul r1.w, r1.w, r1.w
 119: mul r0.w, r0.w, r1.w
 120: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 121: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 122: mul r0.xyz, r0.xyzx, r3.xyzx
 123: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 124: mov o0.w, l(1.000000)
 125: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE SHADOWS_SOFT _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 118 math, 10 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 11
Float _GlossMapScale at 13
Vector4 _LightColor0 at 10
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 12
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   _LightColor0                  c10      1
//   _Color                        c11      1
//   _Metallic                     c12      1
//   _GlossMapScale                c13      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c14, -0.220916301, 0.220916301, 0.779083729, 0.0078125
    def c15, 0.970000029, 0.25, 0.00100000005, 31.622776
    def c16, 1, 0, -0.0078125, 0.0078125
    def c17, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c18, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c7.w
    mov r1.w, c16.y
    add r1.xyz, r0, c14.w
    texldl r1, r1, s0
    mov r2.w, c16.y
    add r2.xyz, r0, c16.zzww
    texldl r2, r2, s0
    mov r1.y, r2.x
    add r2.xyz, r0, c16.zwzw
    add r3.xyz, r0, c16.wzzw
    mov r2.w, c16.y
    texldl r2, r2, s0
    mov r1.z, r2.x
    mov r3.w, c16.y
    texldl r2, r3, s0
    mov r1.w, r2.x
    mad r0, r0.w, -c15.x, r1
    mov r1.x, c16.x
    cmp_pp r0, r0, r1.x, c8.x
    dp4_pp r0.x, r0, c15.y
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r0.y, s2
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c10
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c15.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c15.w, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    texld r2, v0, s1
    mad_pp r1.x, r2.w, -c13.x, r1.x
    mul_pp r2.w, r1.x, r1.x
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c16.x
    mad r0.w, r0.w, r0.w, c18.x
    rcp r0.w, r0.w
    mul r3.x, r3.x, c17.w
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.x, -r1.x, c16.x
    mad_pp r3.y, r1.z, r3.x, r2.w
    mad_pp r2.w, r1_abs.w, r3.x, r2.w
    mul_pp r3.x, r1_abs.w, r3.y
    add_pp r1.w, -r1_abs.w, c16.x
    mad r2.w, r1.z, r2.w, r3.x
    add r2.w, r2.w, c17.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c17.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c18.y
    mad r0.w, r0.w, -c18.y, c18.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c18.w, r2.w
    mul_pp r0.w, r1.z, r0.w
    mov r3.xyz, c14
    mad_pp r4.xyz, c11, r2, r3.x
    mul_pp r2.xyz, r2, c11
    mad_pp r3.xyw, c12.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c16.y, c16.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c16.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c17.x
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c16.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c16.x
    add_pp r1.y, -r1.z, c16.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c16.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c12.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c16.x

// approximately 126 instruction slots used (10 texture, 116 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 113 math, 9 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb5[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: lt r4.w, r1.w, l(0.990000)
  46: if_nz r4.w
  47:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  48:   dp3 r4.w, r5.xyzx, r5.xyzx
  49:   sqrt r4.w, r4.w
  50:   mul r4.w, r4.w, cb2[1].w
  51:   mul r4.w, r4.w, l(0.970000)
  52:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  53:   sample_l r6.xyzw, r6.xyzx, t1.xyzw, s1, l(0.000000)
  54:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
  55:   sample_l r7.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  56:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  57:   sample_l r8.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  58:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  59:   sample_l r5.xyzw, r5.xyzx, t1.yzwx, s1, l(0.000000)
  60:   mov r5.x, r6.x
  61:   mov r5.y, r7.x
  62:   mov r5.z, r8.x
  63:   lt r5.xyzw, r5.xyzw, r4.wwww
  64:   movc r5.xyzw, r5.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  65:   dp4 r4.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  66: else 
  67:   mov r4.w, l(1.000000)
  68: endif 
  69: add_sat r1.w, r1.w, r4.w
  70: min r3.w, r1.w, r3.w
  71: movc r1.w, r2.w, r3.w, r1.w
  72: dp3 r2.w, r4.xyzx, r4.xyzx
  73: sample r4.xyzw, r2.wwww, t2.xyzw, s3
  74: mul r1.w, r1.w, r4.x
  75: mov r4.x, v3.w
  76: mov r4.y, v4.w
  77: mov r4.z, v5.w
  78: dp3 r2.w, r4.xyzx, r4.xyzx
  79: rsq r2.w, r2.w
  80: mul r5.xyz, r2.wwww, r4.xyzx
  81: mul r6.xyz, r1.wwww, cb0[2].xyzx
  82: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  83: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  84: dp3 r1.w, r4.xyzx, r4.xyzx
  85: max r1.w, r1.w, l(0.001000)
  86: rsq r1.w, r1.w
  87: mul r4.xyz, r1.wwww, r4.xyzx
  88: dp3 r1.w, r2.xyzx, -r3.xyzx
  89: dp3_sat r2.w, r2.xyzx, r5.xyzx
  90: dp3_sat r2.x, r2.xyzx, r4.xyzx
  91: dp3_sat r2.y, r5.xyzx, r4.xyzx
  92: mul r2.z, r2.y, r2.y
  93: dp2 r2.z, r2.zzzz, r0.wwww
  94: add r2.z, r2.z, l(-0.500000)
  95: add r3.x, -r2.w, l(1.000000)
  96: mul r3.y, r3.x, r3.x
  97: mul r3.y, r3.y, r3.y
  98: mul r3.x, r3.x, r3.y
  99: mad r3.x, r2.z, r3.x, l(1.000000)
 100: add r3.y, -|r1.w|, l(1.000000)
 101: mul r3.z, r3.y, r3.y
 102: mul r3.z, r3.z, r3.z
 103: mul r3.y, r3.y, r3.z
 104: mad r2.z, r2.z, r3.y, l(1.000000)
 105: mul r2.z, r2.z, r3.x
 106: mul r2.z, r2.w, r2.z
 107: mul r3.x, r0.w, r0.w
 108: mad r0.w, -r0.w, r0.w, l(1.000000)
 109: mad r3.y, |r1.w|, r0.w, r3.x
 110: mad r0.w, r2.w, r0.w, r3.x
 111: mul r0.w, r0.w, |r1.w|
 112: mad r0.w, r2.w, r3.y, r0.w
 113: add r0.w, r0.w, l(0.000010)
 114: div r0.w, l(0.500000), r0.w
 115: mul r1.w, r3.x, r3.x
 116: mad r3.x, r2.x, r1.w, -r2.x
 117: mad r2.x, r3.x, r2.x, l(1.000000)
 118: mul r1.w, r1.w, l(0.318310)
 119: mad r2.x, r2.x, r2.x, l(0.000000)
 120: div r1.w, r1.w, r2.x
 121: mul r0.w, r0.w, r1.w
 122: mul r0.w, r0.w, l(3.141593)
 123: max r0.w, r0.w, l(0.000100)
 124: sqrt r0.w, r0.w
 125: mul r0.w, r2.w, r0.w
 126: dp3 r1.w, r0.xyzx, r0.xyzx
 127: ne r1.w, r1.w, l(0.000000)
 128: and r1.w, r1.w, l(0x3f800000)
 129: mul r0.w, r0.w, r1.w
 130: mul r2.xzw, r2.zzzz, r6.xxyz
 131: mul r3.xyz, r6.xyzx, r0.wwww
 132: add r0.w, -r2.y, l(1.000000)
 133: mul r1.w, r0.w, r0.w
 134: mul r1.w, r1.w, r1.w
 135: mul r0.w, r0.w, r1.w
 136: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 137: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 138: mul r0.xyz, r0.xyzx, r3.xyzx
 139: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 140: mov o0.w, l(1.000000)
 141: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 118 math, 10 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 11
Float _Glossiness at 13
Vector4 _LightColor0 at 10
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 12
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   _LightColor0                  c10      1
//   _Color                        c11      1
//   _Metallic                     c12      1
//   _Glossiness                   c13      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c14, -0.220916301, 0.220916301, 0.779083729, 0.0078125
    def c15, 0.970000029, 0.25, 0.00100000005, 31.622776
    def c16, 1, 0, -0.0078125, 0.0078125
    def c17, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c18, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c7.w
    mov r1.w, c16.y
    add r1.xyz, r0, c14.w
    texldl r1, r1, s0
    mov r2.w, c16.y
    add r2.xyz, r0, c16.zzww
    texldl r2, r2, s0
    mov r1.y, r2.x
    add r2.xyz, r0, c16.zwzw
    add r3.xyz, r0, c16.wzzw
    mov r2.w, c16.y
    texldl r2, r2, s0
    mov r1.z, r2.x
    mov r3.w, c16.y
    texldl r2, r3, s0
    mov r1.w, r2.x
    mad r0, r0.w, -c15.x, r1
    mov r1.x, c16.x
    cmp_pp r0, r0, r1.x, c8.x
    dp4_pp r0.x, r0, c15.y
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r0.y, s2
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c10
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c15.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c15.w, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    add_pp r1.x, r1.x, -c13.x
    mul_pp r2.x, r1.x, r1.x
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c16.x
    mad r0.w, r0.w, r0.w, c18.x
    rcp r0.w, r0.w
    mul r2.y, r2.y, c17.w
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.x, -r1.x, c16.x
    mad_pp r2.z, r1_abs.w, r2.y, r2.x
    mad_pp r2.x, r1.z, r2.y, r2.x
    mul_pp r2.x, r1_abs.w, r2.x
    add_pp r1.w, -r1_abs.w, c16.x
    mad r2.x, r1.z, r2.z, r2.x
    add r2.x, r2.x, c17.y
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, c17.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c18.y
    mad r0.w, r0.w, -c18.y, c18.z
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c18.w, r2.x
    mul_pp r0.w, r1.z, r0.w
    texld r2, v0, s1
    mov r3.xyz, c14
    mad_pp r4.xyz, c11, r2, r3.x
    mul_pp r2.xyz, r2, c11
    mad_pp r3.xyw, c12.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c16.y, c16.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c16.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c17.x
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c16.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c16.x
    add_pp r1.y, -r1.z, c16.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c16.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c12.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c16.x

// approximately 126 instruction slots used (10 texture, 116 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 113 math, 9 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  45: lt r3.w, r0.w, l(0.990000)
  46: if_nz r3.w
  47:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  48:   dp3 r3.w, r5.xyzx, r5.xyzx
  49:   sqrt r3.w, r3.w
  50:   mul r3.w, r3.w, cb2[1].w
  51:   mul r3.w, r3.w, l(0.970000)
  52:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  53:   sample_l r6.xyzw, r6.xyzx, t1.xyzw, s1, l(0.000000)
  54:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
  55:   sample_l r7.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  56:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  57:   sample_l r8.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  58:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  59:   sample_l r5.xyzw, r5.xyzx, t1.yzwx, s1, l(0.000000)
  60:   mov r5.x, r6.x
  61:   mov r5.y, r7.x
  62:   mov r5.z, r8.x
  63:   lt r5.xyzw, r5.xyzw, r3.wwww
  64:   movc r5.xyzw, r5.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  65:   dp4 r3.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  66: else 
  67:   mov r3.w, l(1.000000)
  68: endif 
  69: add_sat r0.w, r0.w, r3.w
  70: min r2.w, r0.w, r2.w
  71: movc r0.w, r1.w, r2.w, r0.w
  72: dp3 r1.w, r4.xyzx, r4.xyzx
  73: sample r4.xyzw, r1.wwww, t2.xyzw, s3
  74: mul r0.w, r0.w, r4.x
  75: mov r4.x, v3.w
  76: mov r4.y, v4.w
  77: mov r4.z, v5.w
  78: dp3 r1.w, r4.xyzx, r4.xyzx
  79: rsq r1.w, r1.w
  80: mul r5.xyz, r1.wwww, r4.xyzx
  81: mul r6.xyz, r0.wwww, cb0[2].xyzx
  82: add r0.w, -cb0[8].w, l(1.000000)
  83: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  84: dp3 r1.w, r4.xyzx, r4.xyzx
  85: max r1.w, r1.w, l(0.001000)
  86: rsq r1.w, r1.w
  87: mul r4.xyz, r1.wwww, r4.xyzx
  88: dp3 r1.w, r2.xyzx, -r3.xyzx
  89: dp3_sat r2.w, r2.xyzx, r5.xyzx
  90: dp3_sat r2.x, r2.xyzx, r4.xyzx
  91: dp3_sat r2.y, r5.xyzx, r4.xyzx
  92: mul r2.z, r2.y, r2.y
  93: dp2 r2.z, r2.zzzz, r0.wwww
  94: add r2.z, r2.z, l(-0.500000)
  95: add r3.x, -r2.w, l(1.000000)
  96: mul r3.y, r3.x, r3.x
  97: mul r3.y, r3.y, r3.y
  98: mul r3.x, r3.x, r3.y
  99: mad r3.x, r2.z, r3.x, l(1.000000)
 100: add r3.y, -|r1.w|, l(1.000000)
 101: mul r3.z, r3.y, r3.y
 102: mul r3.z, r3.z, r3.z
 103: mul r3.y, r3.y, r3.z
 104: mad r2.z, r2.z, r3.y, l(1.000000)
 105: mul r2.z, r2.z, r3.x
 106: mul r2.z, r2.w, r2.z
 107: mul r3.x, r0.w, r0.w
 108: mad r0.w, -r0.w, r0.w, l(1.000000)
 109: mad r3.y, |r1.w|, r0.w, r3.x
 110: mad r0.w, r2.w, r0.w, r3.x
 111: mul r0.w, r0.w, |r1.w|
 112: mad r0.w, r2.w, r3.y, r0.w
 113: add r0.w, r0.w, l(0.000010)
 114: div r0.w, l(0.500000), r0.w
 115: mul r1.w, r3.x, r3.x
 116: mad r3.x, r2.x, r1.w, -r2.x
 117: mad r2.x, r3.x, r2.x, l(1.000000)
 118: mul r1.w, r1.w, l(0.318310)
 119: mad r2.x, r2.x, r2.x, l(0.000000)
 120: div r1.w, r1.w, r2.x
 121: mul r0.w, r0.w, r1.w
 122: mul r0.w, r0.w, l(3.141593)
 123: max r0.w, r0.w, l(0.000100)
 124: sqrt r0.w, r0.w
 125: mul r0.w, r2.w, r0.w
 126: dp3 r1.w, r0.xyzx, r0.xyzx
 127: ne r1.w, r1.w, l(0.000000)
 128: and r1.w, r1.w, l(0x3f800000)
 129: mul r0.w, r0.w, r1.w
 130: mul r2.xzw, r2.zzzz, r6.xxyz
 131: mul r3.xyz, r6.xyzx, r0.wwww
 132: add r0.w, -r2.y, l(1.000000)
 133: mul r1.w, r0.w, r0.w
 134: mul r1.w, r1.w, r1.w
 135: mul r0.w, r0.w, r1.w
 136: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 137: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 138: mul r0.xyz, r0.xyzx, r3.xyzx
 139: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 140: mov o0.w, l(1.000000)
 141: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 108 math, 5 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 11
Float _GlossMapScale at 13
Vector4 _LightColor0 at 10
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 12
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   _LightColor0                  c10      1
//   _Color                        c11      1
//   _Metallic                     c12      1
//   _GlossMapScale                c13      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c14, -0.220916301, 0.220916301, 0.779083729, 0
    def c15, 1, 0, 0.970000029, 0.00100000005
    def c16, 31.622776, -0.5, 9.99999975e-006, 0.5
    def c17, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c18, 0.00999999978, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    add r0.xyz, -c7, v5
    dp3 r1.x, r0, r0
    rsq r1.x, r1.x
    rcp r1.x, r1.x
    mul r1.x, r1.x, c7.w
    mov r0.w, c14.w
    texldl r0, r0, s0
    mad r0.x, r1.x, -c15.z, r0.x
    mov r1.x, c15.x
    cmp_pp r0.x, r0.x, r1.x, c8.x
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c15.xxxy, c15.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r3, s2
    texld r3, r0.y, s3
    mul r0.y, r2.w, r3.x
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c10
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c15.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c16.x, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    texld r2, v0, s1
    mad_pp r1.x, r2.w, -c13.x, r1.x
    mul_pp r2.w, r1.x, r1.x
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c15.x
    mad r0.w, r0.w, r0.w, c17.y
    rcp r0.w, r0.w
    mul r3.x, r3.x, c17.x
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.x, -r1.x, c15.x
    mad_pp r3.y, r1.z, r3.x, r2.w
    mad_pp r2.w, r1_abs.w, r3.x, r2.w
    mul_pp r3.x, r1_abs.w, r3.y
    add_pp r1.w, -r1_abs.w, c15.x
    mad r2.w, r1.z, r2.w, r3.x
    add r2.w, r2.w, c16.z
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c16.w
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c17.z
    mad r0.w, r0.w, -c17.z, c17.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c18.x, r2.w
    mul_pp r0.w, r1.z, r0.w
    mov r3.xyz, c14
    mad_pp r4.xyz, c11, r2, r3.x
    mul_pp r2.xyz, r2, c11
    mad_pp r3.xyw, c12.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c15.y, c15.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c15.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c16.y
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c15.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c15.x
    add_pp r1.y, -r1.z, c15.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c15.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c12.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c15.x

// approximately 111 instruction slots used (5 texture, 106 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 108 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb5[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.w
  40:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  46: dp3 r4.w, r5.xyzx, r5.xyzx
  47: sqrt r4.w, r4.w
  48: mul r4.w, r4.w, cb2[1].w
  49: mul r4.w, r4.w, l(0.970000)
  50: sample_l r5.xyzw, r5.xyzx, t1.xyzw, s1, l(0.000000)
  51: lt r4.w, r5.x, r4.w
  52: movc r4.w, r4.w, cb3[24].x, l(1.000000)
  53: add_sat r1.w, r1.w, r4.w
  54: min r3.w, r1.w, r3.w
  55: movc r1.w, r2.w, r3.w, r1.w
  56: dp3 r2.w, r4.xyzx, r4.xyzx
  57: sample r5.xyzw, r2.wwww, t2.xyzw, s4
  58: sample r4.xyzw, r4.xyzx, t3.xyzw, s3
  59: mul r2.w, r4.w, r5.x
  60: mul r1.w, r1.w, r2.w
  61: mov r4.x, v3.w
  62: mov r4.y, v4.w
  63: mov r4.z, v5.w
  64: dp3 r2.w, r4.xyzx, r4.xyzx
  65: rsq r2.w, r2.w
  66: mul r5.xyz, r2.wwww, r4.xyzx
  67: mul r6.xyz, r1.wwww, cb0[2].xyzx
  68: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  69: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  70: dp3 r1.w, r4.xyzx, r4.xyzx
  71: max r1.w, r1.w, l(0.001000)
  72: rsq r1.w, r1.w
  73: mul r4.xyz, r1.wwww, r4.xyzx
  74: dp3 r1.w, r2.xyzx, -r3.xyzx
  75: dp3_sat r2.w, r2.xyzx, r5.xyzx
  76: dp3_sat r2.x, r2.xyzx, r4.xyzx
  77: dp3_sat r2.y, r5.xyzx, r4.xyzx
  78: mul r2.z, r2.y, r2.y
  79: dp2 r2.z, r2.zzzz, r0.wwww
  80: add r2.z, r2.z, l(-0.500000)
  81: add r3.x, -r2.w, l(1.000000)
  82: mul r3.y, r3.x, r3.x
  83: mul r3.y, r3.y, r3.y
  84: mul r3.x, r3.x, r3.y
  85: mad r3.x, r2.z, r3.x, l(1.000000)
  86: add r3.y, -|r1.w|, l(1.000000)
  87: mul r3.z, r3.y, r3.y
  88: mul r3.z, r3.z, r3.z
  89: mul r3.y, r3.y, r3.z
  90: mad r2.z, r2.z, r3.y, l(1.000000)
  91: mul r2.z, r2.z, r3.x
  92: mul r2.z, r2.w, r2.z
  93: mul r3.x, r0.w, r0.w
  94: mad r0.w, -r0.w, r0.w, l(1.000000)
  95: mad r3.y, |r1.w|, r0.w, r3.x
  96: mad r0.w, r2.w, r0.w, r3.x
  97: mul r0.w, r0.w, |r1.w|
  98: mad r0.w, r2.w, r3.y, r0.w
  99: add r0.w, r0.w, l(0.000010)
 100: div r0.w, l(0.500000), r0.w
 101: mul r1.w, r3.x, r3.x
 102: mad r3.x, r2.x, r1.w, -r2.x
 103: mad r2.x, r3.x, r2.x, l(1.000000)
 104: mul r1.w, r1.w, l(0.318310)
 105: mad r2.x, r2.x, r2.x, l(0.000000)
 106: div r1.w, r1.w, r2.x
 107: mul r0.w, r0.w, r1.w
 108: mul r0.w, r0.w, l(3.141593)
 109: max r0.w, r0.w, l(0.000100)
 110: sqrt r0.w, r0.w
 111: mul r0.w, r2.w, r0.w
 112: dp3 r1.w, r0.xyzx, r0.xyzx
 113: ne r1.w, r1.w, l(0.000000)
 114: and r1.w, r1.w, l(0x3f800000)
 115: mul r0.w, r0.w, r1.w
 116: mul r2.xzw, r2.zzzz, r6.xxyz
 117: mul r3.xyz, r6.xyzx, r0.wwww
 118: add r0.w, -r2.y, l(1.000000)
 119: mul r1.w, r0.w, r0.w
 120: mul r1.w, r1.w, r1.w
 121: mul r0.w, r0.w, r1.w
 122: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 123: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 124: mul r0.xyz, r0.xyzx, r3.xyzx
 125: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 126: mov o0.w, l(1.000000)
 127: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 108 math, 5 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 11
Float _Glossiness at 13
Vector4 _LightColor0 at 10
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 12
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   _LightColor0                  c10      1
//   _Color                        c11      1
//   _Metallic                     c12      1
//   _Glossiness                   c13      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c14, -0.220916301, 0.220916301, 0.779083729, 0
    def c15, 1, 0, 0.970000029, 0.00100000005
    def c16, 31.622776, -0.5, 9.99999975e-006, 0.5
    def c17, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c18, 0.00999999978, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    add r0.xyz, -c7, v5
    dp3 r1.x, r0, r0
    rsq r1.x, r1.x
    rcp r1.x, r1.x
    mul r1.x, r1.x, c7.w
    mov r0.w, c14.w
    texldl r0, r0, s0
    mad r0.x, r1.x, -c15.z, r0.x
    mov r1.x, c15.x
    cmp_pp r0.x, r0.x, r1.x, c8.x
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c15.xxxy, c15.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r3, s2
    texld r3, r0.y, s3
    mul r0.y, r2.w, r3.x
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c10
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c15.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c16.x, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    add_pp r1.x, r1.x, -c13.x
    mul_pp r2.x, r1.x, r1.x
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c15.x
    mad r0.w, r0.w, r0.w, c17.y
    rcp r0.w, r0.w
    mul r2.y, r2.y, c17.x
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.x, -r1.x, c15.x
    mad_pp r2.z, r1_abs.w, r2.y, r2.x
    mad_pp r2.x, r1.z, r2.y, r2.x
    mul_pp r2.x, r1_abs.w, r2.x
    add_pp r1.w, -r1_abs.w, c15.x
    mad r2.x, r1.z, r2.z, r2.x
    add r2.x, r2.x, c16.z
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, c16.w
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c17.z
    mad r0.w, r0.w, -c17.z, c17.w
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c18.x, r2.x
    mul_pp r0.w, r1.z, r0.w
    texld r2, v0, s1
    mov r3.xyz, c14
    mad_pp r4.xyz, c11, r2, r3.x
    mul_pp r2.xyz, r2, c11
    mad_pp r3.xyw, c12.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c15.y, c15.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c15.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c16.y
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c15.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c15.x
    add_pp r1.y, -r1.z, c15.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c15.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c12.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c15.x

// approximately 111 instruction slots used (5 texture, 106 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 108 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  45: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  46: dp3 r3.w, r5.xyzx, r5.xyzx
  47: sqrt r3.w, r3.w
  48: mul r3.w, r3.w, cb2[1].w
  49: mul r3.w, r3.w, l(0.970000)
  50: sample_l r5.xyzw, r5.xyzx, t1.xyzw, s1, l(0.000000)
  51: lt r3.w, r5.x, r3.w
  52: movc r3.w, r3.w, cb3[24].x, l(1.000000)
  53: add_sat r0.w, r0.w, r3.w
  54: min r2.w, r0.w, r2.w
  55: movc r0.w, r1.w, r2.w, r0.w
  56: dp3 r1.w, r4.xyzx, r4.xyzx
  57: sample r5.xyzw, r1.wwww, t2.xyzw, s4
  58: sample r4.xyzw, r4.xyzx, t3.xyzw, s3
  59: mul r1.w, r4.w, r5.x
  60: mul r0.w, r0.w, r1.w
  61: mov r4.x, v3.w
  62: mov r4.y, v4.w
  63: mov r4.z, v5.w
  64: dp3 r1.w, r4.xyzx, r4.xyzx
  65: rsq r1.w, r1.w
  66: mul r5.xyz, r1.wwww, r4.xyzx
  67: mul r6.xyz, r0.wwww, cb0[2].xyzx
  68: add r0.w, -cb0[8].w, l(1.000000)
  69: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  70: dp3 r1.w, r4.xyzx, r4.xyzx
  71: max r1.w, r1.w, l(0.001000)
  72: rsq r1.w, r1.w
  73: mul r4.xyz, r1.wwww, r4.xyzx
  74: dp3 r1.w, r2.xyzx, -r3.xyzx
  75: dp3_sat r2.w, r2.xyzx, r5.xyzx
  76: dp3_sat r2.x, r2.xyzx, r4.xyzx
  77: dp3_sat r2.y, r5.xyzx, r4.xyzx
  78: mul r2.z, r2.y, r2.y
  79: dp2 r2.z, r2.zzzz, r0.wwww
  80: add r2.z, r2.z, l(-0.500000)
  81: add r3.x, -r2.w, l(1.000000)
  82: mul r3.y, r3.x, r3.x
  83: mul r3.y, r3.y, r3.y
  84: mul r3.x, r3.x, r3.y
  85: mad r3.x, r2.z, r3.x, l(1.000000)
  86: add r3.y, -|r1.w|, l(1.000000)
  87: mul r3.z, r3.y, r3.y
  88: mul r3.z, r3.z, r3.z
  89: mul r3.y, r3.y, r3.z
  90: mad r2.z, r2.z, r3.y, l(1.000000)
  91: mul r2.z, r2.z, r3.x
  92: mul r2.z, r2.w, r2.z
  93: mul r3.x, r0.w, r0.w
  94: mad r0.w, -r0.w, r0.w, l(1.000000)
  95: mad r3.y, |r1.w|, r0.w, r3.x
  96: mad r0.w, r2.w, r0.w, r3.x
  97: mul r0.w, r0.w, |r1.w|
  98: mad r0.w, r2.w, r3.y, r0.w
  99: add r0.w, r0.w, l(0.000010)
 100: div r0.w, l(0.500000), r0.w
 101: mul r1.w, r3.x, r3.x
 102: mad r3.x, r2.x, r1.w, -r2.x
 103: mad r2.x, r3.x, r2.x, l(1.000000)
 104: mul r1.w, r1.w, l(0.318310)
 105: mad r2.x, r2.x, r2.x, l(0.000000)
 106: div r1.w, r1.w, r2.x
 107: mul r0.w, r0.w, r1.w
 108: mul r0.w, r0.w, l(3.141593)
 109: max r0.w, r0.w, l(0.000100)
 110: sqrt r0.w, r0.w
 111: mul r0.w, r2.w, r0.w
 112: dp3 r1.w, r0.xyzx, r0.xyzx
 113: ne r1.w, r1.w, l(0.000000)
 114: and r1.w, r1.w, l(0x3f800000)
 115: mul r0.w, r0.w, r1.w
 116: mul r2.xzw, r2.zzzz, r6.xxyz
 117: mul r3.xyz, r6.xyzx, r0.wwww
 118: add r0.w, -r2.y, l(1.000000)
 119: mul r1.w, r0.w, r0.w
 120: mul r1.w, r1.w, r1.w
 121: mul r0.w, r0.w, r1.w
 122: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 123: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 124: mul r0.xyz, r0.xyzx, r3.xyzx
 125: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 126: mov o0.w, l(1.000000)
 127: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 119 math, 11 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 11
Float _GlossMapScale at 13
Vector4 _LightColor0 at 10
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 12
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   _LightColor0                  c10      1
//   _Color                        c11      1
//   _Metallic                     c12      1
//   _GlossMapScale                c13      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c14, -0.220916301, 0.220916301, 0.779083729, 0.0078125
    def c15, 0.970000029, 0.25, 0.00100000005, 31.622776
    def c16, 1, 0, -0.0078125, 0.0078125
    def c17, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c18, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    add r0.xyz, -c7, v5
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c7.w
    mov r1.w, c16.y
    add r1.xyz, r0, c14.w
    texldl r1, r1, s0
    mov r2.w, c16.y
    add r2.xyz, r0, c16.zzww
    texldl r2, r2, s0
    mov r1.y, r2.x
    add r2.xyz, r0, c16.zwzw
    add r3.xyz, r0, c16.wzzw
    mov r2.w, c16.y
    texldl r2, r2, s0
    mov r1.z, r2.x
    mov r3.w, c16.y
    texldl r2, r3, s0
    mov r1.w, r2.x
    mad r0, r0.w, -c15.x, r1
    mov r1.x, c16.x
    cmp_pp r0, r0, r1.x, c8.x
    dp4_pp r0.x, r0, c15.y
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r3, s2
    texld r3, r0.y, s3
    mul r0.y, r2.w, r3.x
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c10
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c15.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c15.w, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    texld r2, v0, s1
    mad_pp r1.x, r2.w, -c13.x, r1.x
    mul_pp r2.w, r1.x, r1.x
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c16.x
    mad r0.w, r0.w, r0.w, c18.x
    rcp r0.w, r0.w
    mul r3.x, r3.x, c17.w
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.x, -r1.x, c16.x
    mad_pp r3.y, r1.z, r3.x, r2.w
    mad_pp r2.w, r1_abs.w, r3.x, r2.w
    mul_pp r3.x, r1_abs.w, r3.y
    add_pp r1.w, -r1_abs.w, c16.x
    mad r2.w, r1.z, r2.w, r3.x
    add r2.w, r2.w, c17.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c17.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c18.y
    mad r0.w, r0.w, -c18.y, c18.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c18.w, r2.w
    mul_pp r0.w, r1.z, r0.w
    mov r3.xyz, c14
    mad_pp r4.xyz, c11, r2, r3.x
    mul_pp r2.xyz, r2, c11
    mad_pp r3.xyw, c12.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c16.y, c16.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c16.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c17.x
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c16.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c16.x
    add_pp r1.y, -r1.z, c16.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c16.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c12.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c16.x

// approximately 128 instruction slots used (11 texture, 117 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 114 math, 9 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb5[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.w
  40:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: lt r4.w, r1.w, l(0.990000)
  46: if_nz r4.w
  47:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  48:   dp3 r4.w, r5.xyzx, r5.xyzx
  49:   sqrt r4.w, r4.w
  50:   mul r4.w, r4.w, cb2[1].w
  51:   mul r4.w, r4.w, l(0.970000)
  52:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  53:   sample_l r6.xyzw, r6.xyzx, t1.xyzw, s1, l(0.000000)
  54:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
  55:   sample_l r7.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  56:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  57:   sample_l r8.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  58:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  59:   sample_l r5.xyzw, r5.xyzx, t1.yzwx, s1, l(0.000000)
  60:   mov r5.x, r6.x
  61:   mov r5.y, r7.x
  62:   mov r5.z, r8.x
  63:   lt r5.xyzw, r5.xyzw, r4.wwww
  64:   movc r5.xyzw, r5.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  65:   dp4 r4.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  66: else 
  67:   mov r4.w, l(1.000000)
  68: endif 
  69: add_sat r1.w, r1.w, r4.w
  70: min r3.w, r1.w, r3.w
  71: movc r1.w, r2.w, r3.w, r1.w
  72: dp3 r2.w, r4.xyzx, r4.xyzx
  73: sample r5.xyzw, r2.wwww, t2.xyzw, s4
  74: sample r4.xyzw, r4.xyzx, t3.xyzw, s3
  75: mul r2.w, r4.w, r5.x
  76: mul r1.w, r1.w, r2.w
  77: mov r4.x, v3.w
  78: mov r4.y, v4.w
  79: mov r4.z, v5.w
  80: dp3 r2.w, r4.xyzx, r4.xyzx
  81: rsq r2.w, r2.w
  82: mul r5.xyz, r2.wwww, r4.xyzx
  83: mul r6.xyz, r1.wwww, cb0[2].xyzx
  84: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  85: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  86: dp3 r1.w, r4.xyzx, r4.xyzx
  87: max r1.w, r1.w, l(0.001000)
  88: rsq r1.w, r1.w
  89: mul r4.xyz, r1.wwww, r4.xyzx
  90: dp3 r1.w, r2.xyzx, -r3.xyzx
  91: dp3_sat r2.w, r2.xyzx, r5.xyzx
  92: dp3_sat r2.x, r2.xyzx, r4.xyzx
  93: dp3_sat r2.y, r5.xyzx, r4.xyzx
  94: mul r2.z, r2.y, r2.y
  95: dp2 r2.z, r2.zzzz, r0.wwww
  96: add r2.z, r2.z, l(-0.500000)
  97: add r3.x, -r2.w, l(1.000000)
  98: mul r3.y, r3.x, r3.x
  99: mul r3.y, r3.y, r3.y
 100: mul r3.x, r3.x, r3.y
 101: mad r3.x, r2.z, r3.x, l(1.000000)
 102: add r3.y, -|r1.w|, l(1.000000)
 103: mul r3.z, r3.y, r3.y
 104: mul r3.z, r3.z, r3.z
 105: mul r3.y, r3.y, r3.z
 106: mad r2.z, r2.z, r3.y, l(1.000000)
 107: mul r2.z, r2.z, r3.x
 108: mul r2.z, r2.w, r2.z
 109: mul r3.x, r0.w, r0.w
 110: mad r0.w, -r0.w, r0.w, l(1.000000)
 111: mad r3.y, |r1.w|, r0.w, r3.x
 112: mad r0.w, r2.w, r0.w, r3.x
 113: mul r0.w, r0.w, |r1.w|
 114: mad r0.w, r2.w, r3.y, r0.w
 115: add r0.w, r0.w, l(0.000010)
 116: div r0.w, l(0.500000), r0.w
 117: mul r1.w, r3.x, r3.x
 118: mad r3.x, r2.x, r1.w, -r2.x
 119: mad r2.x, r3.x, r2.x, l(1.000000)
 120: mul r1.w, r1.w, l(0.318310)
 121: mad r2.x, r2.x, r2.x, l(0.000000)
 122: div r1.w, r1.w, r2.x
 123: mul r0.w, r0.w, r1.w
 124: mul r0.w, r0.w, l(3.141593)
 125: max r0.w, r0.w, l(0.000100)
 126: sqrt r0.w, r0.w
 127: mul r0.w, r2.w, r0.w
 128: dp3 r1.w, r0.xyzx, r0.xyzx
 129: ne r1.w, r1.w, l(0.000000)
 130: and r1.w, r1.w, l(0x3f800000)
 131: mul r0.w, r0.w, r1.w
 132: mul r2.xzw, r2.zzzz, r6.xxyz
 133: mul r3.xyz, r6.xyzx, r0.wwww
 134: add r0.w, -r2.y, l(1.000000)
 135: mul r1.w, r0.w, r0.w
 136: mul r1.w, r1.w, r1.w
 137: mul r0.w, r0.w, r1.w
 138: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 139: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 140: mul r0.xyz, r0.xyzx, r3.xyzx
 141: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 142: mov o0.w, l(1.000000)
 143: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 119 math, 11 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 11
Float _Glossiness at 13
Vector4 _LightColor0 at 10
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 12
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   _LightColor0                  c10      1
//   _Color                        c11      1
//   _Metallic                     c12      1
//   _Glossiness                   c13      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c14, -0.220916301, 0.220916301, 0.779083729, 0.0078125
    def c15, 0.970000029, 0.25, 0.00100000005, 31.622776
    def c16, 1, 0, -0.0078125, 0.0078125
    def c17, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c18, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    add r0.xyz, -c7, v5
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c7.w
    mov r1.w, c16.y
    add r1.xyz, r0, c14.w
    texldl r1, r1, s0
    mov r2.w, c16.y
    add r2.xyz, r0, c16.zzww
    texldl r2, r2, s0
    mov r1.y, r2.x
    add r2.xyz, r0, c16.zwzw
    add r3.xyz, r0, c16.wzzw
    mov r2.w, c16.y
    texldl r2, r2, s0
    mov r1.z, r2.x
    mov r3.w, c16.y
    texldl r2, r3, s0
    mov r1.w, r2.x
    mad r0, r0.w, -c15.x, r1
    mov r1.x, c16.x
    cmp_pp r0, r0, r1.x, c8.x
    dp4_pp r0.x, r0, c15.y
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r3, s2
    texld r3, r0.y, s3
    mul r0.y, r2.w, r3.x
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c10
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c15.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c15.w, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    add_pp r1.x, r1.x, -c13.x
    mul_pp r2.x, r1.x, r1.x
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c16.x
    mad r0.w, r0.w, r0.w, c18.x
    rcp r0.w, r0.w
    mul r2.y, r2.y, c17.w
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.x, -r1.x, c16.x
    mad_pp r2.z, r1_abs.w, r2.y, r2.x
    mad_pp r2.x, r1.z, r2.y, r2.x
    mul_pp r2.x, r1_abs.w, r2.x
    add_pp r1.w, -r1_abs.w, c16.x
    mad r2.x, r1.z, r2.z, r2.x
    add r2.x, r2.x, c17.y
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, c17.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c18.y
    mad r0.w, r0.w, -c18.y, c18.z
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c18.w, r2.x
    mul_pp r0.w, r1.z, r0.w
    texld r2, v0, s1
    mov r3.xyz, c14
    mad_pp r4.xyz, c11, r2, r3.x
    mul_pp r2.xyz, r2, c11
    mad_pp r3.xyw, c12.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c16.y, c16.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c16.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c17.x
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c16.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c16.x
    add_pp r1.y, -r1.z, c16.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c16.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c12.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c16.x

// approximately 128 instruction slots used (11 texture, 117 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 114 math, 9 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 9
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  45: lt r3.w, r0.w, l(0.990000)
  46: if_nz r3.w
  47:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  48:   dp3 r3.w, r5.xyzx, r5.xyzx
  49:   sqrt r3.w, r3.w
  50:   mul r3.w, r3.w, cb2[1].w
  51:   mul r3.w, r3.w, l(0.970000)
  52:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  53:   sample_l r6.xyzw, r6.xyzx, t1.xyzw, s1, l(0.000000)
  54:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
  55:   sample_l r7.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  56:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  57:   sample_l r8.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  58:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  59:   sample_l r5.xyzw, r5.xyzx, t1.yzwx, s1, l(0.000000)
  60:   mov r5.x, r6.x
  61:   mov r5.y, r7.x
  62:   mov r5.z, r8.x
  63:   lt r5.xyzw, r5.xyzw, r3.wwww
  64:   movc r5.xyzw, r5.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  65:   dp4 r3.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  66: else 
  67:   mov r3.w, l(1.000000)
  68: endif 
  69: add_sat r0.w, r0.w, r3.w
  70: min r2.w, r0.w, r2.w
  71: movc r0.w, r1.w, r2.w, r0.w
  72: dp3 r1.w, r4.xyzx, r4.xyzx
  73: sample r5.xyzw, r1.wwww, t2.xyzw, s4
  74: sample r4.xyzw, r4.xyzx, t3.xyzw, s3
  75: mul r1.w, r4.w, r5.x
  76: mul r0.w, r0.w, r1.w
  77: mov r4.x, v3.w
  78: mov r4.y, v4.w
  79: mov r4.z, v5.w
  80: dp3 r1.w, r4.xyzx, r4.xyzx
  81: rsq r1.w, r1.w
  82: mul r5.xyz, r1.wwww, r4.xyzx
  83: mul r6.xyz, r0.wwww, cb0[2].xyzx
  84: add r0.w, -cb0[8].w, l(1.000000)
  85: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  86: dp3 r1.w, r4.xyzx, r4.xyzx
  87: max r1.w, r1.w, l(0.001000)
  88: rsq r1.w, r1.w
  89: mul r4.xyz, r1.wwww, r4.xyzx
  90: dp3 r1.w, r2.xyzx, -r3.xyzx
  91: dp3_sat r2.w, r2.xyzx, r5.xyzx
  92: dp3_sat r2.x, r2.xyzx, r4.xyzx
  93: dp3_sat r2.y, r5.xyzx, r4.xyzx
  94: mul r2.z, r2.y, r2.y
  95: dp2 r2.z, r2.zzzz, r0.wwww
  96: add r2.z, r2.z, l(-0.500000)
  97: add r3.x, -r2.w, l(1.000000)
  98: mul r3.y, r3.x, r3.x
  99: mul r3.y, r3.y, r3.y
 100: mul r3.x, r3.x, r3.y
 101: mad r3.x, r2.z, r3.x, l(1.000000)
 102: add r3.y, -|r1.w|, l(1.000000)
 103: mul r3.z, r3.y, r3.y
 104: mul r3.z, r3.z, r3.z
 105: mul r3.y, r3.y, r3.z
 106: mad r2.z, r2.z, r3.y, l(1.000000)
 107: mul r2.z, r2.z, r3.x
 108: mul r2.z, r2.w, r2.z
 109: mul r3.x, r0.w, r0.w
 110: mad r0.w, -r0.w, r0.w, l(1.000000)
 111: mad r3.y, |r1.w|, r0.w, r3.x
 112: mad r0.w, r2.w, r0.w, r3.x
 113: mul r0.w, r0.w, |r1.w|
 114: mad r0.w, r2.w, r3.y, r0.w
 115: add r0.w, r0.w, l(0.000010)
 116: div r0.w, l(0.500000), r0.w
 117: mul r1.w, r3.x, r3.x
 118: mad r3.x, r2.x, r1.w, -r2.x
 119: mad r2.x, r3.x, r2.x, l(1.000000)
 120: mul r1.w, r1.w, l(0.318310)
 121: mad r2.x, r2.x, r2.x, l(0.000000)
 122: div r1.w, r1.w, r2.x
 123: mul r0.w, r0.w, r1.w
 124: mul r0.w, r0.w, l(3.141593)
 125: max r0.w, r0.w, l(0.000100)
 126: sqrt r0.w, r0.w
 127: mul r0.w, r2.w, r0.w
 128: dp3 r1.w, r0.xyzx, r0.xyzx
 129: ne r1.w, r1.w, l(0.000000)
 130: and r1.w, r1.w, l(0x3f800000)
 131: mul r0.w, r0.w, r1.w
 132: mul r2.xzw, r2.zzzz, r6.xxyz
 133: mul r3.xyz, r6.xyzx, r0.wwww
 134: add r0.w, -r2.y, l(1.000000)
 135: mul r1.w, r0.w, r0.w
 136: mul r1.w, r1.w, r1.w
 137: mul r0.w, r0.w, r1.w
 138: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 139: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 140: mul r0.xyz, r0.xyzx, r3.xyzx
 141: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 142: mov o0.w, l(1.000000)
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 33 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov o6.xyz, r0
    mov r1.w, c16.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 34 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 87 math, 2 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 4
Float _GlossMapScale at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _GlossMapScale     c6       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 1, 0, 0.00100000005, 31.622776
    def c9, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c10, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_2d s0
    dcl_2d s1
    nrm_pp r0.xyz, v1
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    mad_pp r2.xyz, r1, r0.w, -r0
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c8.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c8.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r3, r1
    dp3_pp r0.x, r3, -r0
    texld r2, v0, s0
    mov r3, c7
    mad_pp r0.y, r2.w, -c6.x, r3.w
    mul_pp r0.z, r0.y, r0.y
    mul_pp r1.y, r0.z, r0.z
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c7.w
    mad r0.w, r0.w, r0.w, c10.x
    rcp r0.w, r0.w
    mul r1.y, r1.y, c9.w
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.y, -r0.y, c7.w
    mad_pp r1.z, r1.x, r1.y, r0.z
    mad_pp r0.z, r0_abs.x, r1.y, r0.z
    mul_pp r1.y, r0_abs.x, r1.z
    add_pp r0.x, -r0_abs.x, c7.w
    mad r0.z, r1.x, r0.z, r1.y
    add r0.z, r0.z, c9.y
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c9.z
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c10.y
    mad r0.z, r0.z, -c10.y, c10.z
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c10.w, r0.w
    mul_pp r0.z, r1.x, r0.z
    mad_pp r4.xyz, c4, r2, r3.x
    mul_pp r2.xyz, r2, c4
    mad_pp r3.xyw, c5.x, r4.xyzz, r3.y
    dp3_pp r0.w, r3.xyww, r3.xyww
    cmp r0.w, -r0.w, c8.y, c8.x
    mul_pp r0.z, r0.w, r0.z
    mad r4, v5.xyzx, c8.xxxy, c8.yyyx
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r0.w, r5, r5
    texld_pp r4, r0.w, s1
    mul_pp r4.xyz, r4.x, c3
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.w, c7.w
    mul_pp r0.w, r1.w, r1.w
    dp2add_pp r0.y, r0.w, r0.y, c9.x
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    lrp_pp r1.yzw, r0.z, c7.w, r3.xxyw
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.y, r0.x, c7.w
    add_pp r0.z, -r1.x, c7.w
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.y, r0.y, r0.z, c7.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c5.x, -r3.z, r3.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp oC0.xyz, r2, r0, r1.yzww
    mov_pp oC0.w, c7.w

// approximately 88 instruction slots used (2 texture, 86 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  18: mov o6.xyz, r0.xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o7.xy, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: eq r1.w, cb2[0].x, l(1.000000)
  17: if_nz r1.w
  18:   eq r1.w, cb2[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  23:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  26:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r1.w, r2.w
  29:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r1.w, r5.xyzw, cb1[45].xyzw
  34: dp3 r2.w, r4.xyzx, r4.xyzx
  35: sample r4.xyzw, r2.wwww, t1.xyzw, s2
  36: mul r1.w, r1.w, r4.x
  37: mov r4.x, v3.w
  38: mov r4.y, v4.w
  39: mov r4.z, v5.w
  40: dp3 r2.w, r4.xyzx, r4.xyzx
  41: rsq r2.w, r2.w
  42: mul r5.xyz, r2.wwww, r4.xyzx
  43: mul r6.xyz, r1.wwww, cb0[2].xyzx
  44: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  45: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  46: dp3 r1.w, r4.xyzx, r4.xyzx
  47: max r1.w, r1.w, l(0.001000)
  48: rsq r1.w, r1.w
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: dp3 r1.w, r2.xyzx, -r3.xyzx
  51: dp3_sat r2.w, r2.xyzx, r5.xyzx
  52: dp3_sat r2.x, r2.xyzx, r4.xyzx
  53: dp3_sat r2.y, r5.xyzx, r4.xyzx
  54: mul r2.z, r2.y, r2.y
  55: dp2 r2.z, r2.zzzz, r0.wwww
  56: add r2.z, r2.z, l(-0.500000)
  57: add r3.x, -r2.w, l(1.000000)
  58: mul r3.y, r3.x, r3.x
  59: mul r3.y, r3.y, r3.y
  60: mul r3.x, r3.x, r3.y
  61: mad r3.x, r2.z, r3.x, l(1.000000)
  62: add r3.y, -|r1.w|, l(1.000000)
  63: mul r3.z, r3.y, r3.y
  64: mul r3.z, r3.z, r3.z
  65: mul r3.y, r3.y, r3.z
  66: mad r2.z, r2.z, r3.y, l(1.000000)
  67: mul r2.z, r2.z, r3.x
  68: mul r2.z, r2.w, r2.z
  69: mul r3.x, r0.w, r0.w
  70: mad r0.w, -r0.w, r0.w, l(1.000000)
  71: mad r3.y, |r1.w|, r0.w, r3.x
  72: mad r0.w, r2.w, r0.w, r3.x
  73: mul r0.w, r0.w, |r1.w|
  74: mad r0.w, r2.w, r3.y, r0.w
  75: add r0.w, r0.w, l(0.000010)
  76: div r0.w, l(0.500000), r0.w
  77: mul r1.w, r3.x, r3.x
  78: mad r3.x, r2.x, r1.w, -r2.x
  79: mad r2.x, r3.x, r2.x, l(1.000000)
  80: mul r1.w, r1.w, l(0.318310)
  81: mad r2.x, r2.x, r2.x, l(0.000000)
  82: div r1.w, r1.w, r2.x
  83: mul r0.w, r0.w, r1.w
  84: mul r0.w, r0.w, l(3.141593)
  85: max r0.w, r0.w, l(0.000100)
  86: sqrt r0.w, r0.w
  87: mul r0.w, r2.w, r0.w
  88: dp3 r1.w, r0.xyzx, r0.xyzx
  89: ne r1.w, r1.w, l(0.000000)
  90: and r1.w, r1.w, l(0x3f800000)
  91: mul r0.w, r0.w, r1.w
  92: mul r2.xzw, r2.zzzz, r6.xxyz
  93: mul r3.xyz, r6.xyzx, r0.wwww
  94: add r0.w, -r2.y, l(1.000000)
  95: mul r1.w, r0.w, r0.w
  96: mul r1.w, r1.w, r1.w
  97: mul r0.w, r0.w, r1.w
  98: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  99: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 100: mul r0.xyz, r0.xyzx, r3.xyzx
 101: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 102: mov o0.w, l(1.000000)
 103: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 89 math, 2 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 5
Float _Glossiness at 7
Vector4 _LightColor0 at 4
Float _Metallic at 6
Vector4 unity_FogParams at 3

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_FogParams;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   unity_FogParams    c3       1
//   _LightColor0       c4       1
//   _Color             c5       1
//   _Metallic          c6       1
//   _Glossiness        c7       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//

    ps_3_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 1, 0, 0.00100000005, 31.622776
    def c10, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c11, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_2d s0
    dcl_2d s1
    nrm_pp r0.xyz, v1
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    mad_pp r2.xyz, r1, r0.w, -r0
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c9.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c9.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r3, r1
    dp3_pp r0.x, r3, -r0
    mov r2, c8
    add_pp r0.y, r2.w, -c7.x
    mul_pp r0.z, r0.y, r0.y
    mul_pp r1.y, r0.z, r0.z
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c8.w
    mad r0.w, r0.w, r0.w, c11.x
    rcp r0.w, r0.w
    mul r1.y, r1.y, c10.w
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.y, -r0.y, c8.w
    mad_pp r1.z, r0_abs.x, r1.y, r0.z
    mad_pp r0.z, r1.x, r1.y, r0.z
    mul_pp r0.z, r0.z, r0_abs.x
    add_pp r0.x, -r0_abs.x, c8.w
    mad r0.z, r1.x, r1.z, r0.z
    add r0.z, r0.z, c10.y
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c10.z
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c11.y
    mad r0.z, r0.z, -c11.y, c11.z
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c11.w, r0.w
    mul_pp r0.z, r1.x, r0.z
    texld r3, v0, s0
    mad_pp r4.xyz, c5, r3, r2.x
    mul_pp r3.xyz, r3, c5
    mad_pp r2.xyw, c6.x, r4.xyzz, r2.y
    dp3_pp r0.w, r2.xyww, r2.xyww
    cmp r0.w, -r0.w, c9.y, c9.x
    mul_pp r0.z, r0.w, r0.z
    mad r4, v5.xyzx, c9.xxxy, c9.yyyx
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r0.w, r5, r5
    texld_pp r4, r0.w, s1
    mul_pp r4.xyz, r4.x, c4
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.w, c8.w
    mul_pp r0.w, r1.w, r1.w
    dp2add_pp r0.y, r0.w, r0.y, c10.x
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    lrp_pp r1.yzw, r0.z, c8.w, r2.xxyw
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.y, r0.x, c8.w
    add_pp r0.z, -r1.x, c8.w
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.y, r0.y, r0.z, c8.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c6.x, -r2.z, r2.z
    mul_pp r2.xyz, r0.w, r3
    mad_pp r0.xyz, r2, r0, r1.yzww
    mad_sat r0.w, v6.x, c3.z, c3.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c8.w

// approximately 90 instruction slots used (2 texture, 88 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 3 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: eq r0.w, cb4[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb4[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb4[2].xyzx
  20:   mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  23:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb4[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb4[5].xxyz
  26:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r0.w, r1.w
  29:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r5.xyzw, cb2[45].xyzw
  34: dp3 r1.w, r4.xyzx, r4.xyzx
  35: sample r4.xyzw, r1.wwww, t1.xyzw, s2
  36: mul r0.w, r0.w, r4.x
  37: mov r4.x, v3.w
  38: mov r4.y, v4.w
  39: mov r4.z, v5.w
  40: dp3 r1.w, r4.xyzx, r4.xyzx
  41: rsq r1.w, r1.w
  42: mul r5.xyz, r1.wwww, r4.xyzx
  43: mul r6.xyz, r0.wwww, cb0[2].xyzx
  44: add r0.w, -cb0[8].w, l(1.000000)
  45: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  46: dp3 r1.w, r4.xyzx, r4.xyzx
  47: max r1.w, r1.w, l(0.001000)
  48: rsq r1.w, r1.w
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: dp3 r1.w, r2.xyzx, -r3.xyzx
  51: dp3_sat r2.w, r2.xyzx, r5.xyzx
  52: dp3_sat r2.x, r2.xyzx, r4.xyzx
  53: dp3_sat r2.y, r5.xyzx, r4.xyzx
  54: mul r2.z, r2.y, r2.y
  55: dp2 r2.z, r2.zzzz, r0.wwww
  56: add r2.z, r2.z, l(-0.500000)
  57: add r3.x, -r2.w, l(1.000000)
  58: mul r3.y, r3.x, r3.x
  59: mul r3.y, r3.y, r3.y
  60: mul r3.x, r3.x, r3.y
  61: mad r3.x, r2.z, r3.x, l(1.000000)
  62: add r3.y, -|r1.w|, l(1.000000)
  63: mul r3.z, r3.y, r3.y
  64: mul r3.z, r3.z, r3.z
  65: mul r3.y, r3.y, r3.z
  66: mad r2.z, r2.z, r3.y, l(1.000000)
  67: mul r2.z, r2.z, r3.x
  68: mul r2.z, r2.w, r2.z
  69: mul r3.x, r0.w, r0.w
  70: mad r0.w, -r0.w, r0.w, l(1.000000)
  71: mad r3.y, |r1.w|, r0.w, r3.x
  72: mad r0.w, r2.w, r0.w, r3.x
  73: mul r0.w, r0.w, |r1.w|
  74: mad r0.w, r2.w, r3.y, r0.w
  75: add r0.w, r0.w, l(0.000010)
  76: div r0.w, l(0.500000), r0.w
  77: mul r1.w, r3.x, r3.x
  78: mad r3.x, r2.x, r1.w, -r2.x
  79: mad r2.x, r3.x, r2.x, l(1.000000)
  80: mul r1.w, r1.w, l(0.318310)
  81: mad r2.x, r2.x, r2.x, l(0.000000)
  82: div r1.w, r1.w, r2.x
  83: mul r0.w, r0.w, r1.w
  84: mul r0.w, r0.w, l(3.141593)
  85: max r0.w, r0.w, l(0.000100)
  86: sqrt r0.w, r0.w
  87: mul r0.w, r2.w, r0.w
  88: dp3 r1.w, r0.xyzx, r0.xyzx
  89: ne r1.w, r1.w, l(0.000000)
  90: and r1.w, r1.w, l(0x3f800000)
  91: mul r0.w, r0.w, r1.w
  92: mul r2.xzw, r2.zzzz, r6.xxyz
  93: mul r3.xyz, r6.xyzx, r0.wwww
  94: add r0.w, -r2.y, l(1.000000)
  95: mul r1.w, r0.w, r0.w
  96: mul r1.w, r1.w, r1.w
  97: mul r0.w, r0.w, r1.w
  98: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  99: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 100: mul r0.xyz, r0.xyzx, r3.xyzx
 101: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 102: div r0.w, v7.z, cb1[5].y
 103: add r0.w, -r0.w, l(1.000000)
 104: mul r0.w, r0.w, cb1[5].z
 105: max r0.w, r0.w, l(0.000000)
 106: mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
 107: mul o0.xyz, r0.xyzx, r0.wwww
 108: mov o0.w, l(1.000000)
 109: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 80 math, 1 textures
Vector4 _Color at 2
Float _GlossMapScale at 4
Vector4 _LightColor0 at 1
Float _Metallic at 3
Vector4 unity_FogParams at 0

Set 2D Texture "_MainTex" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_FogParams;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   unity_FogParams c0       1
//   _LightColor0    c1       1
//   _Color          c2       1
//   _Metallic       c3       1
//   _GlossMapScale  c4       1
//   _MainTex        s0       1
//

    ps_3_0
    def c5, -0.220916301, 0.220916301, 0.779083729, 1
    def c6, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c7, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c8, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord7 v5.x
    dcl_2d s0
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r0.yzw, v1.xxyz, -r0.x, r1.xxyz
    mul_pp r2.xyz, r0.x, v1
    dp3_pp r0.x, r0.yzww, r0.yzww
    add r1.w, -r0.x, c6.x
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c6.y, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r0
    dp3_sat_pp r0.x, r1, r0
    dp3_sat_pp r0.y, r3, r1
    dp3_pp r0.z, r3, -r2
    texld r1, v0, s0
    mov r2, c5
    mad_pp r1.w, r1.w, -c4.x, r2.w
    mul_pp r2.w, r1.w, r1.w
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c5.w
    mad r0.w, r0.w, r0.w, c7.y
    rcp r0.w, r0.w
    mul r3.x, r3.x, c7.x
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.w, -r1.w, c5.w
    mad_pp r3.y, r0_abs.z, r3.x, r2.w
    mad_pp r2.w, r0.y, r3.x, r2.w
    mul_pp r2.w, r0_abs.z, r2.w
    add_pp r0.z, -r0_abs.z, c5.w
    mad r2.w, r0.y, r3.y, r2.w
    add r2.w, r2.w, c6.w
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, -c6.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c7.z
    mad r0.w, r0.w, -c7.z, c7.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c8.x, r2.w
    mul_pp r0.w, r0.y, r0.w
    mad_pp r3.xyz, c2, r1, r2.x
    mul_pp r1.xyz, r1, c2
    mad_pp r2.xyw, c3.x, r3.xyzz, r2.y
    dp3_pp r3.x, r2.xyww, r2.xyww
    cmp r3.x, -r3.x, c8.y, c8.z
    mul_pp r0.w, r0.w, r3.x
    mul_pp r3.xyz, r0.w, c1
    add_pp r0.w, -r0.x, c5.w
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r1.w, c6.z
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r4.xyz, r0.w, c5.w, r2.xyww
    mul_pp r2.xyw, r3.xyzz, r4.xyzz
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.z, r0.x, r0.z, c5.w
    add_pp r0.w, -r0.y, c5.w
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    mad_pp r0.x, r0.x, r0.w, c5.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, c1
    mad_pp r0.w, c3.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.xyz, r1, r0, r2.xyww
    mad_sat r0.w, v5.x, c0.z, c0.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c5.w

// approximately 80 instruction slots used (1 texture, 79 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 88 math, 7 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 3 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: eq r2.w, cb4[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb4[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb4[2].xyzx
  16:   mad r4.xyz, cb4[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb4[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb4[4].xyzx
  19:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb4[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb4[5].xxyz
  22:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r2.w, r3.w
  25:   sample r4.xyzw, r4.xzwx, t1.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r4.xyzw, cb2[45].xyzw
  30: mul r4.xyz, r2.wwww, cb0[2].xyzx
  31: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  32: mov r5.x, v3.w
  33: mov r5.y, v4.w
  34: mov r5.z, v5.w
  35: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  36: dp3 r1.w, r6.xyzx, r6.xyzx
  37: max r1.w, r1.w, l(0.001000)
  38: rsq r1.w, r1.w
  39: mul r6.xyz, r1.wwww, r6.xyzx
  40: dp3 r1.w, r2.xyzx, -r3.xyzx
  41: dp3_sat r2.w, r2.xyzx, r5.xyzx
  42: dp3_sat r2.x, r2.xyzx, r6.xyzx
  43: dp3_sat r2.y, r5.xyzx, r6.xyzx
  44: mul r2.z, r2.y, r2.y
  45: dp2 r2.z, r2.zzzz, r0.wwww
  46: add r2.z, r2.z, l(-0.500000)
  47: add r3.x, -r2.w, l(1.000000)
  48: mul r3.y, r3.x, r3.x
  49: mul r3.y, r3.y, r3.y
  50: mul r3.x, r3.x, r3.y
  51: mad r3.x, r2.z, r3.x, l(1.000000)
  52: add r3.y, -|r1.w|, l(1.000000)
  53: mul r3.z, r3.y, r3.y
  54: mul r3.z, r3.z, r3.z
  55: mul r3.y, r3.y, r3.z
  56: mad r2.z, r2.z, r3.y, l(1.000000)
  57: mul r2.z, r2.z, r3.x
  58: mul r2.z, r2.w, r2.z
  59: mul r3.x, r0.w, r0.w
  60: mad r0.w, -r0.w, r0.w, l(1.000000)
  61: mad r3.y, |r1.w|, r0.w, r3.x
  62: mad r0.w, r2.w, r0.w, r3.x
  63: mul r0.w, r0.w, |r1.w|
  64: mad r0.w, r2.w, r3.y, r0.w
  65: add r0.w, r0.w, l(0.000010)
  66: div r0.w, l(0.500000), r0.w
  67: mul r1.w, r3.x, r3.x
  68: mad r3.x, r2.x, r1.w, -r2.x
  69: mad r2.x, r3.x, r2.x, l(1.000000)
  70: mul r1.w, r1.w, l(0.318310)
  71: mad r2.x, r2.x, r2.x, l(0.000000)
  72: div r1.w, r1.w, r2.x
  73: mul r0.w, r0.w, r1.w
  74: mul r0.w, r0.w, l(3.141593)
  75: max r0.w, r0.w, l(0.000100)
  76: sqrt r0.w, r0.w
  77: mul r0.w, r2.w, r0.w
  78: dp3 r1.w, r0.xyzx, r0.xyzx
  79: ne r1.w, r1.w, l(0.000000)
  80: and r1.w, r1.w, l(0x3f800000)
  81: mul r0.w, r0.w, r1.w
  82: mul r2.xzw, r2.zzzz, r4.xxyz
  83: mul r3.xyz, r4.xyzx, r0.wwww
  84: add r0.w, -r2.y, l(1.000000)
  85: mul r1.w, r0.w, r0.w
  86: mul r1.w, r1.w, r1.w
  87: mul r0.w, r0.w, r1.w
  88: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  89: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  90: mul r0.xyz, r0.xyzx, r3.xyzx
  91: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  92: div r0.w, v7.z, cb1[5].y
  93: add r0.w, -r0.w, l(1.000000)
  94: mul r0.w, r0.w, cb1[5].z
  95: max r0.w, r0.w, l(0.000000)
  96: mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
  97: mul o0.xyz, r0.xyzx, r0.wwww
  98: mov o0.w, l(1.000000)
  99: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 80 math, 1 textures
Vector4 _Color at 2
Float _Glossiness at 4
Vector4 _LightColor0 at 1
Float _Metallic at 3
Vector4 unity_FogParams at 0

Set 2D Texture "_MainTex" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_FogParams;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   unity_FogParams c0       1
//   _LightColor0    c1       1
//   _Color          c2       1
//   _Metallic       c3       1
//   _Glossiness     c4       1
//   _MainTex        s0       1
//

    ps_3_0
    def c5, -0.220916301, 0.220916301, 0.779083729, 1
    def c6, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c7, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c8, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord7 v5.x
    dcl_2d s0
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r0.yzw, v1.xxyz, -r0.x, r1.xxyz
    mul_pp r2.xyz, r0.x, v1
    dp3_pp r0.x, r0.yzww, r0.yzww
    add r1.w, -r0.x, c6.x
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c6.y, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r0
    dp3_sat_pp r0.x, r1, r0
    dp3_sat_pp r0.y, r3, r1
    dp3_pp r0.z, r3, -r2
    mov r1, c5
    add_pp r1.w, r1.w, -c4.x
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c5.w
    mad r0.w, r0.w, r0.w, c7.y
    rcp r0.w, r0.w
    mul r2.y, r2.y, c7.x
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.w, -r1.w, c5.w
    mad_pp r2.z, r0_abs.z, r2.y, r2.x
    mad_pp r2.x, r0.y, r2.y, r2.x
    mul_pp r2.x, r0_abs.z, r2.x
    add_pp r0.z, -r0_abs.z, c5.w
    mad r2.x, r0.y, r2.z, r2.x
    add r2.x, r2.x, c6.w
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, -c6.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c7.z
    mad r0.w, r0.w, -c7.z, c7.w
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c8.x, r2.x
    mul_pp r0.w, r0.y, r0.w
    texld r2, v0, s0
    mad_pp r3.xyz, c2, r2, r1.x
    mul_pp r2.xyz, r2, c2
    mad_pp r3.xyz, c3.x, r3, r1.y
    dp3_pp r1.x, r3, r3
    cmp r1.x, -r1.x, c8.y, c8.z
    mul_pp r0.w, r0.w, r1.x
    mul_pp r4.xyz, r0.w, c1
    add_pp r0.w, -r0.x, c5.w
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r1.w, c6.z
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    lrp_pp r1.xyw, r0.w, c5.w, r3.xyzz
    mul_pp r1.xyw, r1, r4.xyzz
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.z, r0.x, r0.z, c5.w
    add_pp r0.w, -r0.y, c5.w
    mul_pp r2.w, r0.w, r0.w
    mul_pp r2.w, r2.w, r2.w
    mul_pp r0.w, r0.w, r2.w
    mad_pp r0.x, r0.x, r0.w, c5.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, c1
    mad_pp r0.w, c3.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp r0.xyz, r2, r0, r1.xyww
    mad_sat r0.w, v5.x, c0.z, c0.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c5.w

// approximately 80 instruction slots used (1 texture, 79 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 88 math, 7 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 3 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: eq r1.w, cb4[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb4[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb4[2].xyzx
  16:   mad r4.xyz, cb4[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb4[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb4[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb4[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb4[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t1.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb2[45].xyzw
  30: mul r4.xyz, r1.wwww, cb0[2].xyzx
  31: add r1.w, -cb0[8].w, l(1.000000)
  32: mov r5.x, v3.w
  33: mov r5.y, v4.w
  34: mov r5.z, v5.w
  35: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  36: dp3 r0.w, r6.xyzx, r6.xyzx
  37: max r0.w, r0.w, l(0.001000)
  38: rsq r0.w, r0.w
  39: mul r6.xyz, r0.wwww, r6.xyzx
  40: dp3 r0.w, r2.xyzx, -r3.xyzx
  41: dp3_sat r2.w, r2.xyzx, r5.xyzx
  42: dp3_sat r2.x, r2.xyzx, r6.xyzx
  43: dp3_sat r2.y, r5.xyzx, r6.xyzx
  44: mul r2.z, r2.y, r2.y
  45: dp2 r2.z, r2.zzzz, r1.wwww
  46: add r2.z, r2.z, l(-0.500000)
  47: add r3.x, -r2.w, l(1.000000)
  48: mul r3.y, r3.x, r3.x
  49: mul r3.y, r3.y, r3.y
  50: mul r3.x, r3.x, r3.y
  51: mad r3.x, r2.z, r3.x, l(1.000000)
  52: add r3.y, -|r0.w|, l(1.000000)
  53: mul r3.z, r3.y, r3.y
  54: mul r3.z, r3.z, r3.z
  55: mul r3.y, r3.y, r3.z
  56: mad r2.z, r2.z, r3.y, l(1.000000)
  57: mul r2.z, r2.z, r3.x
  58: mul r2.z, r2.w, r2.z
  59: mul r3.x, r1.w, r1.w
  60: mad r1.w, -r1.w, r1.w, l(1.000000)
  61: mad r3.y, |r0.w|, r1.w, r3.x
  62: mad r1.w, r2.w, r1.w, r3.x
  63: mul r0.w, |r0.w|, r1.w
  64: mad r0.w, r2.w, r3.y, r0.w
  65: add r0.w, r0.w, l(0.000010)
  66: div r0.w, l(0.500000), r0.w
  67: mul r1.w, r3.x, r3.x
  68: mad r3.x, r2.x, r1.w, -r2.x
  69: mad r2.x, r3.x, r2.x, l(1.000000)
  70: mul r1.w, r1.w, l(0.318310)
  71: mad r2.x, r2.x, r2.x, l(0.000000)
  72: div r1.w, r1.w, r2.x
  73: mul r0.w, r0.w, r1.w
  74: mul r0.w, r0.w, l(3.141593)
  75: max r0.w, r0.w, l(0.000100)
  76: sqrt r0.w, r0.w
  77: mul r0.w, r2.w, r0.w
  78: dp3 r1.w, r0.xyzx, r0.xyzx
  79: ne r1.w, r1.w, l(0.000000)
  80: and r1.w, r1.w, l(0x3f800000)
  81: mul r0.w, r0.w, r1.w
  82: mul r2.xzw, r2.zzzz, r4.xxyz
  83: mul r3.xyz, r4.xyzx, r0.wwww
  84: add r0.w, -r2.y, l(1.000000)
  85: mul r1.w, r0.w, r0.w
  86: mul r1.w, r1.w, r1.w
  87: mul r0.w, r0.w, r1.w
  88: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  89: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  90: mul r0.xyz, r0.xyzx, r3.xyzx
  91: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  92: div r0.w, v7.z, cb1[5].y
  93: add r0.w, -r0.w, l(1.000000)
  94: mul r0.w, r0.w, cb1[5].z
  95: max r0.w, r0.w, l(0.000000)
  96: mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
  97: mul o0.xyz, r0.xyzx, r0.wwww
  98: mov o0.w, l(1.000000)
  99: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 95 math, 3 textures
Matrix4x4 unity_WorldToLight at 0
Vector4 _Color at 6
Float _GlossMapScale at 8
Vector4 _LightColor0 at 5
Float _Metallic at 7
Vector4 unity_FogParams at 4

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_FogParams;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       4
//   unity_FogParams    c4       1
//   _LightColor0       c5       1
//   _Color             c6       1
//   _Metallic          c7       1
//   _GlossMapScale     c8       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//   _LightTextureB0    s2       1
//

    ps_3_0
    def c9, -0.220916301, 0.220916301, 0.779083729, 0.5
    def c10, 1, 0, 0.00100000005, 31.622776
    def c11, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c12, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mad r0, v5.xyzx, c10.xxxy, c10.yyyx
    dp4 r1.x, c3, r0
    rcp r1.x, r1.x
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r2.z, c2, r0
    mad r0.xy, r2, r1.x, c9.w
    dp3 r0.z, r2, r2
    texld_pp r1, r0.z, s2
    texld_pp r0, r0, s1
    mul r0.x, r1.x, r0.w
    mul_pp r0.xyz, r0.x, c5
    cmp_pp r0.xyz, -r2.z, c10.y, r0
    nrm_pp r1.xyz, v1
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    dp3_pp r0.w, r2, r2
    rsq_pp r0.w, r0.w
    mad_pp r3.xyz, r2, r0.w, -r1
    mul_pp r2.xyz, r0.w, r2
    dp3_pp r0.w, r3, r3
    add r1.w, -r0.w, c10.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c10.w, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r3
    dp3_sat_pp r1.w, r2, r3
    dp3_sat_pp r2.x, r4, r2
    dp3_pp r1.x, r4, -r1
    texld r3, v0, s0
    mov r4.x, c10.x
    mad_pp r1.y, r3.w, -c8.x, r4.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r2.y, r1.z, r1.z
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c10.x
    mad r0.w, r0.w, r0.w, c11.z
    rcp r0.w, r0.w
    mul r2.y, r2.y, c11.y
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.y, -r1.y, c10.x
    mad_pp r2.z, r2.x, r2.y, r1.z
    mad_pp r1.z, r1_abs.x, r2.y, r1.z
    mul_pp r2.y, r1_abs.x, r2.z
    add_pp r1.x, -r1_abs.x, c10.x
    mad r1.z, r2.x, r1.z, r2.y
    add r1.z, r1.z, c11.x
    rcp r1.z, r1.z
    mul_pp r1.z, r1.z, c9.w
    mul r0.w, r0.w, r1.z
    mul_pp r1.z, r0.w, c11.w
    mad r0.w, r0.w, -c12.x, c12.y
    rsq r1.z, r1.z
    rcp_pp r1.z, r1.z
    cmp_pp r0.w, r0.w, c12.z, r1.z
    mul_pp r0.w, r2.x, r0.w
    mov r4.xyz, c9
    mad_pp r2.yzw, c6.xxyz, r3.xxyz, r4.x
    mul_pp r3.xyz, r3, c6
    mad_pp r2.yzw, c7.x, r2, r4.y
    dp3_pp r1.z, r2.yzww, r2.yzww
    cmp r1.z, -r1.z, c10.y, c10.x
    mul_pp r0.w, r0.w, r1.z
    mul_pp r4.xyw, r0.xyzz, r0.w
    add_pp r0.w, -r1.w, c10.x
    mul_pp r1.z, r1.w, r1.w
    dp2add_pp r1.y, r1.z, r1.y, -c9.w
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    lrp_pp r5.xyz, r0.w, c10.x, r2.yzww
    mul_pp r2.yzw, r4.xxyw, r5.xxyz
    mul_pp r0.w, r1.x, r1.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r0.w, r1.y, r0.w, c10.x
    add_pp r1.x, -r2.x, c10.x
    mul_pp r1.z, r1.x, r1.x
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.x, r1.x, r1.z
    mad_pp r1.x, r1.y, r1.x, c10.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c7.x, -r4.z, r4.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp r0.xyz, r1, r0, r2.yzww
    mad_sat r0.w, v6.x, c4.z, c4.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c10.x

// approximately 97 instruction slots used (3 texture, 94 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 103 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 3 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  16: eq r1.w, cb4[0].x, l(1.000000)
  17: if_nz r1.w
  18:   eq r1.w, cb4[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb4[2].xyzx
  20:   mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  23:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb4[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb4[5].xxyz
  26:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r1.w, r2.w
  29:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r1.w, r5.xyzw, cb2[45].xyzw
  34: lt r2.w, l(0.000000), r4.z
  35: and r2.w, r2.w, l(0x3f800000)
  36: div r5.xy, r4.xyxx, r4.wwww
  37: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  38: sample r5.xyzw, r5.xyxx, t1.xyzw, s2
  39: mul r2.w, r2.w, r5.w
  40: dp3 r3.w, r4.xyzx, r4.xyzx
  41: sample r4.xyzw, r3.wwww, t2.xyzw, s3
  42: mul r2.w, r2.w, r4.x
  43: mul r1.w, r1.w, r2.w
  44: mov r4.x, v3.w
  45: mov r4.y, v4.w
  46: mov r4.z, v5.w
  47: dp3 r2.w, r4.xyzx, r4.xyzx
  48: rsq r2.w, r2.w
  49: mul r5.xyz, r2.wwww, r4.xyzx
  50: mul r6.xyz, r1.wwww, cb0[2].xyzx
  51: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  52: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  53: dp3 r1.w, r4.xyzx, r4.xyzx
  54: max r1.w, r1.w, l(0.001000)
  55: rsq r1.w, r1.w
  56: mul r4.xyz, r1.wwww, r4.xyzx
  57: dp3 r1.w, r2.xyzx, -r3.xyzx
  58: dp3_sat r2.w, r2.xyzx, r5.xyzx
  59: dp3_sat r2.x, r2.xyzx, r4.xyzx
  60: dp3_sat r2.y, r5.xyzx, r4.xyzx
  61: mul r2.z, r2.y, r2.y
  62: dp2 r2.z, r2.zzzz, r0.wwww
  63: add r2.z, r2.z, l(-0.500000)
  64: add r3.x, -r2.w, l(1.000000)
  65: mul r3.y, r3.x, r3.x
  66: mul r3.y, r3.y, r3.y
  67: mul r3.x, r3.x, r3.y
  68: mad r3.x, r2.z, r3.x, l(1.000000)
  69: add r3.y, -|r1.w|, l(1.000000)
  70: mul r3.z, r3.y, r3.y
  71: mul r3.z, r3.z, r3.z
  72: mul r3.y, r3.y, r3.z
  73: mad r2.z, r2.z, r3.y, l(1.000000)
  74: mul r2.z, r2.z, r3.x
  75: mul r2.z, r2.w, r2.z
  76: mul r3.x, r0.w, r0.w
  77: mad r0.w, -r0.w, r0.w, l(1.000000)
  78: mad r3.y, |r1.w|, r0.w, r3.x
  79: mad r0.w, r2.w, r0.w, r3.x
  80: mul r0.w, r0.w, |r1.w|
  81: mad r0.w, r2.w, r3.y, r0.w
  82: add r0.w, r0.w, l(0.000010)
  83: div r0.w, l(0.500000), r0.w
  84: mul r1.w, r3.x, r3.x
  85: mad r3.x, r2.x, r1.w, -r2.x
  86: mad r2.x, r3.x, r2.x, l(1.000000)
  87: mul r1.w, r1.w, l(0.318310)
  88: mad r2.x, r2.x, r2.x, l(0.000000)
  89: div r1.w, r1.w, r2.x
  90: mul r0.w, r0.w, r1.w
  91: mul r0.w, r0.w, l(3.141593)
  92: max r0.w, r0.w, l(0.000100)
  93: sqrt r0.w, r0.w
  94: mul r0.w, r2.w, r0.w
  95: dp3 r1.w, r0.xyzx, r0.xyzx
  96: ne r1.w, r1.w, l(0.000000)
  97: and r1.w, r1.w, l(0x3f800000)
  98: mul r0.w, r0.w, r1.w
  99: mul r2.xzw, r2.zzzz, r6.xxyz
 100: mul r3.xyz, r6.xyzx, r0.wwww
 101: add r0.w, -r2.y, l(1.000000)
 102: mul r1.w, r0.w, r0.w
 103: mul r1.w, r1.w, r1.w
 104: mul r0.w, r0.w, r1.w
 105: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 107: mul r0.xyz, r0.xyzx, r3.xyzx
 108: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 109: div r0.w, v7.z, cb1[5].y
 110: add r0.w, -r0.w, l(1.000000)
 111: mul r0.w, r0.w, cb1[5].z
 112: max r0.w, r0.w, l(0.000000)
 113: mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
 114: mul o0.xyz, r0.xyzx, r0.wwww
 115: mov o0.w, l(1.000000)
 116: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 95 math, 3 textures
Matrix4x4 unity_WorldToLight at 0
Vector4 _Color at 6
Float _Glossiness at 8
Vector4 _LightColor0 at 5
Float _Metallic at 7
Vector4 unity_FogParams at 4

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_FogParams;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       4
//   unity_FogParams    c4       1
//   _LightColor0       c5       1
//   _Color             c6       1
//   _Metallic          c7       1
//   _Glossiness        c8       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//   _LightTextureB0    s2       1
//

    ps_3_0
    def c9, -0.220916301, 0.220916301, 0.779083729, 0.5
    def c10, 1, 0, 0.00100000005, 31.622776
    def c11, 9.99999975e-006, 0.318309873, 1.00000001e-007, 3.14159274
    def c12, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mad r0, v5.xyzx, c10.xxxy, c10.yyyx
    dp4 r1.x, c3, r0
    rcp r1.x, r1.x
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r2.z, c2, r0
    mad r0.xy, r2, r1.x, c9.w
    dp3 r0.z, r2, r2
    texld_pp r1, r0.z, s2
    texld_pp r0, r0, s1
    mul r0.x, r1.x, r0.w
    mul_pp r0.xyz, r0.x, c5
    cmp_pp r0.xyz, -r2.z, c10.y, r0
    nrm_pp r1.xyz, v1
    mov_pp r2.x, v2.w
    mov_pp r2.y, v3.w
    mov_pp r2.z, v4.w
    dp3_pp r0.w, r2, r2
    rsq_pp r0.w, r0.w
    mad_pp r3.xyz, r2, r0.w, -r1
    mul_pp r2.xyz, r0.w, r2
    dp3_pp r0.w, r3, r3
    add r1.w, -r0.w, c10.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c10.w, r0.w
    mul_pp r3.xyz, r0.w, r3
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r3
    dp3_sat_pp r1.w, r2, r3
    dp3_sat_pp r2.x, r4, r2
    dp3_pp r1.x, r4, -r1
    mov r3.x, c10.x
    add_pp r1.y, r3.x, -c8.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r2.y, r1.z, r1.z
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c10.x
    mad r0.w, r0.w, r0.w, c11.z
    rcp r0.w, r0.w
    mul r2.y, r2.y, c11.y
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.y, -r1.y, c10.x
    mad_pp r2.z, r1_abs.x, r2.y, r1.z
    mad_pp r1.z, r2.x, r2.y, r1.z
    mul_pp r1.z, r1.z, r1_abs.x
    add_pp r1.x, -r1_abs.x, c10.x
    mad r1.z, r2.x, r2.z, r1.z
    add r1.z, r1.z, c11.x
    rcp r1.z, r1.z
    mul_pp r1.z, r1.z, c9.w
    mul r0.w, r0.w, r1.z
    mul_pp r1.z, r0.w, c11.w
    mad r0.w, r0.w, -c12.x, c12.y
    rsq r1.z, r1.z
    rcp_pp r1.z, r1.z
    cmp_pp r0.w, r0.w, c12.z, r1.z
    mul_pp r0.w, r2.x, r0.w
    texld r3, v0, s0
    mov r4.xyz, c9
    mad_pp r2.yzw, c6.xxyz, r3.xxyz, r4.x
    mul_pp r3.xyz, r3, c6
    mad_pp r2.yzw, c7.x, r2, r4.y
    dp3_pp r1.z, r2.yzww, r2.yzww
    cmp r1.z, -r1.z, c10.y, c10.x
    mul_pp r0.w, r0.w, r1.z
    mul_pp r4.xyw, r0.xyzz, r0.w
    add_pp r0.w, -r1.w, c10.x
    mul_pp r1.z, r1.w, r1.w
    dp2add_pp r1.y, r1.z, r1.y, -c9.w
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    lrp_pp r5.xyz, r0.w, c10.x, r2.yzww
    mul_pp r2.yzw, r4.xxyw, r5.xxyz
    mul_pp r0.w, r1.x, r1.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r0.w, r1.y, r0.w, c10.x
    add_pp r1.x, -r2.x, c10.x
    mul_pp r1.z, r1.x, r1.x
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.x, r1.x, r1.z
    mad_pp r1.x, r1.y, r1.x, c10.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c7.x, -r4.z, r4.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp r0.xyz, r1, r0, r2.yzww
    mad_sat r0.w, v6.x, c4.z, c4.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c10.x

// approximately 97 instruction slots used (3 texture, 94 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 103 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 3 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  16: eq r0.w, cb4[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb4[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb4[2].xyzx
  20:   mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  23:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb4[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb4[5].xxyz
  26:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r0.w, r1.w
  29:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r5.xyzw, cb2[45].xyzw
  34: lt r1.w, l(0.000000), r4.z
  35: and r1.w, r1.w, l(0x3f800000)
  36: div r5.xy, r4.xyxx, r4.wwww
  37: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  38: sample r5.xyzw, r5.xyxx, t1.xyzw, s2
  39: mul r1.w, r1.w, r5.w
  40: dp3 r2.w, r4.xyzx, r4.xyzx
  41: sample r4.xyzw, r2.wwww, t2.xyzw, s3
  42: mul r1.w, r1.w, r4.x
  43: mul r0.w, r0.w, r1.w
  44: mov r4.x, v3.w
  45: mov r4.y, v4.w
  46: mov r4.z, v5.w
  47: dp3 r1.w, r4.xyzx, r4.xyzx
  48: rsq r1.w, r1.w
  49: mul r5.xyz, r1.wwww, r4.xyzx
  50: mul r6.xyz, r0.wwww, cb0[2].xyzx
  51: add r0.w, -cb0[8].w, l(1.000000)
  52: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  53: dp3 r1.w, r4.xyzx, r4.xyzx
  54: max r1.w, r1.w, l(0.001000)
  55: rsq r1.w, r1.w
  56: mul r4.xyz, r1.wwww, r4.xyzx
  57: dp3 r1.w, r2.xyzx, -r3.xyzx
  58: dp3_sat r2.w, r2.xyzx, r5.xyzx
  59: dp3_sat r2.x, r2.xyzx, r4.xyzx
  60: dp3_sat r2.y, r5.xyzx, r4.xyzx
  61: mul r2.z, r2.y, r2.y
  62: dp2 r2.z, r2.zzzz, r0.wwww
  63: add r2.z, r2.z, l(-0.500000)
  64: add r3.x, -r2.w, l(1.000000)
  65: mul r3.y, r3.x, r3.x
  66: mul r3.y, r3.y, r3.y
  67: mul r3.x, r3.x, r3.y
  68: mad r3.x, r2.z, r3.x, l(1.000000)
  69: add r3.y, -|r1.w|, l(1.000000)
  70: mul r3.z, r3.y, r3.y
  71: mul r3.z, r3.z, r3.z
  72: mul r3.y, r3.y, r3.z
  73: mad r2.z, r2.z, r3.y, l(1.000000)
  74: mul r2.z, r2.z, r3.x
  75: mul r2.z, r2.w, r2.z
  76: mul r3.x, r0.w, r0.w
  77: mad r0.w, -r0.w, r0.w, l(1.000000)
  78: mad r3.y, |r1.w|, r0.w, r3.x
  79: mad r0.w, r2.w, r0.w, r3.x
  80: mul r0.w, r0.w, |r1.w|
  81: mad r0.w, r2.w, r3.y, r0.w
  82: add r0.w, r0.w, l(0.000010)
  83: div r0.w, l(0.500000), r0.w
  84: mul r1.w, r3.x, r3.x
  85: mad r3.x, r2.x, r1.w, -r2.x
  86: mad r2.x, r3.x, r2.x, l(1.000000)
  87: mul r1.w, r1.w, l(0.318310)
  88: mad r2.x, r2.x, r2.x, l(0.000000)
  89: div r1.w, r1.w, r2.x
  90: mul r0.w, r0.w, r1.w
  91: mul r0.w, r0.w, l(3.141593)
  92: max r0.w, r0.w, l(0.000100)
  93: sqrt r0.w, r0.w
  94: mul r0.w, r2.w, r0.w
  95: dp3 r1.w, r0.xyzx, r0.xyzx
  96: ne r1.w, r1.w, l(0.000000)
  97: and r1.w, r1.w, l(0x3f800000)
  98: mul r0.w, r0.w, r1.w
  99: mul r2.xzw, r2.zzzz, r6.xxyz
 100: mul r3.xyz, r6.xyzx, r0.wwww
 101: add r0.w, -r2.y, l(1.000000)
 102: mul r1.w, r0.w, r0.w
 103: mul r1.w, r1.w, r1.w
 104: mul r0.w, r0.w, r1.w
 105: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 107: mul r0.xyz, r0.xyzx, r3.xyzx
 108: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 109: div r0.w, v7.z, cb1[5].y
 110: add r0.w, -r0.w, l(1.000000)
 111: mul r0.w, r0.w, cb1[5].z
 112: max r0.w, r0.w, l(0.000000)
 113: mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
 114: mul o0.xyz, r0.xyzx, r0.wwww
 115: mov o0.w, l(1.000000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 90 math, 3 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 5
Float _GlossMapScale at 7
Vector4 _LightColor0 at 4
Float _Metallic at 6
Vector4 unity_FogParams at 3

Set 2D Texture "_MainTex" to slot 0
Set CUBE Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_FogParams;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   unity_FogParams    c3       1
//   _LightColor0       c4       1
//   _Color             c5       1
//   _Metallic          c6       1
//   _GlossMapScale     c7       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//   _LightTextureB0    s2       1
//

    ps_3_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 1, 0, 0.00100000005, 31.622776
    def c10, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c11, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    nrm_pp r0.xyz, v1
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    mad_pp r2.xyz, r1, r0.w, -r0
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c9.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c9.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r3, r1
    dp3_pp r0.x, r3, -r0
    texld r2, v0, s0
    mov r3, c8
    mad_pp r0.y, r2.w, -c7.x, r3.w
    mul_pp r0.z, r0.y, r0.y
    mul_pp r1.y, r0.z, r0.z
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c8.w
    mad r0.w, r0.w, r0.w, c11.x
    rcp r0.w, r0.w
    mul r1.y, r1.y, c10.w
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.y, -r0.y, c8.w
    mad_pp r1.z, r1.x, r1.y, r0.z
    mad_pp r0.z, r0_abs.x, r1.y, r0.z
    mul_pp r1.y, r0_abs.x, r1.z
    add_pp r0.x, -r0_abs.x, c8.w
    mad r0.z, r1.x, r0.z, r1.y
    add r0.z, r0.z, c10.y
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c10.z
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c11.y
    mad r0.z, r0.z, -c11.y, c11.z
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c11.w, r0.w
    mul_pp r0.z, r1.x, r0.z
    mad_pp r4.xyz, c5, r2, r3.x
    mul_pp r2.xyz, r2, c5
    mad_pp r3.xyw, c6.x, r4.xyzz, r3.y
    dp3_pp r0.w, r3.xyww, r3.xyww
    cmp r0.w, -r0.w, c9.y, c9.x
    mul_pp r0.z, r0.w, r0.z
    mad r4, v5.xyzx, c9.xxxy, c9.yyyx
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r0.w, r5, r5
    texld r4, r5, s1
    texld r5, r0.w, s2
    mul_pp r0.w, r4.w, r5.x
    mul_pp r4.xyz, r0.w, c4
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.w, c8.w
    mul_pp r0.w, r1.w, r1.w
    dp2add_pp r0.y, r0.w, r0.y, c10.x
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    lrp_pp r1.yzw, r0.z, c8.w, r3.xxyw
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.y, r0.x, c8.w
    add_pp r0.z, -r1.x, c8.w
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.y, r0.y, r0.z, c8.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c6.x, -r3.z, r3.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp r0.xyz, r2, r0, r1.yzww
    mad_sat r0.w, v6.x, c3.z, c3.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c8.w

// approximately 92 instruction slots used (3 texture, 89 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 3 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: eq r1.w, cb4[0].x, l(1.000000)
  17: if_nz r1.w
  18:   eq r1.w, cb4[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb4[2].xyzx
  20:   mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  23:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb4[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb4[5].xxyz
  26:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r1.w, r2.w
  29:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r1.w, r5.xyzw, cb2[45].xyzw
  34: dp3 r2.w, r4.xyzx, r4.xyzx
  35: sample r5.xyzw, r2.wwww, t1.xyzw, s3
  36: sample r4.xyzw, r4.xyzx, t2.xyzw, s2
  37: mul r2.w, r4.w, r5.x
  38: mul r1.w, r1.w, r2.w
  39: mov r4.x, v3.w
  40: mov r4.y, v4.w
  41: mov r4.z, v5.w
  42: dp3 r2.w, r4.xyzx, r4.xyzx
  43: rsq r2.w, r2.w
  44: mul r5.xyz, r2.wwww, r4.xyzx
  45: mul r6.xyz, r1.wwww, cb0[2].xyzx
  46: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  47: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  48: dp3 r1.w, r4.xyzx, r4.xyzx
  49: max r1.w, r1.w, l(0.001000)
  50: rsq r1.w, r1.w
  51: mul r4.xyz, r1.wwww, r4.xyzx
  52: dp3 r1.w, r2.xyzx, -r3.xyzx
  53: dp3_sat r2.w, r2.xyzx, r5.xyzx
  54: dp3_sat r2.x, r2.xyzx, r4.xyzx
  55: dp3_sat r2.y, r5.xyzx, r4.xyzx
  56: mul r2.z, r2.y, r2.y
  57: dp2 r2.z, r2.zzzz, r0.wwww
  58: add r2.z, r2.z, l(-0.500000)
  59: add r3.x, -r2.w, l(1.000000)
  60: mul r3.y, r3.x, r3.x
  61: mul r3.y, r3.y, r3.y
  62: mul r3.x, r3.x, r3.y
  63: mad r3.x, r2.z, r3.x, l(1.000000)
  64: add r3.y, -|r1.w|, l(1.000000)
  65: mul r3.z, r3.y, r3.y
  66: mul r3.z, r3.z, r3.z
  67: mul r3.y, r3.y, r3.z
  68: mad r2.z, r2.z, r3.y, l(1.000000)
  69: mul r2.z, r2.z, r3.x
  70: mul r2.z, r2.w, r2.z
  71: mul r3.x, r0.w, r0.w
  72: mad r0.w, -r0.w, r0.w, l(1.000000)
  73: mad r3.y, |r1.w|, r0.w, r3.x
  74: mad r0.w, r2.w, r0.w, r3.x
  75: mul r0.w, r0.w, |r1.w|
  76: mad r0.w, r2.w, r3.y, r0.w
  77: add r0.w, r0.w, l(0.000010)
  78: div r0.w, l(0.500000), r0.w
  79: mul r1.w, r3.x, r3.x
  80: mad r3.x, r2.x, r1.w, -r2.x
  81: mad r2.x, r3.x, r2.x, l(1.000000)
  82: mul r1.w, r1.w, l(0.318310)
  83: mad r2.x, r2.x, r2.x, l(0.000000)
  84: div r1.w, r1.w, r2.x
  85: mul r0.w, r0.w, r1.w
  86: mul r0.w, r0.w, l(3.141593)
  87: max r0.w, r0.w, l(0.000100)
  88: sqrt r0.w, r0.w
  89: mul r0.w, r2.w, r0.w
  90: dp3 r1.w, r0.xyzx, r0.xyzx
  91: ne r1.w, r1.w, l(0.000000)
  92: and r1.w, r1.w, l(0x3f800000)
  93: mul r0.w, r0.w, r1.w
  94: mul r2.xzw, r2.zzzz, r6.xxyz
  95: mul r3.xyz, r6.xyzx, r0.wwww
  96: add r0.w, -r2.y, l(1.000000)
  97: mul r1.w, r0.w, r0.w
  98: mul r1.w, r1.w, r1.w
  99: mul r0.w, r0.w, r1.w
 100: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 101: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 102: mul r0.xyz, r0.xyzx, r3.xyzx
 103: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 104: div r0.w, v7.z, cb1[5].y
 105: add r0.w, -r0.w, l(1.000000)
 106: mul r0.w, r0.w, cb1[5].z
 107: max r0.w, r0.w, l(0.000000)
 108: mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
 109: mul o0.xyz, r0.xyzx, r0.wwww
 110: mov o0.w, l(1.000000)
 111: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 90 math, 3 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 5
Float _Glossiness at 7
Vector4 _LightColor0 at 4
Float _Metallic at 6
Vector4 unity_FogParams at 3

Set 2D Texture "_MainTex" to slot 0
Set CUBE Texture "_LightTexture0" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_FogParams;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   unity_FogParams    c3       1
//   _LightColor0       c4       1
//   _Color             c5       1
//   _Metallic          c6       1
//   _Glossiness        c7       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//   _LightTextureB0    s2       1
//

    ps_3_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 1, 0, 0.00100000005, 31.622776
    def c10, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c11, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    nrm_pp r0.xyz, v1
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    mad_pp r2.xyz, r1, r0.w, -r0
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c9.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c9.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r3, r1
    dp3_pp r0.x, r3, -r0
    mov r2, c8
    add_pp r0.y, r2.w, -c7.x
    mul_pp r0.z, r0.y, r0.y
    mul_pp r1.y, r0.z, r0.z
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c8.w
    mad r0.w, r0.w, r0.w, c11.x
    rcp r0.w, r0.w
    mul r1.y, r1.y, c10.w
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.y, -r0.y, c8.w
    mad_pp r1.z, r0_abs.x, r1.y, r0.z
    mad_pp r0.z, r1.x, r1.y, r0.z
    mul_pp r0.z, r0.z, r0_abs.x
    add_pp r0.x, -r0_abs.x, c8.w
    mad r0.z, r1.x, r1.z, r0.z
    add r0.z, r0.z, c10.y
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c10.z
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c11.y
    mad r0.z, r0.z, -c11.y, c11.z
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c11.w, r0.w
    mul_pp r0.z, r1.x, r0.z
    texld r3, v0, s0
    mad_pp r4.xyz, c5, r3, r2.x
    mul_pp r3.xyz, r3, c5
    mad_pp r2.xyw, c6.x, r4.xyzz, r2.y
    dp3_pp r0.w, r2.xyww, r2.xyww
    cmp r0.w, -r0.w, c9.y, c9.x
    mul_pp r0.z, r0.w, r0.z
    mad r4, v5.xyzx, c9.xxxy, c9.yyyx
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r0.w, r5, r5
    texld r4, r5, s1
    texld r5, r0.w, s2
    mul_pp r0.w, r4.w, r5.x
    mul_pp r4.xyz, r0.w, c4
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.w, c8.w
    mul_pp r0.w, r1.w, r1.w
    dp2add_pp r0.y, r0.w, r0.y, c10.x
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    lrp_pp r1.yzw, r0.z, c8.w, r2.xxyw
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.y, r0.x, c8.w
    add_pp r0.z, -r1.x, c8.w
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.y, r0.y, r0.z, c8.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c6.x, -r2.z, r2.z
    mul_pp r2.xyz, r0.w, r3
    mad_pp r0.xyz, r2, r0, r1.yzww
    mad_sat r0.w, v6.x, c3.z, c3.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c8.w

// approximately 92 instruction slots used (3 texture, 89 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 3 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: eq r0.w, cb4[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb4[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb4[2].xyzx
  20:   mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  23:   movc r5.xyz, r0.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb4[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb4[5].xxyz
  26:   mad r0.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb4[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r0.w, r1.w
  29:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r5.xyzw, cb2[45].xyzw
  34: dp3 r1.w, r4.xyzx, r4.xyzx
  35: sample r5.xyzw, r1.wwww, t1.xyzw, s3
  36: sample r4.xyzw, r4.xyzx, t2.xyzw, s2
  37: mul r1.w, r4.w, r5.x
  38: mul r0.w, r0.w, r1.w
  39: mov r4.x, v3.w
  40: mov r4.y, v4.w
  41: mov r4.z, v5.w
  42: dp3 r1.w, r4.xyzx, r4.xyzx
  43: rsq r1.w, r1.w
  44: mul r5.xyz, r1.wwww, r4.xyzx
  45: mul r6.xyz, r0.wwww, cb0[2].xyzx
  46: add r0.w, -cb0[8].w, l(1.000000)
  47: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  48: dp3 r1.w, r4.xyzx, r4.xyzx
  49: max r1.w, r1.w, l(0.001000)
  50: rsq r1.w, r1.w
  51: mul r4.xyz, r1.wwww, r4.xyzx
  52: dp3 r1.w, r2.xyzx, -r3.xyzx
  53: dp3_sat r2.w, r2.xyzx, r5.xyzx
  54: dp3_sat r2.x, r2.xyzx, r4.xyzx
  55: dp3_sat r2.y, r5.xyzx, r4.xyzx
  56: mul r2.z, r2.y, r2.y
  57: dp2 r2.z, r2.zzzz, r0.wwww
  58: add r2.z, r2.z, l(-0.500000)
  59: add r3.x, -r2.w, l(1.000000)
  60: mul r3.y, r3.x, r3.x
  61: mul r3.y, r3.y, r3.y
  62: mul r3.x, r3.x, r3.y
  63: mad r3.x, r2.z, r3.x, l(1.000000)
  64: add r3.y, -|r1.w|, l(1.000000)
  65: mul r3.z, r3.y, r3.y
  66: mul r3.z, r3.z, r3.z
  67: mul r3.y, r3.y, r3.z
  68: mad r2.z, r2.z, r3.y, l(1.000000)
  69: mul r2.z, r2.z, r3.x
  70: mul r2.z, r2.w, r2.z
  71: mul r3.x, r0.w, r0.w
  72: mad r0.w, -r0.w, r0.w, l(1.000000)
  73: mad r3.y, |r1.w|, r0.w, r3.x
  74: mad r0.w, r2.w, r0.w, r3.x
  75: mul r0.w, r0.w, |r1.w|
  76: mad r0.w, r2.w, r3.y, r0.w
  77: add r0.w, r0.w, l(0.000010)
  78: div r0.w, l(0.500000), r0.w
  79: mul r1.w, r3.x, r3.x
  80: mad r3.x, r2.x, r1.w, -r2.x
  81: mad r2.x, r3.x, r2.x, l(1.000000)
  82: mul r1.w, r1.w, l(0.318310)
  83: mad r2.x, r2.x, r2.x, l(0.000000)
  84: div r1.w, r1.w, r2.x
  85: mul r0.w, r0.w, r1.w
  86: mul r0.w, r0.w, l(3.141593)
  87: max r0.w, r0.w, l(0.000100)
  88: sqrt r0.w, r0.w
  89: mul r0.w, r2.w, r0.w
  90: dp3 r1.w, r0.xyzx, r0.xyzx
  91: ne r1.w, r1.w, l(0.000000)
  92: and r1.w, r1.w, l(0x3f800000)
  93: mul r0.w, r0.w, r1.w
  94: mul r2.xzw, r2.zzzz, r6.xxyz
  95: mul r3.xyz, r6.xyzx, r0.wwww
  96: add r0.w, -r2.y, l(1.000000)
  97: mul r1.w, r0.w, r0.w
  98: mul r1.w, r1.w, r1.w
  99: mul r0.w, r0.w, r1.w
 100: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 101: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 102: mul r0.xyz, r0.xyzx, r3.xyzx
 103: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 104: div r0.w, v7.z, cb1[5].y
 105: add r0.w, -r0.w, l(1.000000)
 106: mul r0.w, r0.w, cb1[5].z
 107: max r0.w, r0.w, l(0.000000)
 108: mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
 109: mul o0.xyz, r0.xyzx, r0.wwww
 110: mov o0.w, l(1.000000)
 111: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 84 math, 2 textures
Matrix4x2 unity_WorldToLight at 0
Vector4 _Color at 4
Float _GlossMapScale at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5
Vector4 unity_FogParams at 2

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_FogParams;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       2
//   unity_FogParams    c2       1
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _GlossMapScale     c6       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 1, 0, 0.00100000005, 31.622776
    def c9, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c10, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_2d s0
    dcl_2d s1
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r0.yzw, v1.xxyz, -r0.x, r1.xxyz
    mul_pp r2.xyz, r0.x, v1
    dp3_pp r0.x, r0.yzww, r0.yzww
    add r1.w, -r0.x, c8.z
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c8.w, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r0
    dp3_sat_pp r0.x, r1, r0
    dp3_sat_pp r0.y, r3, r1
    dp3_pp r0.z, r3, -r2
    texld r1, v0, s0
    mov r2, c7
    mad_pp r1.w, r1.w, -c6.x, r2.w
    mul_pp r2.w, r1.w, r1.w
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c7.w
    mad r0.w, r0.w, r0.w, c10.x
    rcp r0.w, r0.w
    mul r3.x, r3.x, c9.w
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.w, -r1.w, c7.w
    mad_pp r3.y, r0_abs.z, r3.x, r2.w
    mad_pp r2.w, r0.y, r3.x, r2.w
    mul_pp r2.w, r0_abs.z, r2.w
    add_pp r0.z, -r0_abs.z, c7.w
    mad r2.w, r0.y, r3.y, r2.w
    add r2.w, r2.w, c9.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c9.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c10.y
    mad r0.w, r0.w, -c10.y, c10.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c10.w, r2.w
    mul_pp r0.w, r0.y, r0.w
    mad_pp r3.xyz, c4, r1, r2.x
    mul_pp r1.xyz, r1, c4
    mad_pp r2.xyw, c5.x, r3.xyzz, r2.y
    dp3_pp r3.x, r2.xyww, r2.xyww
    cmp r3.x, -r3.x, c8.y, c8.x
    mul_pp r0.w, r0.w, r3.x
    mad r3, v5.xyzx, c8.xxxy, c8.yyyx
    dp4 r4.x, c0, r3
    dp4 r4.y, c1, r3
    texld_pp r3, r4, s1
    mul_pp r3.xyz, r3.w, c3
    mul_pp r4.xyz, r0.w, r3
    add_pp r0.w, -r0.x, c7.w
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r1.w, c9.x
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c7.w, r2.xyww
    mul_pp r2.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.z, r0.x, r0.z, c7.w
    add_pp r0.w, -r0.y, c7.w
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    mad_pp r0.x, r0.x, r0.w, c7.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r3
    mad_pp r0.w, c5.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.xyz, r1, r0, r2.xyww
    mad_sat r0.w, v6.x, c2.z, c2.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c7.w

// approximately 85 instruction slots used (2 texture, 83 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 3 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: eq r2.w, cb4[0].x, l(1.000000)
  17: if_nz r2.w
  18:   eq r2.w, cb4[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb4[2].xyzx
  20:   mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  23:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb4[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb4[5].xxyz
  26:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r2.w, r3.w
  29:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  34: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  35: mul r2.w, r2.w, r4.w
  36: mul r4.xyz, r2.wwww, cb0[2].xyzx
  37: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  38: mov r5.x, v3.w
  39: mov r5.y, v4.w
  40: mov r5.z, v5.w
  41: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  42: dp3 r1.w, r6.xyzx, r6.xyzx
  43: max r1.w, r1.w, l(0.001000)
  44: rsq r1.w, r1.w
  45: mul r6.xyz, r1.wwww, r6.xyzx
  46: dp3 r1.w, r2.xyzx, -r3.xyzx
  47: dp3_sat r2.w, r2.xyzx, r5.xyzx
  48: dp3_sat r2.x, r2.xyzx, r6.xyzx
  49: dp3_sat r2.y, r5.xyzx, r6.xyzx
  50: mul r2.z, r2.y, r2.y
  51: dp2 r2.z, r2.zzzz, r0.wwww
  52: add r2.z, r2.z, l(-0.500000)
  53: add r3.x, -r2.w, l(1.000000)
  54: mul r3.y, r3.x, r3.x
  55: mul r3.y, r3.y, r3.y
  56: mul r3.x, r3.x, r3.y
  57: mad r3.x, r2.z, r3.x, l(1.000000)
  58: add r3.y, -|r1.w|, l(1.000000)
  59: mul r3.z, r3.y, r3.y
  60: mul r3.z, r3.z, r3.z
  61: mul r3.y, r3.y, r3.z
  62: mad r2.z, r2.z, r3.y, l(1.000000)
  63: mul r2.z, r2.z, r3.x
  64: mul r2.z, r2.w, r2.z
  65: mul r3.x, r0.w, r0.w
  66: mad r0.w, -r0.w, r0.w, l(1.000000)
  67: mad r3.y, |r1.w|, r0.w, r3.x
  68: mad r0.w, r2.w, r0.w, r3.x
  69: mul r0.w, r0.w, |r1.w|
  70: mad r0.w, r2.w, r3.y, r0.w
  71: add r0.w, r0.w, l(0.000010)
  72: div r0.w, l(0.500000), r0.w
  73: mul r1.w, r3.x, r3.x
  74: mad r3.x, r2.x, r1.w, -r2.x
  75: mad r2.x, r3.x, r2.x, l(1.000000)
  76: mul r1.w, r1.w, l(0.318310)
  77: mad r2.x, r2.x, r2.x, l(0.000000)
  78: div r1.w, r1.w, r2.x
  79: mul r0.w, r0.w, r1.w
  80: mul r0.w, r0.w, l(3.141593)
  81: max r0.w, r0.w, l(0.000100)
  82: sqrt r0.w, r0.w
  83: mul r0.w, r2.w, r0.w
  84: dp3 r1.w, r0.xyzx, r0.xyzx
  85: ne r1.w, r1.w, l(0.000000)
  86: and r1.w, r1.w, l(0x3f800000)
  87: mul r0.w, r0.w, r1.w
  88: mul r2.xzw, r2.zzzz, r4.xxyz
  89: mul r3.xyz, r4.xyzx, r0.wwww
  90: add r0.w, -r2.y, l(1.000000)
  91: mul r1.w, r0.w, r0.w
  92: mul r1.w, r1.w, r1.w
  93: mul r0.w, r0.w, r1.w
  94: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  95: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  96: mul r0.xyz, r0.xyzx, r3.xyzx
  97: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  98: div r0.w, v7.z, cb1[5].y
  99: add r0.w, -r0.w, l(1.000000)
 100: mul r0.w, r0.w, cb1[5].z
 101: max r0.w, r0.w, l(0.000000)
 102: mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
 103: mul o0.xyz, r0.xyzx, r0.wwww
 104: mov o0.w, l(1.000000)
 105: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 84 math, 2 textures
Matrix4x2 unity_WorldToLight at 0
Vector4 _Color at 4
Float _Glossiness at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5
Vector4 unity_FogParams at 2

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_FogParams;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       2
//   unity_FogParams    c2       1
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _Glossiness        c6       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 1, 0, 0.00100000005, 31.622776
    def c9, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c10, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_2d s0
    dcl_2d s1
    dp3_pp r0.x, v1, v1
    rsq_pp r0.x, r0.x
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r0.yzw, v1.xxyz, -r0.x, r1.xxyz
    mul_pp r2.xyz, r0.x, v1
    dp3_pp r0.x, r0.yzww, r0.yzww
    add r1.w, -r0.x, c8.z
    rsq_pp r0.x, r0.x
    cmp_pp r0.x, r1.w, c8.w, r0.x
    mul_pp r0.xyz, r0.x, r0.yzww
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r0
    dp3_sat_pp r0.x, r1, r0
    dp3_sat_pp r0.y, r3, r1
    dp3_pp r0.z, r3, -r2
    mov r1, c7
    add_pp r1.w, r1.w, -c6.x
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c7.w
    mad r0.w, r0.w, r0.w, c10.x
    rcp r0.w, r0.w
    mul r2.y, r2.y, c9.w
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.w, -r1.w, c7.w
    mad_pp r2.z, r0_abs.z, r2.y, r2.x
    mad_pp r2.x, r0.y, r2.y, r2.x
    mul_pp r2.x, r0_abs.z, r2.x
    add_pp r0.z, -r0_abs.z, c7.w
    mad r2.x, r0.y, r2.z, r2.x
    add r2.x, r2.x, c9.y
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, c9.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c10.y
    mad r0.w, r0.w, -c10.y, c10.z
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c10.w, r2.x
    mul_pp r0.w, r0.y, r0.w
    texld r2, v0, s0
    mad_pp r3.xyz, c4, r2, r1.x
    mul_pp r2.xyz, r2, c4
    mad_pp r3.xyz, c5.x, r3, r1.y
    dp3_pp r1.x, r3, r3
    cmp r1.x, -r1.x, c8.y, c8.x
    mul_pp r0.w, r0.w, r1.x
    mad r4, v5.xyzx, c8.xxxy, c8.yyyx
    dp4 r1.x, c0, r4
    dp4 r1.y, c1, r4
    texld_pp r4, r1, s1
    mul_pp r4.xyz, r4.w, c3
    mul_pp r5.xyz, r0.w, r4
    add_pp r0.w, -r0.x, c7.w
    mul_pp r0.x, r0.x, r0.x
    dp2add_pp r0.x, r0.x, r1.w, c9.x
    mul_pp r1.x, r0.w, r0.w
    mul_pp r1.x, r1.x, r1.x
    mul_pp r0.w, r0.w, r1.x
    lrp_pp r1.xyw, r0.w, c7.w, r3.xyzz
    mul_pp r1.xyw, r1, r5.xyzz
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.z, r0.x, r0.z, c7.w
    add_pp r0.w, -r0.y, c7.w
    mul_pp r2.w, r0.w, r0.w
    mul_pp r2.w, r2.w, r2.w
    mul_pp r0.w, r0.w, r2.w
    mad_pp r0.x, r0.x, r0.w, c7.w
    mul_pp r0.x, r0.z, r0.x
    mul_pp r0.x, r0.y, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c5.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp r0.xyz, r2, r0, r1.xyww
    mad_sat r0.w, v6.x, c2.z, c2.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c7.w

// approximately 85 instruction slots used (2 texture, 83 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 3 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: eq r1.w, cb4[0].x, l(1.000000)
  17: if_nz r1.w
  18:   eq r1.w, cb4[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb4[2].xyzx
  20:   mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  23:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb4[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb4[5].xxyz
  26:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r1.w, r2.w
  29:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r1.w, r5.xyzw, cb2[45].xyzw
  34: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  35: mul r1.w, r1.w, r4.w
  36: mul r4.xyz, r1.wwww, cb0[2].xyzx
  37: add r1.w, -cb0[8].w, l(1.000000)
  38: mov r5.x, v3.w
  39: mov r5.y, v4.w
  40: mov r5.z, v5.w
  41: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  42: dp3 r0.w, r6.xyzx, r6.xyzx
  43: max r0.w, r0.w, l(0.001000)
  44: rsq r0.w, r0.w
  45: mul r6.xyz, r0.wwww, r6.xyzx
  46: dp3 r0.w, r2.xyzx, -r3.xyzx
  47: dp3_sat r2.w, r2.xyzx, r5.xyzx
  48: dp3_sat r2.x, r2.xyzx, r6.xyzx
  49: dp3_sat r2.y, r5.xyzx, r6.xyzx
  50: mul r2.z, r2.y, r2.y
  51: dp2 r2.z, r2.zzzz, r1.wwww
  52: add r2.z, r2.z, l(-0.500000)
  53: add r3.x, -r2.w, l(1.000000)
  54: mul r3.y, r3.x, r3.x
  55: mul r3.y, r3.y, r3.y
  56: mul r3.x, r3.x, r3.y
  57: mad r3.x, r2.z, r3.x, l(1.000000)
  58: add r3.y, -|r0.w|, l(1.000000)
  59: mul r3.z, r3.y, r3.y
  60: mul r3.z, r3.z, r3.z
  61: mul r3.y, r3.y, r3.z
  62: mad r2.z, r2.z, r3.y, l(1.000000)
  63: mul r2.z, r2.z, r3.x
  64: mul r2.z, r2.w, r2.z
  65: mul r3.x, r1.w, r1.w
  66: mad r1.w, -r1.w, r1.w, l(1.000000)
  67: mad r3.y, |r0.w|, r1.w, r3.x
  68: mad r1.w, r2.w, r1.w, r3.x
  69: mul r0.w, |r0.w|, r1.w
  70: mad r0.w, r2.w, r3.y, r0.w
  71: add r0.w, r0.w, l(0.000010)
  72: div r0.w, l(0.500000), r0.w
  73: mul r1.w, r3.x, r3.x
  74: mad r3.x, r2.x, r1.w, -r2.x
  75: mad r2.x, r3.x, r2.x, l(1.000000)
  76: mul r1.w, r1.w, l(0.318310)
  77: mad r2.x, r2.x, r2.x, l(0.000000)
  78: div r1.w, r1.w, r2.x
  79: mul r0.w, r0.w, r1.w
  80: mul r0.w, r0.w, l(3.141593)
  81: max r0.w, r0.w, l(0.000100)
  82: sqrt r0.w, r0.w
  83: mul r0.w, r2.w, r0.w
  84: dp3 r1.w, r0.xyzx, r0.xyzx
  85: ne r1.w, r1.w, l(0.000000)
  86: and r1.w, r1.w, l(0x3f800000)
  87: mul r0.w, r0.w, r1.w
  88: mul r2.xzw, r2.zzzz, r4.xxyz
  89: mul r3.xyz, r4.xyzx, r0.wwww
  90: add r0.w, -r2.y, l(1.000000)
  91: mul r1.w, r0.w, r0.w
  92: mul r1.w, r1.w, r1.w
  93: mul r0.w, r0.w, r1.w
  94: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  95: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  96: mul r0.xyz, r0.xyzx, r3.xyzx
  97: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  98: div r0.w, v7.z, cb1[5].y
  99: add r0.w, -r0.w, l(1.000000)
 100: mul r0.w, r0.w, cb1[5].z
 101: max r0.w, r0.w, l(0.000000)
 102: mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
 103: mul o0.xyz, r0.xyzx, r0.wwww
 104: mov o0.w, l(1.000000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 111 math, 4 textures
Matrix4x3 unity_MatrixV at 8
Matrix4x4 unity_WorldToLight at 4
Matrix4x4 unity_WorldToShadow at 0
Vector4 _Color at 16
Float _GlossMapScale at 18
Vector4 _LightColor0 at 15
Vector4 _LightShadowData at 12
Float _Metallic at 17
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_FogParams at 14
Vector4 unity_ShadowFadeCenterAndType at 13

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_WorldToShadow           c0       4
//   unity_WorldToLight            c4       4
//   unity_MatrixV                 c8       3
//   _WorldSpaceCameraPos          c11      1
//   _LightShadowData              c12      1
//   unity_ShadowFadeCenterAndType c13      1
//   unity_FogParams               c14      1
//   _LightColor0                  c15      1
//   _Color                        c16      1
//   _Metallic                     c17      1
//   _GlossMapScale                c18      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c19, -0.220916301, 0.220916301, 0.779083729, 1
    def c20, 1, 0, 0.5, 0.00100000005
    def c21, 31.622776, 9.99999975e-006, 0.318309873, 1.00000001e-007
    def c22, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    add r0.xyz, -c13, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c11.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c10
    lrp r1.x, c13.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c12.z, c12.w
    mov r1, c19
    mad r2, v5.xyzx, c20.xxxy, c20.yyyx
    dp4 r3.x, c0, r2
    dp4 r3.y, c1, r2
    dp4 r3.z, c2, r2
    dp4 r3.w, c3, r2
    texldp_pp r3, r3, s0
    lrp_pp r0.y, r3.x, r1.w, c12.x
    add_sat_pp r0.x, r0.x, r0.y
    dp4 r0.y, c7, r2
    rcp r0.y, r0.y
    dp4 r3.x, c4, r2
    dp4 r3.y, c5, r2
    dp4 r3.z, c6, r2
    mad r0.yz, r3.xxyw, r0.y, c20.z
    dp3 r0.w, r3, r3
    texld_pp r2, r0.w, s3
    texld_pp r4, r0.yzzw, s2
    mul r0.y, r2.x, r4.w
    mul r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c15
    cmp_pp r0.xyz, -r3.z, c20.y, r0
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r4.xyz, r3, r0.w, -r2
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r4, r4
    add r2.w, -r0.w, c20.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c21.x, r0.w
    mul_pp r4.xyz, r0.w, r4
    nrm_pp r5.xyz, v4
    dp3_sat_pp r0.w, r5, r4
    dp3_sat_pp r2.w, r3, r4
    dp3_sat_pp r3.x, r5, r3
    dp3_pp r2.x, r5, -r2
    texld r4, v0, s1
    mad_pp r1.w, r4.w, -c18.x, r1.w
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.z, r2.y, r2.y
    mad_pp r3.y, r0.w, r2.z, -r0.w
    mad_pp r0.w, r3.y, r0.w, c19.w
    mad r0.w, r0.w, r0.w, c21.w
    rcp r0.w, r0.w
    mul r2.z, r2.z, c21.z
    mul_pp r0.w, r0.w, r2.z
    mad_pp r2.z, r1.w, -r1.w, c19.w
    mad_pp r3.y, r3.x, r2.z, r2.y
    mad_pp r2.y, r2_abs.x, r2.z, r2.y
    mul_pp r2.z, r2_abs.x, r3.y
    add_pp r2.x, -r2_abs.x, c19.w
    mad r2.y, r3.x, r2.y, r2.z
    add r2.y, r2.y, c21.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, c20.z
    mul r0.w, r0.w, r2.y
    mul_pp r2.y, r0.w, c22.x
    mad r0.w, r0.w, -c22.x, c22.y
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r0.w, r0.w, c22.z, r2.y
    mul_pp r0.w, r3.x, r0.w
    mad_pp r3.yzw, c16.xxyz, r4.xxyz, r1.x
    mul_pp r4.xyz, r4, c16
    mad_pp r3.yzw, c17.x, r3, r1.y
    dp3_pp r1.x, r3.yzww, r3.yzww
    cmp r1.x, -r1.x, c20.y, c20.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r5.xyz, r0, r0.w
    add_pp r0.w, -r2.w, c19.w
    mul_pp r1.x, r2.w, r2.w
    dp2add_pp r1.x, r1.x, r1.w, -c20.z
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r2.yzw, r0.w, c19.w, r3
    mul_pp r2.yzw, r2, r5.xxyz
    mul_pp r0.w, r2.x, r2.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r2.x, r0.w
    mad_pp r0.w, r1.x, r0.w, c19.w
    add_pp r1.y, -r3.x, c19.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c19.w
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r3.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c17.x, -r1.z, r1.z
    mul_pp r1.xyz, r0.w, r4
    mad_pp r0.xyz, r1, r0, r2.yzww
    mad_sat r0.w, v6.x, c14.z, c14.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c19.w

// approximately 112 instruction slots used (4 texture, 108 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 120 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb6[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r5.y
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  46: mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  47: mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  48: add r5.xyzw, r5.xyzw, cb3[11].xyzw
  49: div r5.xyz, r5.xyzx, r5.wwww
  50: sample_c_lz r5.x, r5.xyxx, t4.xxxx, s1, r5.z
  51: add r5.y, -cb3[24].x, l(1.000000)
  52: mad r5.x, r5.x, r5.y, cb3[24].x
  53: add_sat r1.w, r1.w, r5.x
  54: min r3.w, r1.w, r3.w
  55: movc r1.w, r2.w, r3.w, r1.w
  56: lt r2.w, l(0.000000), r4.z
  57: and r2.w, r2.w, l(0x3f800000)
  58: div r5.xy, r4.xyxx, r4.wwww
  59: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  60: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
  61: mul r2.w, r2.w, r5.w
  62: dp3 r3.w, r4.xyzx, r4.xyzx
  63: sample r4.xyzw, r3.wwww, t2.xyzw, s4
  64: mul r2.w, r2.w, r4.x
  65: mul r1.w, r1.w, r2.w
  66: mov r4.x, v3.w
  67: mov r4.y, v4.w
  68: mov r4.z, v5.w
  69: dp3 r2.w, r4.xyzx, r4.xyzx
  70: rsq r2.w, r2.w
  71: mul r5.xyz, r2.wwww, r4.xyzx
  72: mul r6.xyz, r1.wwww, cb0[2].xyzx
  73: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  74: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  75: dp3 r1.w, r4.xyzx, r4.xyzx
  76: max r1.w, r1.w, l(0.001000)
  77: rsq r1.w, r1.w
  78: mul r4.xyz, r1.wwww, r4.xyzx
  79: dp3 r1.w, r2.xyzx, -r3.xyzx
  80: dp3_sat r2.w, r2.xyzx, r5.xyzx
  81: dp3_sat r2.x, r2.xyzx, r4.xyzx
  82: dp3_sat r2.y, r5.xyzx, r4.xyzx
  83: mul r2.z, r2.y, r2.y
  84: dp2 r2.z, r2.zzzz, r0.wwww
  85: add r2.z, r2.z, l(-0.500000)
  86: add r3.x, -r2.w, l(1.000000)
  87: mul r3.y, r3.x, r3.x
  88: mul r3.y, r3.y, r3.y
  89: mul r3.x, r3.x, r3.y
  90: mad r3.x, r2.z, r3.x, l(1.000000)
  91: add r3.y, -|r1.w|, l(1.000000)
  92: mul r3.z, r3.y, r3.y
  93: mul r3.z, r3.z, r3.z
  94: mul r3.y, r3.y, r3.z
  95: mad r2.z, r2.z, r3.y, l(1.000000)
  96: mul r2.z, r2.z, r3.x
  97: mul r2.z, r2.w, r2.z
  98: mul r3.x, r0.w, r0.w
  99: mad r0.w, -r0.w, r0.w, l(1.000000)
 100: mad r3.y, |r1.w|, r0.w, r3.x
 101: mad r0.w, r2.w, r0.w, r3.x
 102: mul r0.w, r0.w, |r1.w|
 103: mad r0.w, r2.w, r3.y, r0.w
 104: add r0.w, r0.w, l(0.000010)
 105: div r0.w, l(0.500000), r0.w
 106: mul r1.w, r3.x, r3.x
 107: mad r3.x, r2.x, r1.w, -r2.x
 108: mad r2.x, r3.x, r2.x, l(1.000000)
 109: mul r1.w, r1.w, l(0.318310)
 110: mad r2.x, r2.x, r2.x, l(0.000000)
 111: div r1.w, r1.w, r2.x
 112: mul r0.w, r0.w, r1.w
 113: mul r0.w, r0.w, l(3.141593)
 114: max r0.w, r0.w, l(0.000100)
 115: sqrt r0.w, r0.w
 116: mul r0.w, r2.w, r0.w
 117: dp3 r1.w, r0.xyzx, r0.xyzx
 118: ne r1.w, r1.w, l(0.000000)
 119: and r1.w, r1.w, l(0x3f800000)
 120: mul r0.w, r0.w, r1.w
 121: mul r2.xzw, r2.zzzz, r6.xxyz
 122: mul r3.xyz, r6.xyzx, r0.wwww
 123: add r0.w, -r2.y, l(1.000000)
 124: mul r1.w, r0.w, r0.w
 125: mul r1.w, r1.w, r1.w
 126: mul r0.w, r0.w, r1.w
 127: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 128: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 129: mul r0.xyz, r0.xyzx, r3.xyzx
 130: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 131: div r0.w, v7.z, cb1[5].y
 132: add r0.w, -r0.w, l(1.000000)
 133: mul r0.w, r0.w, cb1[5].z
 134: max r0.w, r0.w, l(0.000000)
 135: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 136: mul o0.xyz, r0.xyzx, r0.wwww
 137: mov o0.w, l(1.000000)
 138: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 111 math, 4 textures
Matrix4x3 unity_MatrixV at 8
Matrix4x4 unity_WorldToLight at 4
Matrix4x4 unity_WorldToShadow at 0
Vector4 _Color at 16
Float _Glossiness at 18
Vector4 _LightColor0 at 15
Vector4 _LightShadowData at 12
Float _Metallic at 17
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_FogParams at 14
Vector4 unity_ShadowFadeCenterAndType at 13

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_WorldToShadow           c0       4
//   unity_WorldToLight            c4       4
//   unity_MatrixV                 c8       3
//   _WorldSpaceCameraPos          c11      1
//   _LightShadowData              c12      1
//   unity_ShadowFadeCenterAndType c13      1
//   unity_FogParams               c14      1
//   _LightColor0                  c15      1
//   _Color                        c16      1
//   _Metallic                     c17      1
//   _Glossiness                   c18      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c19, -0.220916301, 0.220916301, 0.779083729, 1
    def c20, 1, 0, 0.5, 0.00100000005
    def c21, 31.622776, 9.99999975e-006, 0.318309873, 1.00000001e-007
    def c22, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    add r0.xyz, -c13, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c11.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c10
    lrp r1.x, c13.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c12.z, c12.w
    mov r1, c19
    mad r2, v5.xyzx, c20.xxxy, c20.yyyx
    dp4 r3.x, c0, r2
    dp4 r3.y, c1, r2
    dp4 r3.z, c2, r2
    dp4 r3.w, c3, r2
    texldp_pp r3, r3, s0
    lrp_pp r0.y, r3.x, r1.w, c12.x
    add_sat_pp r0.x, r0.x, r0.y
    dp4 r0.y, c7, r2
    rcp r0.y, r0.y
    dp4 r3.x, c4, r2
    dp4 r3.y, c5, r2
    dp4 r3.z, c6, r2
    mad r0.yz, r3.xxyw, r0.y, c20.z
    dp3 r0.w, r3, r3
    texld_pp r2, r0.w, s3
    texld_pp r4, r0.yzzw, s2
    mul r0.y, r2.x, r4.w
    mul r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c15
    cmp_pp r0.xyz, -r3.z, c20.y, r0
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r4.xyz, r3, r0.w, -r2
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r4, r4
    add r2.w, -r0.w, c20.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c21.x, r0.w
    mul_pp r4.xyz, r0.w, r4
    nrm_pp r5.xyz, v4
    dp3_sat_pp r0.w, r5, r4
    dp3_sat_pp r2.w, r3, r4
    dp3_sat_pp r3.x, r5, r3
    dp3_pp r2.x, r5, -r2
    add_pp r1.w, r1.w, -c18.x
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.z, r2.y, r2.y
    mad_pp r3.y, r0.w, r2.z, -r0.w
    mad_pp r0.w, r3.y, r0.w, c19.w
    mad r0.w, r0.w, r0.w, c21.w
    rcp r0.w, r0.w
    mul r2.z, r2.z, c21.z
    mul_pp r0.w, r0.w, r2.z
    mad_pp r2.z, r1.w, -r1.w, c19.w
    mad_pp r3.y, r2_abs.x, r2.z, r2.y
    mad_pp r2.y, r3.x, r2.z, r2.y
    mul_pp r2.y, r2.y, r2_abs.x
    add_pp r2.x, -r2_abs.x, c19.w
    mad r2.y, r3.x, r3.y, r2.y
    add r2.y, r2.y, c21.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, c20.z
    mul r0.w, r0.w, r2.y
    mul_pp r2.y, r0.w, c22.x
    mad r0.w, r0.w, -c22.x, c22.y
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r0.w, r0.w, c22.z, r2.y
    mul_pp r0.w, r3.x, r0.w
    texld r4, v0, s1
    mad_pp r3.yzw, c16.xxyz, r4.xxyz, r1.x
    mul_pp r4.xyz, r4, c16
    mad_pp r3.yzw, c17.x, r3, r1.y
    dp3_pp r1.x, r3.yzww, r3.yzww
    cmp r1.x, -r1.x, c20.y, c20.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r5.xyz, r0, r0.w
    add_pp r0.w, -r2.w, c19.w
    mul_pp r1.x, r2.w, r2.w
    dp2add_pp r1.x, r1.x, r1.w, -c20.z
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r2.yzw, r0.w, c19.w, r3
    mul_pp r2.yzw, r2, r5.xxyz
    mul_pp r0.w, r2.x, r2.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r2.x, r0.w
    mad_pp r0.w, r1.x, r0.w, c19.w
    add_pp r1.y, -r3.x, c19.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c19.w
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r3.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c17.x, -r1.z, r1.z
    mul_pp r1.xyz, r0.w, r4
    mad_pp r0.xyz, r1, r0, r2.yzww
    mad_sat r0.w, v6.x, c14.z, c14.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c19.w

// approximately 112 instruction slots used (4 texture, 108 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 120 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb6[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  45: mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  46: mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  47: mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  48: add r5.xyzw, r5.xyzw, cb3[11].xyzw
  49: div r5.xyz, r5.xyzx, r5.wwww
  50: sample_c_lz r3.w, r5.xyxx, t4.xxxx, s1, r5.z
  51: add r5.x, -cb3[24].x, l(1.000000)
  52: mad r3.w, r3.w, r5.x, cb3[24].x
  53: add_sat r0.w, r0.w, r3.w
  54: min r2.w, r0.w, r2.w
  55: movc r0.w, r1.w, r2.w, r0.w
  56: lt r1.w, l(0.000000), r4.z
  57: and r1.w, r1.w, l(0x3f800000)
  58: div r5.xy, r4.xyxx, r4.wwww
  59: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  60: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
  61: mul r1.w, r1.w, r5.w
  62: dp3 r2.w, r4.xyzx, r4.xyzx
  63: sample r4.xyzw, r2.wwww, t2.xyzw, s4
  64: mul r1.w, r1.w, r4.x
  65: mul r0.w, r0.w, r1.w
  66: mov r4.x, v3.w
  67: mov r4.y, v4.w
  68: mov r4.z, v5.w
  69: dp3 r1.w, r4.xyzx, r4.xyzx
  70: rsq r1.w, r1.w
  71: mul r5.xyz, r1.wwww, r4.xyzx
  72: mul r6.xyz, r0.wwww, cb0[2].xyzx
  73: add r0.w, -cb0[8].w, l(1.000000)
  74: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  75: dp3 r1.w, r4.xyzx, r4.xyzx
  76: max r1.w, r1.w, l(0.001000)
  77: rsq r1.w, r1.w
  78: mul r4.xyz, r1.wwww, r4.xyzx
  79: dp3 r1.w, r2.xyzx, -r3.xyzx
  80: dp3_sat r2.w, r2.xyzx, r5.xyzx
  81: dp3_sat r2.x, r2.xyzx, r4.xyzx
  82: dp3_sat r2.y, r5.xyzx, r4.xyzx
  83: mul r2.z, r2.y, r2.y
  84: dp2 r2.z, r2.zzzz, r0.wwww
  85: add r2.z, r2.z, l(-0.500000)
  86: add r3.x, -r2.w, l(1.000000)
  87: mul r3.y, r3.x, r3.x
  88: mul r3.y, r3.y, r3.y
  89: mul r3.x, r3.x, r3.y
  90: mad r3.x, r2.z, r3.x, l(1.000000)
  91: add r3.y, -|r1.w|, l(1.000000)
  92: mul r3.z, r3.y, r3.y
  93: mul r3.z, r3.z, r3.z
  94: mul r3.y, r3.y, r3.z
  95: mad r2.z, r2.z, r3.y, l(1.000000)
  96: mul r2.z, r2.z, r3.x
  97: mul r2.z, r2.w, r2.z
  98: mul r3.x, r0.w, r0.w
  99: mad r0.w, -r0.w, r0.w, l(1.000000)
 100: mad r3.y, |r1.w|, r0.w, r3.x
 101: mad r0.w, r2.w, r0.w, r3.x
 102: mul r0.w, r0.w, |r1.w|
 103: mad r0.w, r2.w, r3.y, r0.w
 104: add r0.w, r0.w, l(0.000010)
 105: div r0.w, l(0.500000), r0.w
 106: mul r1.w, r3.x, r3.x
 107: mad r3.x, r2.x, r1.w, -r2.x
 108: mad r2.x, r3.x, r2.x, l(1.000000)
 109: mul r1.w, r1.w, l(0.318310)
 110: mad r2.x, r2.x, r2.x, l(0.000000)
 111: div r1.w, r1.w, r2.x
 112: mul r0.w, r0.w, r1.w
 113: mul r0.w, r0.w, l(3.141593)
 114: max r0.w, r0.w, l(0.000100)
 115: sqrt r0.w, r0.w
 116: mul r0.w, r2.w, r0.w
 117: dp3 r1.w, r0.xyzx, r0.xyzx
 118: ne r1.w, r1.w, l(0.000000)
 119: and r1.w, r1.w, l(0x3f800000)
 120: mul r0.w, r0.w, r1.w
 121: mul r2.xzw, r2.zzzz, r6.xxyz
 122: mul r3.xyz, r6.xyzx, r0.wwww
 123: add r0.w, -r2.y, l(1.000000)
 124: mul r1.w, r0.w, r0.w
 125: mul r1.w, r1.w, r1.w
 126: mul r0.w, r0.w, r1.w
 127: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 128: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 129: mul r0.xyz, r0.xyzx, r3.xyzx
 130: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 131: div r0.w, v7.z, cb1[5].y
 132: add r0.w, -r0.w, l(1.000000)
 133: mul r0.w, r0.w, cb1[5].z
 134: max r0.w, r0.w, l(0.000000)
 135: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 136: mul o0.xyz, r0.xyzx, r0.wwww
 137: mov o0.w, l(1.000000)
 138: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH SHADOWS_SOFT FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 121 math, 7 textures
Matrix4x3 unity_MatrixV at 12
Matrix4x4 unity_WorldToLight at 8
Matrix4x4 unity_WorldToShadow at 0
Vector4 _Color at 20
Float _GlossMapScale at 22
Vector4 _LightColor0 at 19
Vector4 _LightShadowData at 16
Float _Metallic at 21
Vector4 _ShadowOffsets[4] at 4
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_FogParams at 18
Vector4 unity_ShadowFadeCenterAndType at 17

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 _ShadowOffsets[4];
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_WorldToShadow           c0       4
//   _ShadowOffsets                c4       4
//   unity_WorldToLight            c8       4
//   unity_MatrixV                 c12      3
//   _WorldSpaceCameraPos          c15      1
//   _LightShadowData              c16      1
//   unity_ShadowFadeCenterAndType c17      1
//   unity_FogParams               c18      1
//   _LightColor0                  c19      1
//   _Color                        c20      1
//   _Metallic                     c21      1
//   _GlossMapScale                c22      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c23, -0.220916301, 0.220916301, 0.779083729, 0.25
    def c24, 1, 0, 0.5, 0.00100000005
    def c25, 31.622776, 9.99999975e-006, 0.318309873, 1.00000001e-007
    def c26, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    add r0.xyz, -c17, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c15.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c14
    lrp r1.x, c17.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c16.z, c16.w
    mad r1, v5.xyzx, c24.xxxy, c24.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    rcp r0.y, r2.w
    mad r3, r2, r0.y, c4
    texldp_pp r3, r3, s0
    mad r4, r2, r0.y, c5
    texldp_pp r4, r4, s0
    mov_pp r3.y, r4.x
    mad r4, r2, r0.y, c6
    mad r2, r2, r0.y, c7
    texldp_pp r2, r2, s0
    mov_pp r3.w, r2.x
    texldp_pp r2, r4, s0
    mov_pp r3.z, r2.x
    dp4_pp r0.y, r3, c23.w
    mov r2.x, c24.x
    lrp_pp r3.x, r0.y, r2.x, c16.x
    add_sat_pp r0.x, r0.x, r3.x
    dp4 r0.y, c11, r1
    rcp r0.y, r0.y
    dp4 r3.x, c8, r1
    dp4 r3.y, c9, r1
    dp4 r3.z, c10, r1
    mad r0.yz, r3.xxyw, r0.y, c24.z
    dp3 r0.w, r3, r3
    texld_pp r1, r0.w, s3
    texld_pp r4, r0.yzzw, s2
    mul r0.y, r1.x, r4.w
    mul r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c19
    cmp_pp r0.xyz, -r3.z, c24.y, r0
    nrm_pp r1.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r2.yzw, r3.xxyz, r0.w, -r1.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r2.yzww, r2.yzww
    add r1.w, -r0.w, c24.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c25.x, r0.w
    mul_pp r2.yzw, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2.yzww
    dp3_sat_pp r1.w, r3, r2.yzww
    dp3_sat_pp r2.y, r4, r3
    dp3_pp r1.x, r4, -r1
    texld r3, v0, s1
    mad_pp r1.y, r3.w, -c22.x, r2.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r2.x, r1.z, r1.z
    mad_pp r2.z, r0.w, r2.x, -r0.w
    mad_pp r0.w, r2.z, r0.w, c24.x
    mad r0.w, r0.w, r0.w, c25.w
    rcp r0.w, r0.w
    mul r2.x, r2.x, c25.z
    mul_pp r0.w, r0.w, r2.x
    mad_pp r2.x, r1.y, -r1.y, c24.x
    mad_pp r2.z, r2.y, r2.x, r1.z
    mad_pp r1.z, r1_abs.x, r2.x, r1.z
    mul_pp r2.x, r1_abs.x, r2.z
    add_pp r1.x, -r1_abs.x, c24.x
    mad r1.z, r2.y, r1.z, r2.x
    add r1.z, r1.z, c25.y
    rcp r1.z, r1.z
    mul_pp r1.z, r1.z, c24.z
    mul r0.w, r0.w, r1.z
    mul_pp r1.z, r0.w, c26.x
    mad r0.w, r0.w, -c26.x, c26.y
    rsq r1.z, r1.z
    rcp_pp r1.z, r1.z
    cmp_pp r0.w, r0.w, c26.z, r1.z
    mul_pp r0.w, r2.y, r0.w
    mov r4.xyz, c23
    mad_pp r2.xzw, c20.xyyz, r3.xyyz, r4.x
    mul_pp r3.xyz, r3, c20
    mad_pp r2.xzw, c21.x, r2, r4.y
    dp3_pp r1.z, r2.xzww, r2.xzww
    cmp r1.z, -r1.z, c24.y, c24.x
    mul_pp r0.w, r0.w, r1.z
    mul_pp r4.xyw, r0.xyzz, r0.w
    add_pp r0.w, -r1.w, c24.x
    mul_pp r1.z, r1.w, r1.w
    dp2add_pp r1.y, r1.z, r1.y, -c24.z
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    lrp_pp r5.xyz, r0.w, c24.x, r2.xzww
    mul_pp r2.xzw, r4.xyyw, r5.xyyz
    mul_pp r0.w, r1.x, r1.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r0.w, r1.y, r0.w, c24.x
    add_pp r1.x, -r2.y, c24.x
    mul_pp r1.z, r1.x, r1.x
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.x, r1.x, r1.z
    mad_pp r1.x, r1.y, r1.x, c24.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.y, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c21.x, -r4.z, r4.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp r0.xyz, r1, r0, r2.xzww
    mad_sat r0.w, v6.x, c18.z, c18.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c24.x

// approximately 125 instruction slots used (7 texture, 118 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[14].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[12].xxxy, cb0[12].zzzw
  13: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 149 math, 11 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _Metallic at 216
  Float _GlossMapScale at 224
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 11
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[9].xyzx
   2: mad r0.xyz, cb0[9].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[13].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[13].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  13: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb6[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r5.y
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: lt r5.x, r1.w, l(0.990000)
  46: if_nz r5.x
  47:   mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  48:   mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  49:   mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  50:   add r5.xyzw, r5.xyzw, cb3[11].xyzw
  51:   div r5.xyz, r5.xyzx, r5.wwww
  52:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  53:   round_ni r6.xy, r6.xyxx
  54:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  55:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  56:   mul r8.xw, r7.xxxz, r7.xxxz
  57:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  58:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  59:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  61:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  63:   mov r9.x, r6.z
  64:   mov r9.y, r7.x
  65:   mov r9.z, r5.x
  66:   mov r9.w, r8.x
  67:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  68:   mov r8.x, r6.w
  69:   mov r8.y, r7.z
  70:   mov r8.z, r5.y
  71:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  72:   add r8.xyzw, r9.ywyw, r9.xzxz
  73:   add r10.xyzw, r7.yyww, r7.xxzz
  74:   div r5.xy, r9.ywyy, r8.zwzz
  75:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  76:   div r6.zw, r7.yyyw, r10.yyyw
  77:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  78:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  79:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  80:   mul r8.xyzw, r8.xyzw, r10.xyzw
  81:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  82:   sample_c_lz r5.x, r9.xyxx, t4.xxxx, s1, r5.z
  83:   sample_c_lz r5.y, r9.zwzz, t4.xxxx, s1, r5.z
  84:   mul r5.y, r5.y, r8.y
  85:   mad r5.x, r8.x, r5.x, r5.y
  86:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
  87:   sample_c_lz r5.y, r6.xyxx, t4.xxxx, s1, r5.z
  88:   mad r5.x, r8.z, r5.y, r5.x
  89:   sample_c_lz r5.y, r6.zwzz, t4.xxxx, s1, r5.z
  90:   mad r5.x, r8.w, r5.y, r5.x
  91:   add r5.y, -cb3[24].x, l(1.000000)
  92:   mad r5.x, r5.x, r5.y, cb3[24].x
  93: else 
  94:   mov r5.x, l(1.000000)
  95: endif 
  96: add_sat r1.w, r1.w, r5.x
  97: min r3.w, r1.w, r3.w
  98: movc r1.w, r2.w, r3.w, r1.w
  99: lt r2.w, l(0.000000), r4.z
 100: and r2.w, r2.w, l(0x3f800000)
 101: div r5.xy, r4.xyxx, r4.wwww
 102: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 103: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
 104: mul r2.w, r2.w, r5.w
 105: dp3 r3.w, r4.xyzx, r4.xyzx
 106: sample r4.xyzw, r3.wwww, t2.xyzw, s4
 107: mul r2.w, r2.w, r4.x
 108: mul r1.w, r1.w, r2.w
 109: mov r4.x, v3.w
 110: mov r4.y, v4.w
 111: mov r4.z, v5.w
 112: dp3 r2.w, r4.xyzx, r4.xyzx
 113: rsq r2.w, r2.w
 114: mul r5.xyz, r2.wwww, r4.xyzx
 115: mul r6.xyz, r1.wwww, cb0[2].xyzx
 116: mad r0.w, -r0.w, cb0[14].x, l(1.000000)
 117: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
 118: dp3 r1.w, r4.xyzx, r4.xyzx
 119: max r1.w, r1.w, l(0.001000)
 120: rsq r1.w, r1.w
 121: mul r4.xyz, r1.wwww, r4.xyzx
 122: dp3 r1.w, r2.xyzx, -r3.xyzx
 123: dp3_sat r2.w, r2.xyzx, r5.xyzx
 124: dp3_sat r2.x, r2.xyzx, r4.xyzx
 125: dp3_sat r2.y, r5.xyzx, r4.xyzx
 126: mul r2.z, r2.y, r2.y
 127: dp2 r2.z, r2.zzzz, r0.wwww
 128: add r2.z, r2.z, l(-0.500000)
 129: add r3.x, -r2.w, l(1.000000)
 130: mul r3.y, r3.x, r3.x
 131: mul r3.y, r3.y, r3.y
 132: mul r3.x, r3.x, r3.y
 133: mad r3.x, r2.z, r3.x, l(1.000000)
 134: add r3.y, -|r1.w|, l(1.000000)
 135: mul r3.z, r3.y, r3.y
 136: mul r3.z, r3.z, r3.z
 137: mul r3.y, r3.y, r3.z
 138: mad r2.z, r2.z, r3.y, l(1.000000)
 139: mul r2.z, r2.z, r3.x
 140: mul r2.z, r2.w, r2.z
 141: mul r3.x, r0.w, r0.w
 142: mad r0.w, -r0.w, r0.w, l(1.000000)
 143: mad r3.y, |r1.w|, r0.w, r3.x
 144: mad r0.w, r2.w, r0.w, r3.x
 145: mul r0.w, r0.w, |r1.w|
 146: mad r0.w, r2.w, r3.y, r0.w
 147: add r0.w, r0.w, l(0.000010)
 148: div r0.w, l(0.500000), r0.w
 149: mul r1.w, r3.x, r3.x
 150: mad r3.x, r2.x, r1.w, -r2.x
 151: mad r2.x, r3.x, r2.x, l(1.000000)
 152: mul r1.w, r1.w, l(0.318310)
 153: mad r2.x, r2.x, r2.x, l(0.000000)
 154: div r1.w, r1.w, r2.x
 155: mul r0.w, r0.w, r1.w
 156: mul r0.w, r0.w, l(3.141593)
 157: max r0.w, r0.w, l(0.000100)
 158: sqrt r0.w, r0.w
 159: mul r0.w, r2.w, r0.w
 160: dp3 r1.w, r0.xyzx, r0.xyzx
 161: ne r1.w, r1.w, l(0.000000)
 162: and r1.w, r1.w, l(0x3f800000)
 163: mul r0.w, r0.w, r1.w
 164: mul r2.xzw, r2.zzzz, r6.xxyz
 165: mul r3.xyz, r6.xyzx, r0.wwww
 166: add r0.w, -r2.y, l(1.000000)
 167: mul r1.w, r0.w, r0.w
 168: mul r1.w, r1.w, r1.w
 169: mul r0.w, r0.w, r1.w
 170: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 171: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 172: mul r0.xyz, r0.xyzx, r3.xyzx
 173: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 174: div r0.w, v7.z, cb1[5].y
 175: add r0.w, -r0.w, l(1.000000)
 176: mul r0.w, r0.w, cb1[5].z
 177: max r0.w, r0.w, l(0.000000)
 178: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 179: mul o0.xyz, r0.xyzx, r0.wwww
 180: mov o0.w, l(1.000000)
 181: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 121 math, 7 textures
Matrix4x3 unity_MatrixV at 12
Matrix4x4 unity_WorldToLight at 8
Matrix4x4 unity_WorldToShadow at 0
Vector4 _Color at 20
Float _Glossiness at 22
Vector4 _LightColor0 at 19
Vector4 _LightShadowData at 16
Float _Metallic at 21
Vector4 _ShadowOffsets[4] at 4
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_FogParams at 18
Vector4 unity_ShadowFadeCenterAndType at 17

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float4 _ShadowOffsets[4];
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_WorldToShadow           c0       4
//   _ShadowOffsets                c4       4
//   unity_WorldToLight            c8       4
//   unity_MatrixV                 c12      3
//   _WorldSpaceCameraPos          c15      1
//   _LightShadowData              c16      1
//   unity_ShadowFadeCenterAndType c17      1
//   unity_FogParams               c18      1
//   _LightColor0                  c19      1
//   _Color                        c20      1
//   _Metallic                     c21      1
//   _Glossiness                   c22      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c23, -0.220916301, 0.220916301, 0.779083729, 0.25
    def c24, 1, 0, 0.5, 0.00100000005
    def c25, 31.622776, 9.99999975e-006, 0.318309873, 1.00000001e-007
    def c26, 3.14159274, 9.99999975e-005, 0.00999999978, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    add r0.xyz, -c17, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c15.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c14
    lrp r1.x, c17.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c16.z, c16.w
    mad r1, v5.xyzx, c24.xxxy, c24.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    rcp r0.y, r2.w
    mad r3, r2, r0.y, c4
    texldp_pp r3, r3, s0
    mad r4, r2, r0.y, c5
    texldp_pp r4, r4, s0
    mov_pp r3.y, r4.x
    mad r4, r2, r0.y, c6
    mad r2, r2, r0.y, c7
    texldp_pp r2, r2, s0
    mov_pp r3.w, r2.x
    texldp_pp r2, r4, s0
    mov_pp r3.z, r2.x
    dp4_pp r0.y, r3, c23.w
    mov r2.x, c24.x
    lrp_pp r3.x, r0.y, r2.x, c16.x
    add_sat_pp r0.x, r0.x, r3.x
    dp4 r0.y, c11, r1
    rcp r0.y, r0.y
    dp4 r3.x, c8, r1
    dp4 r3.y, c9, r1
    dp4 r3.z, c10, r1
    mad r0.yz, r3.xxyw, r0.y, c24.z
    dp3 r0.w, r3, r3
    texld_pp r1, r0.w, s3
    texld_pp r4, r0.yzzw, s2
    mul r0.y, r1.x, r4.w
    mul r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c19
    cmp_pp r0.xyz, -r3.z, c24.y, r0
    nrm_pp r1.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r2.yzw, r3.xxyz, r0.w, -r1.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r2.yzww, r2.yzww
    add r1.w, -r0.w, c24.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c25.x, r0.w
    mul_pp r2.yzw, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2.yzww
    dp3_sat_pp r1.w, r3, r2.yzww
    dp3_sat_pp r2.y, r4, r3
    dp3_pp r1.x, r4, -r1
    add_pp r1.y, r2.x, -c22.x
    mul_pp r1.z, r1.y, r1.y
    mul_pp r2.x, r1.z, r1.z
    mad_pp r2.z, r0.w, r2.x, -r0.w
    mad_pp r0.w, r2.z, r0.w, c24.x
    mad r0.w, r0.w, r0.w, c25.w
    rcp r0.w, r0.w
    mul r2.x, r2.x, c25.z
    mul_pp r0.w, r0.w, r2.x
    mad_pp r2.x, r1.y, -r1.y, c24.x
    mad_pp r2.z, r1_abs.x, r2.x, r1.z
    mad_pp r1.z, r2.y, r2.x, r1.z
    mul_pp r1.z, r1.z, r1_abs.x
    add_pp r1.x, -r1_abs.x, c24.x
    mad r1.z, r2.y, r2.z, r1.z
    add r1.z, r1.z, c25.y
    rcp r1.z, r1.z
    mul_pp r1.z, r1.z, c24.z
    mul r0.w, r0.w, r1.z
    mul_pp r1.z, r0.w, c26.x
    mad r0.w, r0.w, -c26.x, c26.y
    rsq r1.z, r1.z
    rcp_pp r1.z, r1.z
    cmp_pp r0.w, r0.w, c26.z, r1.z
    mul_pp r0.w, r2.y, r0.w
    texld r3, v0, s1
    mov r4.xyz, c23
    mad_pp r2.xzw, c20.xyyz, r3.xyyz, r4.x
    mul_pp r3.xyz, r3, c20
    mad_pp r2.xzw, c21.x, r2, r4.y
    dp3_pp r1.z, r2.xzww, r2.xzww
    cmp r1.z, -r1.z, c24.y, c24.x
    mul_pp r0.w, r0.w, r1.z
    mul_pp r4.xyw, r0.xyzz, r0.w
    add_pp r0.w, -r1.w, c24.x
    mul_pp r1.z, r1.w, r1.w
    dp2add_pp r1.y, r1.z, r1.y, -c24.z
    mul_pp r1.z, r0.w, r0.w
    mul_pp r1.z, r1.z, r1.z
    mul_pp r0.w, r0.w, r1.z
    lrp_pp r5.xyz, r0.w, c24.x, r2.xzww
    mul_pp r2.xzw, r4.xyyw, r5.xyyz
    mul_pp r0.w, r1.x, r1.x
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r0.w, r1.y, r0.w, c24.x
    add_pp r1.x, -r2.y, c24.x
    mul_pp r1.z, r1.x, r1.x
    mul_pp r1.z, r1.z, r1.z
    mul_pp r1.x, r1.x, r1.z
    mad_pp r1.x, r1.y, r1.x, c24.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r2.y, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c21.x, -r4.z, r4.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp r0.xyz, r1, r0, r2.xzww
    mad_sat r0.w, v6.x, c18.z, c18.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c24.x

// approximately 125 instruction slots used (7 texture, 118 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[14].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[12].xxxy, cb0[12].zzzw
  13: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 149 math, 11 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _Metallic at 216
  Float _Glossiness at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 11
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[9].xyzx
   2: mad r0.xyz, cb0[9].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[13].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[13].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  13: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  14: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  15: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb6[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  45: lt r3.w, r0.w, l(0.990000)
  46: if_nz r3.w
  47:   mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  48:   mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  49:   mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  50:   add r5.xyzw, r5.xyzw, cb3[11].xyzw
  51:   div r5.xyz, r5.xyzx, r5.wwww
  52:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  53:   round_ni r6.xy, r6.xyxx
  54:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  55:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  56:   mul r8.xw, r7.xxxz, r7.xxxz
  57:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  58:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  59:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  61:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  63:   mov r9.x, r6.z
  64:   mov r9.y, r7.x
  65:   mov r9.z, r5.x
  66:   mov r9.w, r8.x
  67:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  68:   mov r8.x, r6.w
  69:   mov r8.y, r7.z
  70:   mov r8.z, r5.y
  71:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  72:   add r8.xyzw, r9.ywyw, r9.xzxz
  73:   add r10.xyzw, r7.yyww, r7.xxzz
  74:   div r5.xy, r9.ywyy, r8.zwzz
  75:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  76:   div r6.zw, r7.yyyw, r10.yyyw
  77:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  78:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  79:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  80:   mul r8.xyzw, r8.xyzw, r10.xyzw
  81:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  82:   sample_c_lz r3.w, r9.xyxx, t4.xxxx, s1, r5.z
  83:   sample_c_lz r5.x, r9.zwzz, t4.xxxx, s1, r5.z
  84:   mul r5.x, r5.x, r8.y
  85:   mad r3.w, r8.x, r3.w, r5.x
  86:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
  87:   sample_c_lz r5.x, r6.xyxx, t4.xxxx, s1, r5.z
  88:   mad r3.w, r8.z, r5.x, r3.w
  89:   sample_c_lz r5.x, r6.zwzz, t4.xxxx, s1, r5.z
  90:   mad r3.w, r8.w, r5.x, r3.w
  91:   add r5.x, -cb3[24].x, l(1.000000)
  92:   mad r3.w, r3.w, r5.x, cb3[24].x
  93: else 
  94:   mov r3.w, l(1.000000)
  95: endif 
  96: add_sat r0.w, r0.w, r3.w
  97: min r2.w, r0.w, r2.w
  98: movc r0.w, r1.w, r2.w, r0.w
  99: lt r1.w, l(0.000000), r4.z
 100: and r1.w, r1.w, l(0x3f800000)
 101: div r5.xy, r4.xyxx, r4.wwww
 102: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 103: sample r5.xyzw, r5.xyxx, t1.xyzw, s3
 104: mul r1.w, r1.w, r5.w
 105: dp3 r2.w, r4.xyzx, r4.xyzx
 106: sample r4.xyzw, r2.wwww, t2.xyzw, s4
 107: mul r1.w, r1.w, r4.x
 108: mul r0.w, r0.w, r1.w
 109: mov r4.x, v3.w
 110: mov r4.y, v4.w
 111: mov r4.z, v5.w
 112: dp3 r1.w, r4.xyzx, r4.xyzx
 113: rsq r1.w, r1.w
 114: mul r5.xyz, r1.wwww, r4.xyzx
 115: mul r6.xyz, r0.wwww, cb0[2].xyzx
 116: add r0.w, -cb0[13].w, l(1.000000)
 117: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
 118: dp3 r1.w, r4.xyzx, r4.xyzx
 119: max r1.w, r1.w, l(0.001000)
 120: rsq r1.w, r1.w
 121: mul r4.xyz, r1.wwww, r4.xyzx
 122: dp3 r1.w, r2.xyzx, -r3.xyzx
 123: dp3_sat r2.w, r2.xyzx, r5.xyzx
 124: dp3_sat r2.x, r2.xyzx, r4.xyzx
 125: dp3_sat r2.y, r5.xyzx, r4.xyzx
 126: mul r2.z, r2.y, r2.y
 127: dp2 r2.z, r2.zzzz, r0.wwww
 128: add r2.z, r2.z, l(-0.500000)
 129: add r3.x, -r2.w, l(1.000000)
 130: mul r3.y, r3.x, r3.x
 131: mul r3.y, r3.y, r3.y
 132: mul r3.x, r3.x, r3.y
 133: mad r3.x, r2.z, r3.x, l(1.000000)
 134: add r3.y, -|r1.w|, l(1.000000)
 135: mul r3.z, r3.y, r3.y
 136: mul r3.z, r3.z, r3.z
 137: mul r3.y, r3.y, r3.z
 138: mad r2.z, r2.z, r3.y, l(1.000000)
 139: mul r2.z, r2.z, r3.x
 140: mul r2.z, r2.w, r2.z
 141: mul r3.x, r0.w, r0.w
 142: mad r0.w, -r0.w, r0.w, l(1.000000)
 143: mad r3.y, |r1.w|, r0.w, r3.x
 144: mad r0.w, r2.w, r0.w, r3.x
 145: mul r0.w, r0.w, |r1.w|
 146: mad r0.w, r2.w, r3.y, r0.w
 147: add r0.w, r0.w, l(0.000010)
 148: div r0.w, l(0.500000), r0.w
 149: mul r1.w, r3.x, r3.x
 150: mad r3.x, r2.x, r1.w, -r2.x
 151: mad r2.x, r3.x, r2.x, l(1.000000)
 152: mul r1.w, r1.w, l(0.318310)
 153: mad r2.x, r2.x, r2.x, l(0.000000)
 154: div r1.w, r1.w, r2.x
 155: mul r0.w, r0.w, r1.w
 156: mul r0.w, r0.w, l(3.141593)
 157: max r0.w, r0.w, l(0.000100)
 158: sqrt r0.w, r0.w
 159: mul r0.w, r2.w, r0.w
 160: dp3 r1.w, r0.xyzx, r0.xyzx
 161: ne r1.w, r1.w, l(0.000000)
 162: and r1.w, r1.w, l(0x3f800000)
 163: mul r0.w, r0.w, r1.w
 164: mul r2.xzw, r2.zzzz, r6.xxyz
 165: mul r3.xyz, r6.xyzx, r0.wwww
 166: add r0.w, -r2.y, l(1.000000)
 167: mul r1.w, r0.w, r0.w
 168: mul r1.w, r1.w, r1.w
 169: mul r0.w, r0.w, r1.w
 170: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 171: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 172: mul r0.xyz, r0.xyzx, r3.xyzx
 173: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 174: div r0.w, v7.z, cb1[5].y
 175: add r0.w, -r0.w, l(1.000000)
 176: mul r0.w, r0.w, cb1[5].z
 177: max r0.w, r0.w, l(0.000000)
 178: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 179: mul o0.xyz, r0.xyzx, r0.wwww
 180: mov o0.w, l(1.000000)
 181: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 91 math, 2 textures
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 8
Float _GlossMapScale at 10
Vector4 _LightColor0 at 7
Vector4 _LightShadowData at 4
Float _Metallic at 9
Vector4 _WorldSpaceCameraPos at 3
Vector4 unity_FogParams at 6
Vector4 unity_ShadowFadeCenterAndType at 5

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _LightShadowData              c4       1
//   unity_ShadowFadeCenterAndType c5       1
//   unity_FogParams               c6       1
//   _LightColor0                  c7       1
//   _Color                        c8       1
//   _Metallic                     c9       1
//   _GlossMapScale                c10      1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//

    ps_3_0
    def c11, -0.220916301, 0.220916301, 0.779083729, 1
    def c12, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c13, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c14, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_texcoord7 v7.x
    dcl_2d s0
    dcl_2d s1
    add r0.xyz, -c5, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c3.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c5.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c4.z, c4.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mul_pp r0.xyz, r0.x, c7
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c12.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c12.y, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    texld r2, v0, s0
    mov r3, c11
    mad_pp r1.z, r2.w, -c10.x, r3.w
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.w, r2.w, r2.w
    mad_pp r4.x, r0.w, r3.w, -r0.w
    mad_pp r0.w, r4.x, r0.w, c11.w
    mad r0.w, r0.w, r0.w, c13.y
    rcp r0.w, r0.w
    mul r3.w, r3.w, c13.x
    mul_pp r0.w, r0.w, r3.w
    mad_pp r3.w, r1.z, -r1.z, c11.w
    mad_pp r4.x, r1_abs.y, r3.w, r2.w
    mad_pp r2.w, r1.x, r3.w, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c11.w
    mad r2.w, r1.x, r4.x, r2.w
    add r2.w, r2.w, c12.w
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, -c12.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c13.z
    mad r0.w, r0.w, -c13.z, c13.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c14.x, r2.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r4.xyz, c8, r2, r3.x
    mul_pp r2.xyz, r2, c8
    mad_pp r3.xyw, c9.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c14.y, c14.z
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c11.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c12.z
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c11.w, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c11.w
    add_pp r1.y, -r1.x, c11.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c11.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c9.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp r0.xyz, r1, r0, r3.xyww
    mad_sat r0.w, v7.x, c6.z, c6.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c11.w

// approximately 91 instruction slots used (2 texture, 89 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v2.w
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  13: mov r5.x, cb4[9].z
  14: mov r5.y, cb4[10].z
  15: mov r5.z, cb4[11].z
  16: dp3 r2.w, r4.xyzx, r5.xyzx
  17: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  18: dp3 r3.w, r4.xyzx, r4.xyzx
  19: sqrt r3.w, r3.w
  20: add r3.w, -r2.w, r3.w
  21: mad r2.w, cb3[25].w, r3.w, r2.w
  22: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  23: eq r3.w, cb6[0].x, l(1.000000)
  24: if_nz r3.w
  25:   eq r4.x, cb6[0].y, l(1.000000)
  26:   mul r4.yzw, v6.yyyy, cb6[2].xxyz
  27:   mad r4.yzw, cb6[1].xxyz, v6.xxxx, r4.yyzw
  28:   mad r4.yzw, cb6[3].xxyz, v6.zzzz, r4.yyzw
  29:   add r4.yzw, r4.yyzw, cb6[4].xxyz
  30:   movc r4.xyz, r4.xxxx, r4.yzwy, v6.xyzx
  31:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  32:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  33:   mad r4.y, r4.y, l(0.250000), l(0.750000)
  34:   mad r5.x, cb6[0].z, l(0.500000), l(0.750000)
  35:   max r4.x, r4.y, r5.x
  36:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  37: else 
  38:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r4.x, r4.xyzw, cb2[45].xyzw
  41: div r4.yz, v7.xxyx, v7.wwww
  42: sample r5.xyzw, r4.yzyy, t1.xyzw, s2
  43: add_sat r2.w, r2.w, r5.x
  44: min r4.x, r2.w, r4.x
  45: movc r2.w, r3.w, r4.x, r2.w
  46: mul r4.xyz, r2.wwww, cb0[2].xyzx
  47: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  52: dp3 r1.w, r6.xyzx, r6.xyzx
  53: max r1.w, r1.w, l(0.001000)
  54: rsq r1.w, r1.w
  55: mul r6.xyz, r1.wwww, r6.xyzx
  56: dp3 r1.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r0.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r1.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r3.x, r0.w, r0.w
  76: mad r0.w, -r0.w, r0.w, l(1.000000)
  77: mad r3.y, |r1.w|, r0.w, r3.x
  78: mad r0.w, r2.w, r0.w, r3.x
  79: mul r0.w, r0.w, |r1.w|
  80: mad r0.w, r2.w, r3.y, r0.w
  81: add r0.w, r0.w, l(0.000010)
  82: div r0.w, l(0.500000), r0.w
  83: mul r1.w, r3.x, r3.x
  84: mad r3.x, r2.x, r1.w, -r2.x
  85: mad r2.x, r3.x, r2.x, l(1.000000)
  86: mul r1.w, r1.w, l(0.318310)
  87: mad r2.x, r2.x, r2.x, l(0.000000)
  88: div r1.w, r1.w, r2.x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r0.w, l(3.141593)
  91: max r0.w, r0.w, l(0.000100)
  92: sqrt r0.w, r0.w
  93: mul r0.w, r2.w, r0.w
  94: dp3 r1.w, r0.xyzx, r0.xyzx
  95: ne r1.w, r1.w, l(0.000000)
  96: and r1.w, r1.w, l(0x3f800000)
  97: mul r0.w, r0.w, r1.w
  98: mul r2.xzw, r2.zzzz, r4.xxyz
  99: mul r3.xyz, r4.xyzx, r0.wwww
 100: add r0.w, -r2.y, l(1.000000)
 101: mul r1.w, r0.w, r0.w
 102: mul r1.w, r1.w, r1.w
 103: mul r0.w, r0.w, r1.w
 104: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 106: mul r0.xyz, r0.xyzx, r3.xyzx
 107: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 108: div r0.w, v2.w, cb1[5].y
 109: add r0.w, -r0.w, l(1.000000)
 110: mul r0.w, r0.w, cb1[5].z
 111: max r0.w, r0.w, l(0.000000)
 112: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 113: mul o0.xyz, r0.xyzx, r0.wwww
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 91 math, 2 textures
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 8
Float _Glossiness at 10
Vector4 _LightColor0 at 7
Vector4 _LightShadowData at 4
Float _Metallic at 9
Vector4 _WorldSpaceCameraPos at 3
Vector4 unity_FogParams at 6
Vector4 unity_ShadowFadeCenterAndType at 5

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _LightShadowData              c4       1
//   unity_ShadowFadeCenterAndType c5       1
//   unity_FogParams               c6       1
//   _LightColor0                  c7       1
//   _Color                        c8       1
//   _Metallic                     c9       1
//   _Glossiness                   c10      1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//

    ps_3_0
    def c11, -0.220916301, 0.220916301, 0.779083729, 1
    def c12, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c13, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c14, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_texcoord7 v7.x
    dcl_2d s0
    dcl_2d s1
    add r0.xyz, -c5, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c3.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c5.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c4.z, c4.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mul_pp r0.xyz, r0.x, c7
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c12.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c12.y, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    mov r2, c11
    add_pp r1.z, r2.w, -c10.x
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c11.w
    mad r0.w, r0.w, r0.w, c13.y
    rcp r0.w, r0.w
    mul r3.x, r3.x, c13.x
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.z, -r1.z, c11.w
    mad_pp r3.y, r1_abs.y, r3.x, r2.w
    mad_pp r2.w, r1.x, r3.x, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c11.w
    mad r2.w, r1.x, r3.y, r2.w
    add r2.w, r2.w, c12.w
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, -c12.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c13.z
    mad r0.w, r0.w, -c13.z, c13.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c14.x, r2.w
    mul_pp r0.w, r1.x, r0.w
    texld r3, v0, s0
    mad_pp r4.xyz, c8, r3, r2.x
    mul_pp r3.xyz, r3, c8
    mad_pp r2.xyw, c9.x, r4.xyzz, r2.y
    dp3_pp r3.w, r2.xyww, r2.xyww
    cmp r3.w, -r3.w, c14.y, c14.z
    mul_pp r0.w, r0.w, r3.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c11.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c12.z
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c11.w, r2.xyww
    mul_pp r2.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c11.w
    add_pp r1.y, -r1.x, c11.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c11.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c9.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp r0.xyz, r1, r0, r2.xyww
    mad_sat r0.w, v7.x, c6.z, c6.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c11.w

// approximately 91 instruction slots used (2 texture, 89 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v2.w
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  13: mov r5.x, cb4[9].z
  14: mov r5.y, cb4[10].z
  15: mov r5.z, cb4[11].z
  16: dp3 r1.w, r4.xyzx, r5.xyzx
  17: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  18: dp3 r2.w, r4.xyzx, r4.xyzx
  19: sqrt r2.w, r2.w
  20: add r2.w, -r1.w, r2.w
  21: mad r1.w, cb3[25].w, r2.w, r1.w
  22: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  23: eq r2.w, cb6[0].x, l(1.000000)
  24: if_nz r2.w
  25:   eq r3.w, cb6[0].y, l(1.000000)
  26:   mul r4.xyz, v6.yyyy, cb6[2].xyzx
  27:   mad r4.xyz, cb6[1].xyzx, v6.xxxx, r4.xyzx
  28:   mad r4.xyz, cb6[3].xyzx, v6.zzzz, r4.xyzx
  29:   add r4.xyz, r4.xyzx, cb6[4].xyzx
  30:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  31:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  32:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  33:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  34:   mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
  35:   max r4.x, r3.w, r4.y
  36:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  37: else 
  38:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r3.w, r4.xyzw, cb2[45].xyzw
  41: div r4.xy, v7.xyxx, v7.wwww
  42: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  43: add_sat r1.w, r1.w, r4.x
  44: min r3.w, r1.w, r3.w
  45: movc r1.w, r2.w, r3.w, r1.w
  46: mul r4.xyz, r1.wwww, cb0[2].xyzx
  47: add r1.w, -cb0[8].w, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  52: dp3 r0.w, r6.xyzx, r6.xyzx
  53: max r0.w, r0.w, l(0.001000)
  54: rsq r0.w, r0.w
  55: mul r6.xyz, r0.wwww, r6.xyzx
  56: dp3 r0.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r1.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r0.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r3.x, r1.w, r1.w
  76: mad r1.w, -r1.w, r1.w, l(1.000000)
  77: mad r3.y, |r0.w|, r1.w, r3.x
  78: mad r1.w, r2.w, r1.w, r3.x
  79: mul r0.w, |r0.w|, r1.w
  80: mad r0.w, r2.w, r3.y, r0.w
  81: add r0.w, r0.w, l(0.000010)
  82: div r0.w, l(0.500000), r0.w
  83: mul r1.w, r3.x, r3.x
  84: mad r3.x, r2.x, r1.w, -r2.x
  85: mad r2.x, r3.x, r2.x, l(1.000000)
  86: mul r1.w, r1.w, l(0.318310)
  87: mad r2.x, r2.x, r2.x, l(0.000000)
  88: div r1.w, r1.w, r2.x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r0.w, l(3.141593)
  91: max r0.w, r0.w, l(0.000100)
  92: sqrt r0.w, r0.w
  93: mul r0.w, r2.w, r0.w
  94: dp3 r1.w, r0.xyzx, r0.xyzx
  95: ne r1.w, r1.w, l(0.000000)
  96: and r1.w, r1.w, l(0x3f800000)
  97: mul r0.w, r0.w, r1.w
  98: mul r2.xzw, r2.zzzz, r4.xxyz
  99: mul r3.xyz, r4.xyzx, r0.wwww
 100: add r0.w, -r2.y, l(1.000000)
 101: mul r1.w, r0.w, r0.w
 102: mul r1.w, r1.w, r1.w
 103: mul r0.w, r0.w, r1.w
 104: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 106: mul r0.xyz, r0.xyzx, r3.xyzx
 107: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 108: div r0.w, v2.w, cb1[5].y
 109: add r0.w, -r0.w, l(1.000000)
 110: mul r0.w, r0.w, cb1[5].z
 111: max r0.w, r0.w, l(0.000000)
 112: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 113: mul o0.xyz, r0.xyzx, r0.wwww
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE SHADOWS_SCREEN FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 95 math, 3 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x2 unity_WorldToLight at 3
Vector4 _Color at 10
Float _GlossMapScale at 12
Vector4 _LightColor0 at 9
Vector4 _LightShadowData at 6
Float _Metallic at 11
Vector4 _WorldSpaceCameraPos at 5
Vector4 unity_FogParams at 8
Vector4 unity_ShadowFadeCenterAndType at 7

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       2
//   _WorldSpaceCameraPos          c5       1
//   _LightShadowData              c6       1
//   unity_ShadowFadeCenterAndType c7       1
//   unity_FogParams               c8       1
//   _LightColor0                  c9       1
//   _Color                        c10      1
//   _Metallic                     c11      1
//   _GlossMapScale                c12      1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c13, -0.220916301, 0.220916301, 0.779083729, 1
    def c14, 1, 0, 0.00100000005, 31.622776
    def c15, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c16, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_texcoord7 v7.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c5.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c7.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c6.z, c6.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mad r1, v5.xyzx, c14.xxxy, c14.yyyx
    dp4 r2.x, c3, r1
    dp4 r2.y, c4, r1
    texld r1, r2, s2
    mul_pp r0.x, r0.x, r1.w
    mul_pp r0.xyz, r0.x, c9
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c14.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c14.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    texld r2, v0, s0
    mov r3, c13
    mad_pp r1.z, r2.w, -c12.x, r3.w
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.w, r2.w, r2.w
    mad_pp r4.x, r0.w, r3.w, -r0.w
    mad_pp r0.w, r4.x, r0.w, c13.w
    mad r0.w, r0.w, r0.w, c16.x
    rcp r0.w, r0.w
    mul r3.w, r3.w, c15.w
    mul_pp r0.w, r0.w, r3.w
    mad_pp r3.w, r1.z, -r1.z, c13.w
    mad_pp r4.x, r1_abs.y, r3.w, r2.w
    mad_pp r2.w, r1.x, r3.w, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c13.w
    mad r2.w, r1.x, r4.x, r2.w
    add r2.w, r2.w, c15.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c15.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c16.y
    mad r0.w, r0.w, -c16.y, c16.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c16.w, r2.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r4.xyz, c10, r2, r3.x
    mul_pp r2.xyz, r2, c10
    mad_pp r3.xyw, c11.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c14.y, c14.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c13.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c15.x
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c13.w, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c13.w
    add_pp r1.y, -r1.x, c13.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c13.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c11.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp r0.xyz, r1, r0, r3.xyww
    mad_sat r0.w, v7.x, c8.z, c8.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c13.w

// approximately 96 instruction slots used (3 texture, 93 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 104 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v2.w
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r2.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r3.w, r5.xyzx, r5.xyzx
  23: sqrt r3.w, r3.w
  24: add r3.w, -r2.w, r3.w
  25: mad r2.w, cb3[25].w, r3.w, r2.w
  26: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  27: eq r3.w, cb6[0].x, l(1.000000)
  28: if_nz r3.w
  29:   eq r4.z, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r4.zzzz, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r4.z, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r4.w, r4.z
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r4.z, r5.xyzw, cb2[45].xyzw
  45: div r5.xy, v7.xyxx, v7.wwww
  46: sample r5.xyzw, r5.xyxx, t1.xyzw, s2
  47: add_sat r2.w, r2.w, r5.x
  48: min r4.z, r2.w, r4.z
  49: movc r2.w, r3.w, r4.z, r2.w
  50: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  51: mul r2.w, r2.w, r4.w
  52: mul r4.xyz, r2.wwww, cb0[2].xyzx
  53: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  58: dp3 r1.w, r6.xyzx, r6.xyzx
  59: max r1.w, r1.w, l(0.001000)
  60: rsq r1.w, r1.w
  61: mul r6.xyz, r1.wwww, r6.xyzx
  62: dp3 r1.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r0.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r1.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r3.x, r0.w, r0.w
  82: mad r0.w, -r0.w, r0.w, l(1.000000)
  83: mad r3.y, |r1.w|, r0.w, r3.x
  84: mad r0.w, r2.w, r0.w, r3.x
  85: mul r0.w, r0.w, |r1.w|
  86: mad r0.w, r2.w, r3.y, r0.w
  87: add r0.w, r0.w, l(0.000010)
  88: div r0.w, l(0.500000), r0.w
  89: mul r1.w, r3.x, r3.x
  90: mad r3.x, r2.x, r1.w, -r2.x
  91: mad r2.x, r3.x, r2.x, l(1.000000)
  92: mul r1.w, r1.w, l(0.318310)
  93: mad r2.x, r2.x, r2.x, l(0.000000)
  94: div r1.w, r1.w, r2.x
  95: mul r0.w, r0.w, r1.w
  96: mul r0.w, r0.w, l(3.141593)
  97: max r0.w, r0.w, l(0.000100)
  98: sqrt r0.w, r0.w
  99: mul r0.w, r2.w, r0.w
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r4.xxyz
 105: mul r3.xyz, r4.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: div r0.w, v2.w, cb1[5].y
 115: add r0.w, -r0.w, l(1.000000)
 116: mul r0.w, r0.w, cb1[5].z
 117: max r0.w, r0.w, l(0.000000)
 118: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 119: mul o0.xyz, r0.xyzx, r0.wwww
 120: mov o0.w, l(1.000000)
 121: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 95 math, 3 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x2 unity_WorldToLight at 3
Vector4 _Color at 10
Float _Glossiness at 12
Vector4 _LightColor0 at 9
Vector4 _LightShadowData at 6
Float _Metallic at 11
Vector4 _WorldSpaceCameraPos at 5
Vector4 unity_FogParams at 8
Vector4 unity_ShadowFadeCenterAndType at 7

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       2
//   _WorldSpaceCameraPos          c5       1
//   _LightShadowData              c6       1
//   unity_ShadowFadeCenterAndType c7       1
//   unity_FogParams               c8       1
//   _LightColor0                  c9       1
//   _Color                        c10      1
//   _Metallic                     c11      1
//   _Glossiness                   c12      1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c13, -0.220916301, 0.220916301, 0.779083729, 1
    def c14, 1, 0, 0.00100000005, 31.622776
    def c15, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c16, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_texcoord7 v7.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c5.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c7.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c6.z, c6.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mad r1, v5.xyzx, c14.xxxy, c14.yyyx
    dp4 r2.x, c3, r1
    dp4 r2.y, c4, r1
    texld r1, r2, s2
    mul_pp r0.x, r0.x, r1.w
    mul_pp r0.xyz, r0.x, c9
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c14.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c14.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    mov r2, c13
    add_pp r1.z, r2.w, -c12.x
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c13.w
    mad r0.w, r0.w, r0.w, c16.x
    rcp r0.w, r0.w
    mul r3.x, r3.x, c15.w
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.z, -r1.z, c13.w
    mad_pp r3.y, r1_abs.y, r3.x, r2.w
    mad_pp r2.w, r1.x, r3.x, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c13.w
    mad r2.w, r1.x, r3.y, r2.w
    add r2.w, r2.w, c15.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c15.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c16.y
    mad r0.w, r0.w, -c16.y, c16.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c16.w, r2.w
    mul_pp r0.w, r1.x, r0.w
    texld r3, v0, s0
    mad_pp r4.xyz, c10, r3, r2.x
    mul_pp r3.xyz, r3, c10
    mad_pp r2.xyw, c11.x, r4.xyzz, r2.y
    dp3_pp r3.w, r2.xyww, r2.xyww
    cmp r3.w, -r3.w, c14.y, c14.x
    mul_pp r0.w, r0.w, r3.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c13.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c15.x
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c13.w, r2.xyww
    mul_pp r2.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c13.w
    add_pp r1.y, -r1.x, c13.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c13.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c11.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp r0.xyz, r1, r0, r2.xyww
    mad_sat r0.w, v7.x, c8.z, c8.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c13.w

// approximately 96 instruction slots used (3 texture, 93 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 104 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v2.w
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb6[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.z, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.z
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: div r4.zw, v7.xxxy, v7.wwww
  46: sample r5.xyzw, r4.zwzz, t1.xyzw, s2
  47: add_sat r1.w, r1.w, r5.x
  48: min r3.w, r1.w, r3.w
  49: movc r1.w, r2.w, r3.w, r1.w
  50: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  51: mul r1.w, r1.w, r4.w
  52: mul r4.xyz, r1.wwww, cb0[2].xyzx
  53: add r1.w, -cb0[8].w, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  58: dp3 r0.w, r6.xyzx, r6.xyzx
  59: max r0.w, r0.w, l(0.001000)
  60: rsq r0.w, r0.w
  61: mul r6.xyz, r0.wwww, r6.xyzx
  62: dp3 r0.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r1.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r0.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r3.x, r1.w, r1.w
  82: mad r1.w, -r1.w, r1.w, l(1.000000)
  83: mad r3.y, |r0.w|, r1.w, r3.x
  84: mad r1.w, r2.w, r1.w, r3.x
  85: mul r0.w, |r0.w|, r1.w
  86: mad r0.w, r2.w, r3.y, r0.w
  87: add r0.w, r0.w, l(0.000010)
  88: div r0.w, l(0.500000), r0.w
  89: mul r1.w, r3.x, r3.x
  90: mad r3.x, r2.x, r1.w, -r2.x
  91: mad r2.x, r3.x, r2.x, l(1.000000)
  92: mul r1.w, r1.w, l(0.318310)
  93: mad r2.x, r2.x, r2.x, l(0.000000)
  94: div r1.w, r1.w, r2.x
  95: mul r0.w, r0.w, r1.w
  96: mul r0.w, r0.w, l(3.141593)
  97: max r0.w, r0.w, l(0.000100)
  98: sqrt r0.w, r0.w
  99: mul r0.w, r2.w, r0.w
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r4.xxyz
 105: mul r3.xyz, r4.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: div r0.w, v2.w, cb1[5].y
 115: add r0.w, -r0.w, l(1.000000)
 116: mul r0.w, r0.w, cb1[5].z
 117: max r0.w, r0.w, l(0.000000)
 118: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 119: mul o0.xyz, r0.xyzx, r0.wwww
 120: mov o0.w, l(1.000000)
 121: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 109 math, 4 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 12
Float _GlossMapScale at 14
Vector4 _LightColor0 at 11
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 13
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_FogParams at 10
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_FogParams               c10      1
//   _LightColor0                  c11      1
//   _Color                        c12      1
//   _Metallic                     c13      1
//   _GlossMapScale                c14      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c15, -0.220916301, 0.220916301, 0.779083729, 0
    def c16, 1, 0, 0.970000029, 0.00100000005
    def c17, 31.622776, -0.5, 9.99999975e-006, 0.5
    def c18, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c19, 0.00999999978, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r1.x, r0, r0
    rsq r1.x, r1.x
    rcp r1.x, r1.x
    mul r1.x, r1.x, c7.w
    mov r0.w, c15.w
    texldl r0, r0, s0
    mad r0.x, r1.x, -c16.z, r0.x
    mov r1.x, c16.x
    cmp_pp r0.x, r0.x, r1.x, c8.x
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r0.y, s2
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c11
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c16.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c17.x, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    texld r2, v0, s1
    mad_pp r1.x, r2.w, -c14.x, r1.x
    mul_pp r2.w, r1.x, r1.x
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c16.x
    mad r0.w, r0.w, r0.w, c18.y
    rcp r0.w, r0.w
    mul r3.x, r3.x, c18.x
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.x, -r1.x, c16.x
    mad_pp r3.y, r1.z, r3.x, r2.w
    mad_pp r2.w, r1_abs.w, r3.x, r2.w
    mul_pp r3.x, r1_abs.w, r3.y
    add_pp r1.w, -r1_abs.w, c16.x
    mad r2.w, r1.z, r2.w, r3.x
    add r2.w, r2.w, c17.z
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c17.w
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c18.z
    mad r0.w, r0.w, -c18.z, c18.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c19.x, r2.w
    mul_pp r0.w, r1.z, r0.w
    mov r3.xyz, c15
    mad_pp r4.xyz, c12, r2, r3.x
    mul_pp r2.xyz, r2, c12
    mad_pp r3.xyw, c13.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c16.y, c16.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c16.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c17.y
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c16.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c16.x
    add_pp r1.y, -r1.z, c16.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c16.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c13.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp r0.xyz, r1, r0, r3.xyww
    mad_sat r0.w, v6.x, c10.z, c10.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c16.x

// approximately 111 instruction slots used (4 texture, 107 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 113 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb6[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  46: dp3 r4.w, r5.xyzx, r5.xyzx
  47: sqrt r4.w, r4.w
  48: mul r4.w, r4.w, cb2[1].w
  49: mul r4.w, r4.w, l(0.970000)
  50: sample_l r5.xyzw, r5.xyzx, t1.xyzw, s1, l(0.000000)
  51: lt r4.w, r5.x, r4.w
  52: movc r4.w, r4.w, cb3[24].x, l(1.000000)
  53: add_sat r1.w, r1.w, r4.w
  54: min r3.w, r1.w, r3.w
  55: movc r1.w, r2.w, r3.w, r1.w
  56: dp3 r2.w, r4.xyzx, r4.xyzx
  57: sample r4.xyzw, r2.wwww, t2.xyzw, s3
  58: mul r1.w, r1.w, r4.x
  59: mov r4.x, v3.w
  60: mov r4.y, v4.w
  61: mov r4.z, v5.w
  62: dp3 r2.w, r4.xyzx, r4.xyzx
  63: rsq r2.w, r2.w
  64: mul r5.xyz, r2.wwww, r4.xyzx
  65: mul r6.xyz, r1.wwww, cb0[2].xyzx
  66: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  67: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  68: dp3 r1.w, r4.xyzx, r4.xyzx
  69: max r1.w, r1.w, l(0.001000)
  70: rsq r1.w, r1.w
  71: mul r4.xyz, r1.wwww, r4.xyzx
  72: dp3 r1.w, r2.xyzx, -r3.xyzx
  73: dp3_sat r2.w, r2.xyzx, r5.xyzx
  74: dp3_sat r2.x, r2.xyzx, r4.xyzx
  75: dp3_sat r2.y, r5.xyzx, r4.xyzx
  76: mul r2.z, r2.y, r2.y
  77: dp2 r2.z, r2.zzzz, r0.wwww
  78: add r2.z, r2.z, l(-0.500000)
  79: add r3.x, -r2.w, l(1.000000)
  80: mul r3.y, r3.x, r3.x
  81: mul r3.y, r3.y, r3.y
  82: mul r3.x, r3.x, r3.y
  83: mad r3.x, r2.z, r3.x, l(1.000000)
  84: add r3.y, -|r1.w|, l(1.000000)
  85: mul r3.z, r3.y, r3.y
  86: mul r3.z, r3.z, r3.z
  87: mul r3.y, r3.y, r3.z
  88: mad r2.z, r2.z, r3.y, l(1.000000)
  89: mul r2.z, r2.z, r3.x
  90: mul r2.z, r2.w, r2.z
  91: mul r3.x, r0.w, r0.w
  92: mad r0.w, -r0.w, r0.w, l(1.000000)
  93: mad r3.y, |r1.w|, r0.w, r3.x
  94: mad r0.w, r2.w, r0.w, r3.x
  95: mul r0.w, r0.w, |r1.w|
  96: mad r0.w, r2.w, r3.y, r0.w
  97: add r0.w, r0.w, l(0.000010)
  98: div r0.w, l(0.500000), r0.w
  99: mul r1.w, r3.x, r3.x
 100: mad r3.x, r2.x, r1.w, -r2.x
 101: mad r2.x, r3.x, r2.x, l(1.000000)
 102: mul r1.w, r1.w, l(0.318310)
 103: mad r2.x, r2.x, r2.x, l(0.000000)
 104: div r1.w, r1.w, r2.x
 105: mul r0.w, r0.w, r1.w
 106: mul r0.w, r0.w, l(3.141593)
 107: max r0.w, r0.w, l(0.000100)
 108: sqrt r0.w, r0.w
 109: mul r0.w, r2.w, r0.w
 110: dp3 r1.w, r0.xyzx, r0.xyzx
 111: ne r1.w, r1.w, l(0.000000)
 112: and r1.w, r1.w, l(0x3f800000)
 113: mul r0.w, r0.w, r1.w
 114: mul r2.xzw, r2.zzzz, r6.xxyz
 115: mul r3.xyz, r6.xyzx, r0.wwww
 116: add r0.w, -r2.y, l(1.000000)
 117: mul r1.w, r0.w, r0.w
 118: mul r1.w, r1.w, r1.w
 119: mul r0.w, r0.w, r1.w
 120: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 121: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 122: mul r0.xyz, r0.xyzx, r3.xyzx
 123: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 124: div r0.w, v7.z, cb1[5].y
 125: add r0.w, -r0.w, l(1.000000)
 126: mul r0.w, r0.w, cb1[5].z
 127: max r0.w, r0.w, l(0.000000)
 128: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 129: mul o0.xyz, r0.xyzx, r0.wwww
 130: mov o0.w, l(1.000000)
 131: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 109 math, 4 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 12
Float _Glossiness at 14
Vector4 _LightColor0 at 11
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 13
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_FogParams at 10
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_FogParams               c10      1
//   _LightColor0                  c11      1
//   _Color                        c12      1
//   _Metallic                     c13      1
//   _Glossiness                   c14      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c15, -0.220916301, 0.220916301, 0.779083729, 0
    def c16, 1, 0, 0.970000029, 0.00100000005
    def c17, 31.622776, -0.5, 9.99999975e-006, 0.5
    def c18, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c19, 0.00999999978, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r1.x, r0, r0
    rsq r1.x, r1.x
    rcp r1.x, r1.x
    mul r1.x, r1.x, c7.w
    mov r0.w, c15.w
    texldl r0, r0, s0
    mad r0.x, r1.x, -c16.z, r0.x
    mov r1.x, c16.x
    cmp_pp r0.x, r0.x, r1.x, c8.x
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r0.y, s2
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c11
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c16.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c17.x, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    add_pp r1.x, r1.x, -c14.x
    mul_pp r2.x, r1.x, r1.x
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c16.x
    mad r0.w, r0.w, r0.w, c18.y
    rcp r0.w, r0.w
    mul r2.y, r2.y, c18.x
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.x, -r1.x, c16.x
    mad_pp r2.z, r1_abs.w, r2.y, r2.x
    mad_pp r2.x, r1.z, r2.y, r2.x
    mul_pp r2.x, r1_abs.w, r2.x
    add_pp r1.w, -r1_abs.w, c16.x
    mad r2.x, r1.z, r2.z, r2.x
    add r2.x, r2.x, c17.z
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, c17.w
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c18.z
    mad r0.w, r0.w, -c18.z, c18.w
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c19.x, r2.x
    mul_pp r0.w, r1.z, r0.w
    texld r2, v0, s1
    mov r3.xyz, c15
    mad_pp r4.xyz, c12, r2, r3.x
    mul_pp r2.xyz, r2, c12
    mad_pp r3.xyw, c13.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c16.y, c16.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c16.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c17.y
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c16.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c16.x
    add_pp r1.y, -r1.z, c16.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c16.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c13.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp r0.xyz, r1, r0, r3.xyww
    mad_sat r0.w, v6.x, c10.z, c10.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c16.x

// approximately 111 instruction slots used (4 texture, 107 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 113 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb6[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  45: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  46: dp3 r3.w, r5.xyzx, r5.xyzx
  47: sqrt r3.w, r3.w
  48: mul r3.w, r3.w, cb2[1].w
  49: mul r3.w, r3.w, l(0.970000)
  50: sample_l r5.xyzw, r5.xyzx, t1.xyzw, s1, l(0.000000)
  51: lt r3.w, r5.x, r3.w
  52: movc r3.w, r3.w, cb3[24].x, l(1.000000)
  53: add_sat r0.w, r0.w, r3.w
  54: min r2.w, r0.w, r2.w
  55: movc r0.w, r1.w, r2.w, r0.w
  56: dp3 r1.w, r4.xyzx, r4.xyzx
  57: sample r4.xyzw, r1.wwww, t2.xyzw, s3
  58: mul r0.w, r0.w, r4.x
  59: mov r4.x, v3.w
  60: mov r4.y, v4.w
  61: mov r4.z, v5.w
  62: dp3 r1.w, r4.xyzx, r4.xyzx
  63: rsq r1.w, r1.w
  64: mul r5.xyz, r1.wwww, r4.xyzx
  65: mul r6.xyz, r0.wwww, cb0[2].xyzx
  66: add r0.w, -cb0[8].w, l(1.000000)
  67: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  68: dp3 r1.w, r4.xyzx, r4.xyzx
  69: max r1.w, r1.w, l(0.001000)
  70: rsq r1.w, r1.w
  71: mul r4.xyz, r1.wwww, r4.xyzx
  72: dp3 r1.w, r2.xyzx, -r3.xyzx
  73: dp3_sat r2.w, r2.xyzx, r5.xyzx
  74: dp3_sat r2.x, r2.xyzx, r4.xyzx
  75: dp3_sat r2.y, r5.xyzx, r4.xyzx
  76: mul r2.z, r2.y, r2.y
  77: dp2 r2.z, r2.zzzz, r0.wwww
  78: add r2.z, r2.z, l(-0.500000)
  79: add r3.x, -r2.w, l(1.000000)
  80: mul r3.y, r3.x, r3.x
  81: mul r3.y, r3.y, r3.y
  82: mul r3.x, r3.x, r3.y
  83: mad r3.x, r2.z, r3.x, l(1.000000)
  84: add r3.y, -|r1.w|, l(1.000000)
  85: mul r3.z, r3.y, r3.y
  86: mul r3.z, r3.z, r3.z
  87: mul r3.y, r3.y, r3.z
  88: mad r2.z, r2.z, r3.y, l(1.000000)
  89: mul r2.z, r2.z, r3.x
  90: mul r2.z, r2.w, r2.z
  91: mul r3.x, r0.w, r0.w
  92: mad r0.w, -r0.w, r0.w, l(1.000000)
  93: mad r3.y, |r1.w|, r0.w, r3.x
  94: mad r0.w, r2.w, r0.w, r3.x
  95: mul r0.w, r0.w, |r1.w|
  96: mad r0.w, r2.w, r3.y, r0.w
  97: add r0.w, r0.w, l(0.000010)
  98: div r0.w, l(0.500000), r0.w
  99: mul r1.w, r3.x, r3.x
 100: mad r3.x, r2.x, r1.w, -r2.x
 101: mad r2.x, r3.x, r2.x, l(1.000000)
 102: mul r1.w, r1.w, l(0.318310)
 103: mad r2.x, r2.x, r2.x, l(0.000000)
 104: div r1.w, r1.w, r2.x
 105: mul r0.w, r0.w, r1.w
 106: mul r0.w, r0.w, l(3.141593)
 107: max r0.w, r0.w, l(0.000100)
 108: sqrt r0.w, r0.w
 109: mul r0.w, r2.w, r0.w
 110: dp3 r1.w, r0.xyzx, r0.xyzx
 111: ne r1.w, r1.w, l(0.000000)
 112: and r1.w, r1.w, l(0x3f800000)
 113: mul r0.w, r0.w, r1.w
 114: mul r2.xzw, r2.zzzz, r6.xxyz
 115: mul r3.xyz, r6.xyzx, r0.wwww
 116: add r0.w, -r2.y, l(1.000000)
 117: mul r1.w, r0.w, r0.w
 118: mul r1.w, r1.w, r1.w
 119: mul r0.w, r0.w, r1.w
 120: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 121: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 122: mul r0.xyz, r0.xyzx, r3.xyzx
 123: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 124: div r0.w, v7.z, cb1[5].y
 125: add r0.w, -r0.w, l(1.000000)
 126: mul r0.w, r0.w, cb1[5].z
 127: max r0.w, r0.w, l(0.000000)
 128: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 129: mul o0.xyz, r0.xyzx, r0.wwww
 130: mov o0.w, l(1.000000)
 131: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE SHADOWS_SOFT FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 120 math, 10 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 12
Float _GlossMapScale at 14
Vector4 _LightColor0 at 11
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 13
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_FogParams at 10
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_FogParams               c10      1
//   _LightColor0                  c11      1
//   _Color                        c12      1
//   _Metallic                     c13      1
//   _GlossMapScale                c14      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c15, -0.220916301, 0.220916301, 0.779083729, 0.0078125
    def c16, 0.970000029, 0.25, 0.00100000005, 31.622776
    def c17, 1, 0, -0.0078125, 0.0078125
    def c18, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c19, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c7.w
    mov r1.w, c17.y
    add r1.xyz, r0, c15.w
    texldl r1, r1, s0
    mov r2.w, c17.y
    add r2.xyz, r0, c17.zzww
    texldl r2, r2, s0
    mov r1.y, r2.x
    add r2.xyz, r0, c17.zwzw
    add r3.xyz, r0, c17.wzzw
    mov r2.w, c17.y
    texldl r2, r2, s0
    mov r1.z, r2.x
    mov r3.w, c17.y
    texldl r2, r3, s0
    mov r1.w, r2.x
    mad r0, r0.w, -c16.x, r1
    mov r1.x, c17.x
    cmp_pp r0, r0, r1.x, c8.x
    dp4_pp r0.x, r0, c16.y
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c17.xxxy, c17.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r0.y, s2
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c11
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c16.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c16.w, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    texld r2, v0, s1
    mad_pp r1.x, r2.w, -c14.x, r1.x
    mul_pp r2.w, r1.x, r1.x
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c17.x
    mad r0.w, r0.w, r0.w, c19.x
    rcp r0.w, r0.w
    mul r3.x, r3.x, c18.w
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.x, -r1.x, c17.x
    mad_pp r3.y, r1.z, r3.x, r2.w
    mad_pp r2.w, r1_abs.w, r3.x, r2.w
    mul_pp r3.x, r1_abs.w, r3.y
    add_pp r1.w, -r1_abs.w, c17.x
    mad r2.w, r1.z, r2.w, r3.x
    add r2.w, r2.w, c18.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c18.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c19.y
    mad r0.w, r0.w, -c19.y, c19.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c19.w, r2.w
    mul_pp r0.w, r1.z, r0.w
    mov r3.xyz, c15
    mad_pp r4.xyz, c12, r2, r3.x
    mul_pp r2.xyz, r2, c12
    mad_pp r3.xyw, c13.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c17.y, c17.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c17.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c18.x
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c17.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c17.x
    add_pp r1.y, -r1.z, c17.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c17.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c13.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp r0.xyz, r1, r0, r3.xyww
    mad_sat r0.w, v6.x, c10.z, c10.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c17.x

// approximately 128 instruction slots used (10 texture, 118 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 119 math, 9 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 9
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb6[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: lt r4.w, r1.w, l(0.990000)
  46: if_nz r4.w
  47:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  48:   dp3 r4.w, r5.xyzx, r5.xyzx
  49:   sqrt r4.w, r4.w
  50:   mul r4.w, r4.w, cb2[1].w
  51:   mul r4.w, r4.w, l(0.970000)
  52:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  53:   sample_l r6.xyzw, r6.xyzx, t1.xyzw, s1, l(0.000000)
  54:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
  55:   sample_l r7.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  56:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  57:   sample_l r8.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  58:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  59:   sample_l r5.xyzw, r5.xyzx, t1.yzwx, s1, l(0.000000)
  60:   mov r5.x, r6.x
  61:   mov r5.y, r7.x
  62:   mov r5.z, r8.x
  63:   lt r5.xyzw, r5.xyzw, r4.wwww
  64:   movc r5.xyzw, r5.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  65:   dp4 r4.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  66: else 
  67:   mov r4.w, l(1.000000)
  68: endif 
  69: add_sat r1.w, r1.w, r4.w
  70: min r3.w, r1.w, r3.w
  71: movc r1.w, r2.w, r3.w, r1.w
  72: dp3 r2.w, r4.xyzx, r4.xyzx
  73: sample r4.xyzw, r2.wwww, t2.xyzw, s3
  74: mul r1.w, r1.w, r4.x
  75: mov r4.x, v3.w
  76: mov r4.y, v4.w
  77: mov r4.z, v5.w
  78: dp3 r2.w, r4.xyzx, r4.xyzx
  79: rsq r2.w, r2.w
  80: mul r5.xyz, r2.wwww, r4.xyzx
  81: mul r6.xyz, r1.wwww, cb0[2].xyzx
  82: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  83: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  84: dp3 r1.w, r4.xyzx, r4.xyzx
  85: max r1.w, r1.w, l(0.001000)
  86: rsq r1.w, r1.w
  87: mul r4.xyz, r1.wwww, r4.xyzx
  88: dp3 r1.w, r2.xyzx, -r3.xyzx
  89: dp3_sat r2.w, r2.xyzx, r5.xyzx
  90: dp3_sat r2.x, r2.xyzx, r4.xyzx
  91: dp3_sat r2.y, r5.xyzx, r4.xyzx
  92: mul r2.z, r2.y, r2.y
  93: dp2 r2.z, r2.zzzz, r0.wwww
  94: add r2.z, r2.z, l(-0.500000)
  95: add r3.x, -r2.w, l(1.000000)
  96: mul r3.y, r3.x, r3.x
  97: mul r3.y, r3.y, r3.y
  98: mul r3.x, r3.x, r3.y
  99: mad r3.x, r2.z, r3.x, l(1.000000)
 100: add r3.y, -|r1.w|, l(1.000000)
 101: mul r3.z, r3.y, r3.y
 102: mul r3.z, r3.z, r3.z
 103: mul r3.y, r3.y, r3.z
 104: mad r2.z, r2.z, r3.y, l(1.000000)
 105: mul r2.z, r2.z, r3.x
 106: mul r2.z, r2.w, r2.z
 107: mul r3.x, r0.w, r0.w
 108: mad r0.w, -r0.w, r0.w, l(1.000000)
 109: mad r3.y, |r1.w|, r0.w, r3.x
 110: mad r0.w, r2.w, r0.w, r3.x
 111: mul r0.w, r0.w, |r1.w|
 112: mad r0.w, r2.w, r3.y, r0.w
 113: add r0.w, r0.w, l(0.000010)
 114: div r0.w, l(0.500000), r0.w
 115: mul r1.w, r3.x, r3.x
 116: mad r3.x, r2.x, r1.w, -r2.x
 117: mad r2.x, r3.x, r2.x, l(1.000000)
 118: mul r1.w, r1.w, l(0.318310)
 119: mad r2.x, r2.x, r2.x, l(0.000000)
 120: div r1.w, r1.w, r2.x
 121: mul r0.w, r0.w, r1.w
 122: mul r0.w, r0.w, l(3.141593)
 123: max r0.w, r0.w, l(0.000100)
 124: sqrt r0.w, r0.w
 125: mul r0.w, r2.w, r0.w
 126: dp3 r1.w, r0.xyzx, r0.xyzx
 127: ne r1.w, r1.w, l(0.000000)
 128: and r1.w, r1.w, l(0x3f800000)
 129: mul r0.w, r0.w, r1.w
 130: mul r2.xzw, r2.zzzz, r6.xxyz
 131: mul r3.xyz, r6.xyzx, r0.wwww
 132: add r0.w, -r2.y, l(1.000000)
 133: mul r1.w, r0.w, r0.w
 134: mul r1.w, r1.w, r1.w
 135: mul r0.w, r0.w, r1.w
 136: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 137: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 138: mul r0.xyz, r0.xyzx, r3.xyzx
 139: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 140: div r0.w, v7.z, cb1[5].y
 141: add r0.w, -r0.w, l(1.000000)
 142: mul r0.w, r0.w, cb1[5].z
 143: max r0.w, r0.w, l(0.000000)
 144: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 145: mul o0.xyz, r0.xyzx, r0.wwww
 146: mov o0.w, l(1.000000)
 147: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 120 math, 10 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 12
Float _Glossiness at 14
Vector4 _LightColor0 at 11
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 13
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_FogParams at 10
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_FogParams               c10      1
//   _LightColor0                  c11      1
//   _Color                        c12      1
//   _Metallic                     c13      1
//   _Glossiness                   c14      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c15, -0.220916301, 0.220916301, 0.779083729, 0.0078125
    def c16, 0.970000029, 0.25, 0.00100000005, 31.622776
    def c17, 1, 0, -0.0078125, 0.0078125
    def c18, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c19, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c7.w
    mov r1.w, c17.y
    add r1.xyz, r0, c15.w
    texldl r1, r1, s0
    mov r2.w, c17.y
    add r2.xyz, r0, c17.zzww
    texldl r2, r2, s0
    mov r1.y, r2.x
    add r2.xyz, r0, c17.zwzw
    add r3.xyz, r0, c17.wzzw
    mov r2.w, c17.y
    texldl r2, r2, s0
    mov r1.z, r2.x
    mov r3.w, c17.y
    texldl r2, r3, s0
    mov r1.w, r2.x
    mad r0, r0.w, -c16.x, r1
    mov r1.x, c17.x
    cmp_pp r0, r0, r1.x, c8.x
    dp4_pp r0.x, r0, c16.y
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c17.xxxy, c17.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r0.y, s2
    mul_pp r0.x, r0.x, r2.x
    mul_pp r0.xyz, r0.x, c11
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c16.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c16.w, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    add_pp r1.x, r1.x, -c14.x
    mul_pp r2.x, r1.x, r1.x
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c17.x
    mad r0.w, r0.w, r0.w, c19.x
    rcp r0.w, r0.w
    mul r2.y, r2.y, c18.w
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.x, -r1.x, c17.x
    mad_pp r2.z, r1_abs.w, r2.y, r2.x
    mad_pp r2.x, r1.z, r2.y, r2.x
    mul_pp r2.x, r1_abs.w, r2.x
    add_pp r1.w, -r1_abs.w, c17.x
    mad r2.x, r1.z, r2.z, r2.x
    add r2.x, r2.x, c18.y
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, c18.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c19.y
    mad r0.w, r0.w, -c19.y, c19.z
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c19.w, r2.x
    mul_pp r0.w, r1.z, r0.w
    texld r2, v0, s1
    mov r3.xyz, c15
    mad_pp r4.xyz, c12, r2, r3.x
    mul_pp r2.xyz, r2, c12
    mad_pp r3.xyw, c13.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c17.y, c17.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c17.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c18.x
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c17.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c17.x
    add_pp r1.y, -r1.z, c17.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c17.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c13.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp r0.xyz, r1, r0, r3.xyww
    mad_sat r0.w, v6.x, c10.z, c10.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c17.x

// approximately 128 instruction slots used (10 texture, 118 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 119 math, 9 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 9
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb6[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  45: lt r3.w, r0.w, l(0.990000)
  46: if_nz r3.w
  47:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  48:   dp3 r3.w, r5.xyzx, r5.xyzx
  49:   sqrt r3.w, r3.w
  50:   mul r3.w, r3.w, cb2[1].w
  51:   mul r3.w, r3.w, l(0.970000)
  52:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  53:   sample_l r6.xyzw, r6.xyzx, t1.xyzw, s1, l(0.000000)
  54:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
  55:   sample_l r7.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  56:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  57:   sample_l r8.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  58:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  59:   sample_l r5.xyzw, r5.xyzx, t1.yzwx, s1, l(0.000000)
  60:   mov r5.x, r6.x
  61:   mov r5.y, r7.x
  62:   mov r5.z, r8.x
  63:   lt r5.xyzw, r5.xyzw, r3.wwww
  64:   movc r5.xyzw, r5.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  65:   dp4 r3.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  66: else 
  67:   mov r3.w, l(1.000000)
  68: endif 
  69: add_sat r0.w, r0.w, r3.w
  70: min r2.w, r0.w, r2.w
  71: movc r0.w, r1.w, r2.w, r0.w
  72: dp3 r1.w, r4.xyzx, r4.xyzx
  73: sample r4.xyzw, r1.wwww, t2.xyzw, s3
  74: mul r0.w, r0.w, r4.x
  75: mov r4.x, v3.w
  76: mov r4.y, v4.w
  77: mov r4.z, v5.w
  78: dp3 r1.w, r4.xyzx, r4.xyzx
  79: rsq r1.w, r1.w
  80: mul r5.xyz, r1.wwww, r4.xyzx
  81: mul r6.xyz, r0.wwww, cb0[2].xyzx
  82: add r0.w, -cb0[8].w, l(1.000000)
  83: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  84: dp3 r1.w, r4.xyzx, r4.xyzx
  85: max r1.w, r1.w, l(0.001000)
  86: rsq r1.w, r1.w
  87: mul r4.xyz, r1.wwww, r4.xyzx
  88: dp3 r1.w, r2.xyzx, -r3.xyzx
  89: dp3_sat r2.w, r2.xyzx, r5.xyzx
  90: dp3_sat r2.x, r2.xyzx, r4.xyzx
  91: dp3_sat r2.y, r5.xyzx, r4.xyzx
  92: mul r2.z, r2.y, r2.y
  93: dp2 r2.z, r2.zzzz, r0.wwww
  94: add r2.z, r2.z, l(-0.500000)
  95: add r3.x, -r2.w, l(1.000000)
  96: mul r3.y, r3.x, r3.x
  97: mul r3.y, r3.y, r3.y
  98: mul r3.x, r3.x, r3.y
  99: mad r3.x, r2.z, r3.x, l(1.000000)
 100: add r3.y, -|r1.w|, l(1.000000)
 101: mul r3.z, r3.y, r3.y
 102: mul r3.z, r3.z, r3.z
 103: mul r3.y, r3.y, r3.z
 104: mad r2.z, r2.z, r3.y, l(1.000000)
 105: mul r2.z, r2.z, r3.x
 106: mul r2.z, r2.w, r2.z
 107: mul r3.x, r0.w, r0.w
 108: mad r0.w, -r0.w, r0.w, l(1.000000)
 109: mad r3.y, |r1.w|, r0.w, r3.x
 110: mad r0.w, r2.w, r0.w, r3.x
 111: mul r0.w, r0.w, |r1.w|
 112: mad r0.w, r2.w, r3.y, r0.w
 113: add r0.w, r0.w, l(0.000010)
 114: div r0.w, l(0.500000), r0.w
 115: mul r1.w, r3.x, r3.x
 116: mad r3.x, r2.x, r1.w, -r2.x
 117: mad r2.x, r3.x, r2.x, l(1.000000)
 118: mul r1.w, r1.w, l(0.318310)
 119: mad r2.x, r2.x, r2.x, l(0.000000)
 120: div r1.w, r1.w, r2.x
 121: mul r0.w, r0.w, r1.w
 122: mul r0.w, r0.w, l(3.141593)
 123: max r0.w, r0.w, l(0.000100)
 124: sqrt r0.w, r0.w
 125: mul r0.w, r2.w, r0.w
 126: dp3 r1.w, r0.xyzx, r0.xyzx
 127: ne r1.w, r1.w, l(0.000000)
 128: and r1.w, r1.w, l(0x3f800000)
 129: mul r0.w, r0.w, r1.w
 130: mul r2.xzw, r2.zzzz, r6.xxyz
 131: mul r3.xyz, r6.xyzx, r0.wwww
 132: add r0.w, -r2.y, l(1.000000)
 133: mul r1.w, r0.w, r0.w
 134: mul r1.w, r1.w, r1.w
 135: mul r0.w, r0.w, r1.w
 136: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 137: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 138: mul r0.xyz, r0.xyzx, r3.xyzx
 139: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 140: div r0.w, v7.z, cb1[5].y
 141: add r0.w, -r0.w, l(1.000000)
 142: mul r0.w, r0.w, cb1[5].z
 143: max r0.w, r0.w, l(0.000000)
 144: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 145: mul o0.xyz, r0.xyzx, r0.wwww
 146: mov o0.w, l(1.000000)
 147: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 110 math, 5 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 12
Float _GlossMapScale at 14
Vector4 _LightColor0 at 11
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 13
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_FogParams at 10
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_FogParams               c10      1
//   _LightColor0                  c11      1
//   _Color                        c12      1
//   _Metallic                     c13      1
//   _GlossMapScale                c14      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c15, -0.220916301, 0.220916301, 0.779083729, 0
    def c16, 1, 0, 0.970000029, 0.00100000005
    def c17, 31.622776, -0.5, 9.99999975e-006, 0.5
    def c18, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c19, 0.00999999978, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_cube s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    add r0.xyz, -c7, v5
    dp3 r1.x, r0, r0
    rsq r1.x, r1.x
    rcp r1.x, r1.x
    mul r1.x, r1.x, c7.w
    mov r0.w, c15.w
    texldl r0, r0, s0
    mad r0.x, r1.x, -c16.z, r0.x
    mov r1.x, c16.x
    cmp_pp r0.x, r0.x, r1.x, c8.x
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r3, s2
    texld r3, r0.y, s3
    mul r0.y, r2.w, r3.x
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c11
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c16.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c17.x, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    texld r2, v0, s1
    mad_pp r1.x, r2.w, -c14.x, r1.x
    mul_pp r2.w, r1.x, r1.x
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c16.x
    mad r0.w, r0.w, r0.w, c18.y
    rcp r0.w, r0.w
    mul r3.x, r3.x, c18.x
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.x, -r1.x, c16.x
    mad_pp r3.y, r1.z, r3.x, r2.w
    mad_pp r2.w, r1_abs.w, r3.x, r2.w
    mul_pp r3.x, r1_abs.w, r3.y
    add_pp r1.w, -r1_abs.w, c16.x
    mad r2.w, r1.z, r2.w, r3.x
    add r2.w, r2.w, c17.z
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c17.w
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c18.z
    mad r0.w, r0.w, -c18.z, c18.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c19.x, r2.w
    mul_pp r0.w, r1.z, r0.w
    mov r3.xyz, c15
    mad_pp r4.xyz, c12, r2, r3.x
    mul_pp r2.xyz, r2, c12
    mad_pp r3.xyw, c13.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c16.y, c16.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c16.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c17.y
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c16.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c16.x
    add_pp r1.y, -r1.z, c16.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c16.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c13.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp r0.xyz, r1, r0, r3.xyww
    mad_sat r0.w, v6.x, c10.z, c10.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c16.x

// approximately 113 instruction slots used (5 texture, 108 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 114 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb6[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.w
  40:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  46: dp3 r4.w, r5.xyzx, r5.xyzx
  47: sqrt r4.w, r4.w
  48: mul r4.w, r4.w, cb2[1].w
  49: mul r4.w, r4.w, l(0.970000)
  50: sample_l r5.xyzw, r5.xyzx, t1.xyzw, s1, l(0.000000)
  51: lt r4.w, r5.x, r4.w
  52: movc r4.w, r4.w, cb3[24].x, l(1.000000)
  53: add_sat r1.w, r1.w, r4.w
  54: min r3.w, r1.w, r3.w
  55: movc r1.w, r2.w, r3.w, r1.w
  56: dp3 r2.w, r4.xyzx, r4.xyzx
  57: sample r5.xyzw, r2.wwww, t2.xyzw, s4
  58: sample r4.xyzw, r4.xyzx, t3.xyzw, s3
  59: mul r2.w, r4.w, r5.x
  60: mul r1.w, r1.w, r2.w
  61: mov r4.x, v3.w
  62: mov r4.y, v4.w
  63: mov r4.z, v5.w
  64: dp3 r2.w, r4.xyzx, r4.xyzx
  65: rsq r2.w, r2.w
  66: mul r5.xyz, r2.wwww, r4.xyzx
  67: mul r6.xyz, r1.wwww, cb0[2].xyzx
  68: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  69: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  70: dp3 r1.w, r4.xyzx, r4.xyzx
  71: max r1.w, r1.w, l(0.001000)
  72: rsq r1.w, r1.w
  73: mul r4.xyz, r1.wwww, r4.xyzx
  74: dp3 r1.w, r2.xyzx, -r3.xyzx
  75: dp3_sat r2.w, r2.xyzx, r5.xyzx
  76: dp3_sat r2.x, r2.xyzx, r4.xyzx
  77: dp3_sat r2.y, r5.xyzx, r4.xyzx
  78: mul r2.z, r2.y, r2.y
  79: dp2 r2.z, r2.zzzz, r0.wwww
  80: add r2.z, r2.z, l(-0.500000)
  81: add r3.x, -r2.w, l(1.000000)
  82: mul r3.y, r3.x, r3.x
  83: mul r3.y, r3.y, r3.y
  84: mul r3.x, r3.x, r3.y
  85: mad r3.x, r2.z, r3.x, l(1.000000)
  86: add r3.y, -|r1.w|, l(1.000000)
  87: mul r3.z, r3.y, r3.y
  88: mul r3.z, r3.z, r3.z
  89: mul r3.y, r3.y, r3.z
  90: mad r2.z, r2.z, r3.y, l(1.000000)
  91: mul r2.z, r2.z, r3.x
  92: mul r2.z, r2.w, r2.z
  93: mul r3.x, r0.w, r0.w
  94: mad r0.w, -r0.w, r0.w, l(1.000000)
  95: mad r3.y, |r1.w|, r0.w, r3.x
  96: mad r0.w, r2.w, r0.w, r3.x
  97: mul r0.w, r0.w, |r1.w|
  98: mad r0.w, r2.w, r3.y, r0.w
  99: add r0.w, r0.w, l(0.000010)
 100: div r0.w, l(0.500000), r0.w
 101: mul r1.w, r3.x, r3.x
 102: mad r3.x, r2.x, r1.w, -r2.x
 103: mad r2.x, r3.x, r2.x, l(1.000000)
 104: mul r1.w, r1.w, l(0.318310)
 105: mad r2.x, r2.x, r2.x, l(0.000000)
 106: div r1.w, r1.w, r2.x
 107: mul r0.w, r0.w, r1.w
 108: mul r0.w, r0.w, l(3.141593)
 109: max r0.w, r0.w, l(0.000100)
 110: sqrt r0.w, r0.w
 111: mul r0.w, r2.w, r0.w
 112: dp3 r1.w, r0.xyzx, r0.xyzx
 113: ne r1.w, r1.w, l(0.000000)
 114: and r1.w, r1.w, l(0x3f800000)
 115: mul r0.w, r0.w, r1.w
 116: mul r2.xzw, r2.zzzz, r6.xxyz
 117: mul r3.xyz, r6.xyzx, r0.wwww
 118: add r0.w, -r2.y, l(1.000000)
 119: mul r1.w, r0.w, r0.w
 120: mul r1.w, r1.w, r1.w
 121: mul r0.w, r0.w, r1.w
 122: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 123: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 124: mul r0.xyz, r0.xyzx, r3.xyzx
 125: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 126: div r0.w, v7.z, cb1[5].y
 127: add r0.w, -r0.w, l(1.000000)
 128: mul r0.w, r0.w, cb1[5].z
 129: max r0.w, r0.w, l(0.000000)
 130: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 131: mul o0.xyz, r0.xyzx, r0.wwww
 132: mov o0.w, l(1.000000)
 133: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 110 math, 5 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 12
Float _Glossiness at 14
Vector4 _LightColor0 at 11
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 13
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_FogParams at 10
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_FogParams               c10      1
//   _LightColor0                  c11      1
//   _Color                        c12      1
//   _Metallic                     c13      1
//   _Glossiness                   c14      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c15, -0.220916301, 0.220916301, 0.779083729, 0
    def c16, 1, 0, 0.970000029, 0.00100000005
    def c17, 31.622776, -0.5, 9.99999975e-006, 0.5
    def c18, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c19, 0.00999999978, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_cube s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    add r0.xyz, -c7, v5
    dp3 r1.x, r0, r0
    rsq r1.x, r1.x
    rcp r1.x, r1.x
    mul r1.x, r1.x, c7.w
    mov r0.w, c15.w
    texldl r0, r0, s0
    mad r0.x, r1.x, -c16.z, r0.x
    mov r1.x, c16.x
    cmp_pp r0.x, r0.x, r1.x, c8.x
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c16.xxxy, c16.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r3, s2
    texld r3, r0.y, s3
    mul r0.y, r2.w, r3.x
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c11
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c16.w
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c17.x, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    add_pp r1.x, r1.x, -c14.x
    mul_pp r2.x, r1.x, r1.x
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c16.x
    mad r0.w, r0.w, r0.w, c18.y
    rcp r0.w, r0.w
    mul r2.y, r2.y, c18.x
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.x, -r1.x, c16.x
    mad_pp r2.z, r1_abs.w, r2.y, r2.x
    mad_pp r2.x, r1.z, r2.y, r2.x
    mul_pp r2.x, r1_abs.w, r2.x
    add_pp r1.w, -r1_abs.w, c16.x
    mad r2.x, r1.z, r2.z, r2.x
    add r2.x, r2.x, c17.z
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, c17.w
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c18.z
    mad r0.w, r0.w, -c18.z, c18.w
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c19.x, r2.x
    mul_pp r0.w, r1.z, r0.w
    texld r2, v0, s1
    mov r3.xyz, c15
    mad_pp r4.xyz, c12, r2, r3.x
    mul_pp r2.xyz, r2, c12
    mad_pp r3.xyw, c13.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c16.y, c16.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c16.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c17.y
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c16.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c16.x
    add_pp r1.y, -r1.z, c16.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c16.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c13.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp r0.xyz, r1, r0, r3.xyww
    mad_sat r0.w, v6.x, c10.z, c10.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c16.x

// approximately 113 instruction slots used (5 texture, 108 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 114 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb6[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  45: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  46: dp3 r3.w, r5.xyzx, r5.xyzx
  47: sqrt r3.w, r3.w
  48: mul r3.w, r3.w, cb2[1].w
  49: mul r3.w, r3.w, l(0.970000)
  50: sample_l r5.xyzw, r5.xyzx, t1.xyzw, s1, l(0.000000)
  51: lt r3.w, r5.x, r3.w
  52: movc r3.w, r3.w, cb3[24].x, l(1.000000)
  53: add_sat r0.w, r0.w, r3.w
  54: min r2.w, r0.w, r2.w
  55: movc r0.w, r1.w, r2.w, r0.w
  56: dp3 r1.w, r4.xyzx, r4.xyzx
  57: sample r5.xyzw, r1.wwww, t2.xyzw, s4
  58: sample r4.xyzw, r4.xyzx, t3.xyzw, s3
  59: mul r1.w, r4.w, r5.x
  60: mul r0.w, r0.w, r1.w
  61: mov r4.x, v3.w
  62: mov r4.y, v4.w
  63: mov r4.z, v5.w
  64: dp3 r1.w, r4.xyzx, r4.xyzx
  65: rsq r1.w, r1.w
  66: mul r5.xyz, r1.wwww, r4.xyzx
  67: mul r6.xyz, r0.wwww, cb0[2].xyzx
  68: add r0.w, -cb0[8].w, l(1.000000)
  69: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  70: dp3 r1.w, r4.xyzx, r4.xyzx
  71: max r1.w, r1.w, l(0.001000)
  72: rsq r1.w, r1.w
  73: mul r4.xyz, r1.wwww, r4.xyzx
  74: dp3 r1.w, r2.xyzx, -r3.xyzx
  75: dp3_sat r2.w, r2.xyzx, r5.xyzx
  76: dp3_sat r2.x, r2.xyzx, r4.xyzx
  77: dp3_sat r2.y, r5.xyzx, r4.xyzx
  78: mul r2.z, r2.y, r2.y
  79: dp2 r2.z, r2.zzzz, r0.wwww
  80: add r2.z, r2.z, l(-0.500000)
  81: add r3.x, -r2.w, l(1.000000)
  82: mul r3.y, r3.x, r3.x
  83: mul r3.y, r3.y, r3.y
  84: mul r3.x, r3.x, r3.y
  85: mad r3.x, r2.z, r3.x, l(1.000000)
  86: add r3.y, -|r1.w|, l(1.000000)
  87: mul r3.z, r3.y, r3.y
  88: mul r3.z, r3.z, r3.z
  89: mul r3.y, r3.y, r3.z
  90: mad r2.z, r2.z, r3.y, l(1.000000)
  91: mul r2.z, r2.z, r3.x
  92: mul r2.z, r2.w, r2.z
  93: mul r3.x, r0.w, r0.w
  94: mad r0.w, -r0.w, r0.w, l(1.000000)
  95: mad r3.y, |r1.w|, r0.w, r3.x
  96: mad r0.w, r2.w, r0.w, r3.x
  97: mul r0.w, r0.w, |r1.w|
  98: mad r0.w, r2.w, r3.y, r0.w
  99: add r0.w, r0.w, l(0.000010)
 100: div r0.w, l(0.500000), r0.w
 101: mul r1.w, r3.x, r3.x
 102: mad r3.x, r2.x, r1.w, -r2.x
 103: mad r2.x, r3.x, r2.x, l(1.000000)
 104: mul r1.w, r1.w, l(0.318310)
 105: mad r2.x, r2.x, r2.x, l(0.000000)
 106: div r1.w, r1.w, r2.x
 107: mul r0.w, r0.w, r1.w
 108: mul r0.w, r0.w, l(3.141593)
 109: max r0.w, r0.w, l(0.000100)
 110: sqrt r0.w, r0.w
 111: mul r0.w, r2.w, r0.w
 112: dp3 r1.w, r0.xyzx, r0.xyzx
 113: ne r1.w, r1.w, l(0.000000)
 114: and r1.w, r1.w, l(0x3f800000)
 115: mul r0.w, r0.w, r1.w
 116: mul r2.xzw, r2.zzzz, r6.xxyz
 117: mul r3.xyz, r6.xyzx, r0.wwww
 118: add r0.w, -r2.y, l(1.000000)
 119: mul r1.w, r0.w, r0.w
 120: mul r1.w, r1.w, r1.w
 121: mul r0.w, r0.w, r1.w
 122: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 123: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 124: mul r0.xyz, r0.xyzx, r3.xyzx
 125: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 126: div r0.w, v7.z, cb1[5].y
 127: add r0.w, -r0.w, l(1.000000)
 128: mul r0.w, r0.w, cb1[5].z
 129: max r0.w, r0.w, l(0.000000)
 130: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 131: mul o0.xyz, r0.xyzx, r0.wwww
 132: mov o0.w, l(1.000000)
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 121 math, 11 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 12
Float _GlossMapScale at 14
Vector4 _LightColor0 at 11
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 13
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_FogParams at 10
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_FogParams               c10      1
//   _LightColor0                  c11      1
//   _Color                        c12      1
//   _Metallic                     c13      1
//   _GlossMapScale                c14      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c15, -0.220916301, 0.220916301, 0.779083729, 0.0078125
    def c16, 0.970000029, 0.25, 0.00100000005, 31.622776
    def c17, 1, 0, -0.0078125, 0.0078125
    def c18, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c19, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_cube s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    add r0.xyz, -c7, v5
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c7.w
    mov r1.w, c17.y
    add r1.xyz, r0, c15.w
    texldl r1, r1, s0
    mov r2.w, c17.y
    add r2.xyz, r0, c17.zzww
    texldl r2, r2, s0
    mov r1.y, r2.x
    add r2.xyz, r0, c17.zwzw
    add r3.xyz, r0, c17.wzzw
    mov r2.w, c17.y
    texldl r2, r2, s0
    mov r1.z, r2.x
    mov r3.w, c17.y
    texldl r2, r3, s0
    mov r1.w, r2.x
    mad r0, r0.w, -c16.x, r1
    mov r1.x, c17.x
    cmp_pp r0, r0, r1.x, c8.x
    dp4_pp r0.x, r0, c16.y
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c17.xxxy, c17.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r3, s2
    texld r3, r0.y, s3
    mul r0.y, r2.w, r3.x
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c11
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c16.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c16.w, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    texld r2, v0, s1
    mad_pp r1.x, r2.w, -c14.x, r1.x
    mul_pp r2.w, r1.x, r1.x
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c17.x
    mad r0.w, r0.w, r0.w, c19.x
    rcp r0.w, r0.w
    mul r3.x, r3.x, c18.w
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.x, -r1.x, c17.x
    mad_pp r3.y, r1.z, r3.x, r2.w
    mad_pp r2.w, r1_abs.w, r3.x, r2.w
    mul_pp r3.x, r1_abs.w, r3.y
    add_pp r1.w, -r1_abs.w, c17.x
    mad r2.w, r1.z, r2.w, r3.x
    add r2.w, r2.w, c18.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c18.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c19.y
    mad r0.w, r0.w, -c19.y, c19.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c19.w, r2.w
    mul_pp r0.w, r1.z, r0.w
    mov r3.xyz, c15
    mad_pp r4.xyz, c12, r2, r3.x
    mul_pp r2.xyz, r2, c12
    mad_pp r3.xyw, c13.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c17.y, c17.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c17.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c18.x
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c17.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c17.x
    add_pp r1.y, -r1.z, c17.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c17.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c13.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp r0.xyz, r1, r0, r3.xyww
    mad_sat r0.w, v6.x, c10.z, c10.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c17.x

// approximately 130 instruction slots used (11 texture, 119 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 120 math, 9 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 9
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb6[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.w
  40:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: lt r4.w, r1.w, l(0.990000)
  46: if_nz r4.w
  47:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  48:   dp3 r4.w, r5.xyzx, r5.xyzx
  49:   sqrt r4.w, r4.w
  50:   mul r4.w, r4.w, cb2[1].w
  51:   mul r4.w, r4.w, l(0.970000)
  52:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  53:   sample_l r6.xyzw, r6.xyzx, t1.xyzw, s1, l(0.000000)
  54:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
  55:   sample_l r7.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  56:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  57:   sample_l r8.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  58:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  59:   sample_l r5.xyzw, r5.xyzx, t1.yzwx, s1, l(0.000000)
  60:   mov r5.x, r6.x
  61:   mov r5.y, r7.x
  62:   mov r5.z, r8.x
  63:   lt r5.xyzw, r5.xyzw, r4.wwww
  64:   movc r5.xyzw, r5.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  65:   dp4 r4.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  66: else 
  67:   mov r4.w, l(1.000000)
  68: endif 
  69: add_sat r1.w, r1.w, r4.w
  70: min r3.w, r1.w, r3.w
  71: movc r1.w, r2.w, r3.w, r1.w
  72: dp3 r2.w, r4.xyzx, r4.xyzx
  73: sample r5.xyzw, r2.wwww, t2.xyzw, s4
  74: sample r4.xyzw, r4.xyzx, t3.xyzw, s3
  75: mul r2.w, r4.w, r5.x
  76: mul r1.w, r1.w, r2.w
  77: mov r4.x, v3.w
  78: mov r4.y, v4.w
  79: mov r4.z, v5.w
  80: dp3 r2.w, r4.xyzx, r4.xyzx
  81: rsq r2.w, r2.w
  82: mul r5.xyz, r2.wwww, r4.xyzx
  83: mul r6.xyz, r1.wwww, cb0[2].xyzx
  84: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  85: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  86: dp3 r1.w, r4.xyzx, r4.xyzx
  87: max r1.w, r1.w, l(0.001000)
  88: rsq r1.w, r1.w
  89: mul r4.xyz, r1.wwww, r4.xyzx
  90: dp3 r1.w, r2.xyzx, -r3.xyzx
  91: dp3_sat r2.w, r2.xyzx, r5.xyzx
  92: dp3_sat r2.x, r2.xyzx, r4.xyzx
  93: dp3_sat r2.y, r5.xyzx, r4.xyzx
  94: mul r2.z, r2.y, r2.y
  95: dp2 r2.z, r2.zzzz, r0.wwww
  96: add r2.z, r2.z, l(-0.500000)
  97: add r3.x, -r2.w, l(1.000000)
  98: mul r3.y, r3.x, r3.x
  99: mul r3.y, r3.y, r3.y
 100: mul r3.x, r3.x, r3.y
 101: mad r3.x, r2.z, r3.x, l(1.000000)
 102: add r3.y, -|r1.w|, l(1.000000)
 103: mul r3.z, r3.y, r3.y
 104: mul r3.z, r3.z, r3.z
 105: mul r3.y, r3.y, r3.z
 106: mad r2.z, r2.z, r3.y, l(1.000000)
 107: mul r2.z, r2.z, r3.x
 108: mul r2.z, r2.w, r2.z
 109: mul r3.x, r0.w, r0.w
 110: mad r0.w, -r0.w, r0.w, l(1.000000)
 111: mad r3.y, |r1.w|, r0.w, r3.x
 112: mad r0.w, r2.w, r0.w, r3.x
 113: mul r0.w, r0.w, |r1.w|
 114: mad r0.w, r2.w, r3.y, r0.w
 115: add r0.w, r0.w, l(0.000010)
 116: div r0.w, l(0.500000), r0.w
 117: mul r1.w, r3.x, r3.x
 118: mad r3.x, r2.x, r1.w, -r2.x
 119: mad r2.x, r3.x, r2.x, l(1.000000)
 120: mul r1.w, r1.w, l(0.318310)
 121: mad r2.x, r2.x, r2.x, l(0.000000)
 122: div r1.w, r1.w, r2.x
 123: mul r0.w, r0.w, r1.w
 124: mul r0.w, r0.w, l(3.141593)
 125: max r0.w, r0.w, l(0.000100)
 126: sqrt r0.w, r0.w
 127: mul r0.w, r2.w, r0.w
 128: dp3 r1.w, r0.xyzx, r0.xyzx
 129: ne r1.w, r1.w, l(0.000000)
 130: and r1.w, r1.w, l(0x3f800000)
 131: mul r0.w, r0.w, r1.w
 132: mul r2.xzw, r2.zzzz, r6.xxyz
 133: mul r3.xyz, r6.xyzx, r0.wwww
 134: add r0.w, -r2.y, l(1.000000)
 135: mul r1.w, r0.w, r0.w
 136: mul r1.w, r1.w, r1.w
 137: mul r0.w, r0.w, r1.w
 138: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 139: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 140: mul r0.xyz, r0.xyzx, r3.xyzx
 141: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 142: div r0.w, v7.z, cb1[5].y
 143: add r0.w, -r0.w, l(1.000000)
 144: mul r0.w, r0.w, cb1[5].z
 145: max r0.w, r0.w, l(0.000000)
 146: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 147: mul o0.xyz, r0.xyzx, r0.wwww
 148: mov o0.w, l(1.000000)
 149: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 121 math, 11 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x3 unity_WorldToLight at 3
Vector4 _Color at 12
Float _Glossiness at 14
Vector4 _LightColor0 at 11
Vector4 _LightPositionRange at 7
Vector4 _LightShadowData at 8
Float _Metallic at 13
Vector4 _WorldSpaceCameraPos at 6
Vector4 unity_FogParams at 10
Vector4 unity_ShadowFadeCenterAndType at 9

Set CUBE Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       3
//   _WorldSpaceCameraPos          c6       1
//   _LightPositionRange           c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_FogParams               c10      1
//   _LightColor0                  c11      1
//   _Color                        c12      1
//   _Metallic                     c13      1
//   _Glossiness                   c14      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _LightTexture0                s2       1
//   _LightTextureB0               s3       1
//

    ps_3_0
    def c15, -0.220916301, 0.220916301, 0.779083729, 0.0078125
    def c16, 0.970000029, 0.25, 0.00100000005, 31.622776
    def c17, 1, 0, -0.0078125, 0.0078125
    def c18, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c19, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_cube s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    add r0.xyz, -c7, v5
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c7.w
    mov r1.w, c17.y
    add r1.xyz, r0, c15.w
    texldl r1, r1, s0
    mov r2.w, c17.y
    add r2.xyz, r0, c17.zzww
    texldl r2, r2, s0
    mov r1.y, r2.x
    add r2.xyz, r0, c17.zwzw
    add r3.xyz, r0, c17.wzzw
    mov r2.w, c17.y
    texldl r2, r2, s0
    mov r1.z, r2.x
    mov r3.w, c17.y
    texldl r2, r3, s0
    mov r1.w, r2.x
    mad r0, r0.w, -c16.x, r1
    mov r1.x, c17.x
    cmp_pp r0, r0, r1.x, c8.x
    dp4_pp r0.x, r0, c16.y
    add r0.yzw, -c9.xxyz, v5.xxyz
    dp3 r0.y, r0.yzww, r0.yzww
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    add r1.yzw, c6.xxyz, -v5.xxyz
    dp3 r0.z, r1.yzww, c2
    lrp r1.y, c9.w, r0.y, r0.z
    mad_sat_pp r0.y, r1.y, c8.z, c8.w
    add_sat_pp r0.x, r0.y, r0.x
    mad r2, v5.xyzx, c17.xxxy, c17.yyyx
    dp4 r3.x, c3, r2
    dp4 r3.y, c4, r2
    dp4 r3.z, c5, r2
    dp3 r0.y, r3, r3
    texld r2, r3, s2
    texld r3, r0.y, s3
    mul r0.y, r2.w, r3.x
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.xyz, r0.x, c11
    nrm_pp r2.xyz, v1
    mov_pp r3.x, v2.w
    mov_pp r3.y, v3.w
    mov_pp r3.z, v4.w
    dp3_pp r0.w, r3, r3
    rsq_pp r0.w, r0.w
    mad_pp r1.yzw, r3.xxyz, r0.w, -r2.xxyz
    mul_pp r3.xyz, r0.w, r3
    dp3_pp r0.w, r1.yzww, r1.yzww
    add r2.w, -r0.w, c16.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r2.w, c16.w, r0.w
    mul_pp r1.yzw, r0.w, r1
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r1.yzww
    dp3_sat_pp r1.y, r3, r1.yzww
    dp3_sat_pp r1.z, r4, r3
    dp3_pp r1.w, r4, -r2
    add_pp r1.x, r1.x, -c14.x
    mul_pp r2.x, r1.x, r1.x
    mul_pp r2.y, r2.x, r2.x
    mad_pp r2.z, r0.w, r2.y, -r0.w
    mad_pp r0.w, r2.z, r0.w, c17.x
    mad r0.w, r0.w, r0.w, c19.x
    rcp r0.w, r0.w
    mul r2.y, r2.y, c18.w
    mul_pp r0.w, r0.w, r2.y
    mad_pp r2.y, r1.x, -r1.x, c17.x
    mad_pp r2.z, r1_abs.w, r2.y, r2.x
    mad_pp r2.x, r1.z, r2.y, r2.x
    mul_pp r2.x, r1_abs.w, r2.x
    add_pp r1.w, -r1_abs.w, c17.x
    mad r2.x, r1.z, r2.z, r2.x
    add r2.x, r2.x, c18.y
    rcp r2.x, r2.x
    mul_pp r2.x, r2.x, c18.z
    mul r0.w, r0.w, r2.x
    mul_pp r2.x, r0.w, c19.y
    mad r0.w, r0.w, -c19.y, c19.z
    rsq r2.x, r2.x
    rcp_pp r2.x, r2.x
    cmp_pp r0.w, r0.w, c19.w, r2.x
    mul_pp r0.w, r1.z, r0.w
    texld r2, v0, s1
    mov r3.xyz, c15
    mad_pp r4.xyz, c12, r2, r3.x
    mul_pp r2.xyz, r2, c12
    mad_pp r3.xyw, c13.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c17.y, c17.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.y, c17.x
    mul_pp r1.y, r1.y, r1.y
    dp2add_pp r1.x, r1.y, r1.x, c18.x
    mul_pp r1.y, r0.w, r0.w
    mul_pp r1.y, r1.y, r1.y
    mul_pp r0.w, r0.w, r1.y
    lrp_pp r5.xyz, r0.w, c17.x, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.w, r0.w
    mad_pp r0.w, r1.x, r0.w, c17.x
    add_pp r1.y, -r1.z, c17.x
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.x, r1.x, r1.y, c17.x
    mul_pp r0.w, r0.w, r1.x
    mul_pp r0.w, r1.z, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c13.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp r0.xyz, r1, r0, r3.xyww
    mad_sat r0.w, v6.x, c10.z, c10.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c17.x

// approximately 130 instruction slots used (11 texture, 119 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 120 math, 9 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 9
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r0.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r5.xyzx, r5.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb6[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r2.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r2.w, r3.w
  40:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r5.xyzw, cb2[45].xyzw
  45: lt r3.w, r0.w, l(0.990000)
  46: if_nz r3.w
  47:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  48:   dp3 r3.w, r5.xyzx, r5.xyzx
  49:   sqrt r3.w, r3.w
  50:   mul r3.w, r3.w, cb2[1].w
  51:   mul r3.w, r3.w, l(0.970000)
  52:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  53:   sample_l r6.xyzw, r6.xyzx, t1.xyzw, s1, l(0.000000)
  54:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, -0.007813, 0.007813)
  55:   sample_l r7.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  56:   add r6.yzw, r5.xxyz, l(0.000000, -0.007813, 0.007813, -0.007813)
  57:   sample_l r8.xyzw, r6.yzwy, t1.xyzw, s1, l(0.000000)
  58:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  59:   sample_l r5.xyzw, r5.xyzx, t1.yzwx, s1, l(0.000000)
  60:   mov r5.x, r6.x
  61:   mov r5.y, r7.x
  62:   mov r5.z, r8.x
  63:   lt r5.xyzw, r5.xyzw, r3.wwww
  64:   movc r5.xyzw, r5.xyzw, cb3[24].xxxx, l(1.000000,1.000000,1.000000,1.000000)
  65:   dp4 r3.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  66: else 
  67:   mov r3.w, l(1.000000)
  68: endif 
  69: add_sat r0.w, r0.w, r3.w
  70: min r2.w, r0.w, r2.w
  71: movc r0.w, r1.w, r2.w, r0.w
  72: dp3 r1.w, r4.xyzx, r4.xyzx
  73: sample r5.xyzw, r1.wwww, t2.xyzw, s4
  74: sample r4.xyzw, r4.xyzx, t3.xyzw, s3
  75: mul r1.w, r4.w, r5.x
  76: mul r0.w, r0.w, r1.w
  77: mov r4.x, v3.w
  78: mov r4.y, v4.w
  79: mov r4.z, v5.w
  80: dp3 r1.w, r4.xyzx, r4.xyzx
  81: rsq r1.w, r1.w
  82: mul r5.xyz, r1.wwww, r4.xyzx
  83: mul r6.xyz, r0.wwww, cb0[2].xyzx
  84: add r0.w, -cb0[8].w, l(1.000000)
  85: mad r4.xyz, r4.xyzx, r1.wwww, -r3.xyzx
  86: dp3 r1.w, r4.xyzx, r4.xyzx
  87: max r1.w, r1.w, l(0.001000)
  88: rsq r1.w, r1.w
  89: mul r4.xyz, r1.wwww, r4.xyzx
  90: dp3 r1.w, r2.xyzx, -r3.xyzx
  91: dp3_sat r2.w, r2.xyzx, r5.xyzx
  92: dp3_sat r2.x, r2.xyzx, r4.xyzx
  93: dp3_sat r2.y, r5.xyzx, r4.xyzx
  94: mul r2.z, r2.y, r2.y
  95: dp2 r2.z, r2.zzzz, r0.wwww
  96: add r2.z, r2.z, l(-0.500000)
  97: add r3.x, -r2.w, l(1.000000)
  98: mul r3.y, r3.x, r3.x
  99: mul r3.y, r3.y, r3.y
 100: mul r3.x, r3.x, r3.y
 101: mad r3.x, r2.z, r3.x, l(1.000000)
 102: add r3.y, -|r1.w|, l(1.000000)
 103: mul r3.z, r3.y, r3.y
 104: mul r3.z, r3.z, r3.z
 105: mul r3.y, r3.y, r3.z
 106: mad r2.z, r2.z, r3.y, l(1.000000)
 107: mul r2.z, r2.z, r3.x
 108: mul r2.z, r2.w, r2.z
 109: mul r3.x, r0.w, r0.w
 110: mad r0.w, -r0.w, r0.w, l(1.000000)
 111: mad r3.y, |r1.w|, r0.w, r3.x
 112: mad r0.w, r2.w, r0.w, r3.x
 113: mul r0.w, r0.w, |r1.w|
 114: mad r0.w, r2.w, r3.y, r0.w
 115: add r0.w, r0.w, l(0.000010)
 116: div r0.w, l(0.500000), r0.w
 117: mul r1.w, r3.x, r3.x
 118: mad r3.x, r2.x, r1.w, -r2.x
 119: mad r2.x, r3.x, r2.x, l(1.000000)
 120: mul r1.w, r1.w, l(0.318310)
 121: mad r2.x, r2.x, r2.x, l(0.000000)
 122: div r1.w, r1.w, r2.x
 123: mul r0.w, r0.w, r1.w
 124: mul r0.w, r0.w, l(3.141593)
 125: max r0.w, r0.w, l(0.000100)
 126: sqrt r0.w, r0.w
 127: mul r0.w, r2.w, r0.w
 128: dp3 r1.w, r0.xyzx, r0.xyzx
 129: ne r1.w, r1.w, l(0.000000)
 130: and r1.w, r1.w, l(0x3f800000)
 131: mul r0.w, r0.w, r1.w
 132: mul r2.xzw, r2.zzzz, r6.xxyz
 133: mul r3.xyz, r6.xyzx, r0.wwww
 134: add r0.w, -r2.y, l(1.000000)
 135: mul r1.w, r0.w, r0.w
 136: mul r1.w, r1.w, r1.w
 137: mul r0.w, r0.w, r1.w
 138: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 139: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 140: mul r0.xyz, r0.xyzx, r3.xyzx
 141: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 142: div r0.w, v7.z, cb1[5].y
 143: add r0.w, -r0.w, l(1.000000)
 144: mul r0.w, r0.w, cb1[5].z
 145: max r0.w, r0.w, l(0.000000)
 146: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 147: mul o0.xyz, r0.xyzx, r0.wwww
 148: mov o0.w, l(1.000000)
 149: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 35 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_3_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7.xy
    dcl_texcoord7 o8.x
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad o1.xy, v2, c13, c13.zwzw
    abs r0.y, c15.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad o1.zw, r2.xyxy, c14.xyxy, c14
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add o2.xyz, r1, -c11
    mul r0.yzw, c9.xxyz, v1.y
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul o5.xyz, r0.yzww, r1.w
    mov r3.z, r0.x
    mov o8.x, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov o6.xyz, r1
    mov r0.w, c16.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o5.w, r0.z
    mov o7.xy, c16.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 89 math, 2 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 5
Float _GlossMapScale at 7
Vector4 _LightColor0 at 4
Float _Metallic at 6
Vector4 unity_FogParams at 3

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightTexture0" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   float4 unity_FogParams;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   unity_FogParams    c3       1
//   _LightColor0       c4       1
//   _Color             c5       1
//   _Metallic          c6       1
//   _GlossMapScale     c7       1
//   _MainTex           s0       1
//   _LightTexture0     s1       1
//

    ps_3_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 1, 0, 0.00100000005, 31.622776
    def c10, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c11, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord7 v6.x
    dcl_2d s0
    dcl_2d s1
    nrm_pp r0.xyz, v1
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    dp3_pp r0.w, r1, r1
    rsq_pp r0.w, r0.w
    mad_pp r2.xyz, r1, r0.w, -r0
    mul_pp r1.xyz, r0.w, r1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c9.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c9.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r3.xyz, v4
    dp3_sat_pp r0.w, r3, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r3, r1
    dp3_pp r0.x, r3, -r0
    texld r2, v0, s0
    mov r3, c8
    mad_pp r0.y, r2.w, -c7.x, r3.w
    mul_pp r0.z, r0.y, r0.y
    mul_pp r1.y, r0.z, r0.z
    mad_pp r1.z, r0.w, r1.y, -r0.w
    mad_pp r0.w, r1.z, r0.w, c8.w
    mad r0.w, r0.w, r0.w, c11.x
    rcp r0.w, r0.w
    mul r1.y, r1.y, c10.w
    mul_pp r0.w, r0.w, r1.y
    mad_pp r1.y, r0.y, -r0.y, c8.w
    mad_pp r1.z, r1.x, r1.y, r0.z
    mad_pp r0.z, r0_abs.x, r1.y, r0.z
    mul_pp r1.y, r0_abs.x, r1.z
    add_pp r0.x, -r0_abs.x, c8.w
    mad r0.z, r1.x, r0.z, r1.y
    add r0.z, r0.z, c10.y
    rcp r0.z, r0.z
    mul_pp r0.z, r0.z, c10.z
    mul r0.z, r0.w, r0.z
    mul_pp r0.w, r0.z, c11.y
    mad r0.z, r0.z, -c11.y, c11.z
    rsq r0.w, r0.w
    rcp_pp r0.w, r0.w
    cmp_pp r0.z, r0.z, c11.w, r0.w
    mul_pp r0.z, r1.x, r0.z
    mad_pp r4.xyz, c5, r2, r3.x
    mul_pp r2.xyz, r2, c5
    mad_pp r3.xyw, c6.x, r4.xyzz, r3.y
    dp3_pp r0.w, r3.xyww, r3.xyww
    cmp r0.w, -r0.w, c9.y, c9.x
    mul_pp r0.z, r0.w, r0.z
    mad r4, v5.xyzx, c9.xxxy, c9.yyyx
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r0.w, r5, r5
    texld_pp r4, r0.w, s1
    mul_pp r4.xyz, r4.x, c4
    mul_pp r5.xyz, r0.z, r4
    add_pp r0.z, -r1.w, c8.w
    mul_pp r0.w, r1.w, r1.w
    dp2add_pp r0.y, r0.w, r0.y, c10.x
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    lrp_pp r1.yzw, r0.z, c8.w, r3.xxyw
    mul_pp r1.yzw, r1, r5.xxyz
    mul_pp r0.z, r0.x, r0.x
    mul_pp r0.z, r0.z, r0.z
    mul_pp r0.x, r0.x, r0.z
    mad_pp r0.x, r0.y, r0.x, c8.w
    add_pp r0.z, -r1.x, c8.w
    mul_pp r0.w, r0.z, r0.z
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.z, r0.z, r0.w
    mad_pp r0.y, r0.y, r0.z, c8.w
    mul_pp r0.x, r0.x, r0.y
    mul_pp r0.x, r1.x, r0.x
    mul_pp r0.xyz, r0.x, r4
    mad_pp r0.w, c6.x, -r3.z, r3.z
    mul_pp r2.xyz, r0.w, r2
    mad_pp r0.xyz, r2, r0, r1.yzww
    mad_sat r0.w, v6.x, c3.z, c3.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c8.w

// approximately 90 instruction slots used (2 texture, 88 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: mov o7.z, r0.z
  10: eq r0.x, cb0[9].w, l(0.000000)
  11: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  16: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  17: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  18: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  19: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r0.xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o7.xy, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 3 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[2], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  14: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  15: add r4.xyz, r4.xyzx, cb0[14].xyzx
  16: eq r1.w, cb4[0].x, l(1.000000)
  17: if_nz r1.w
  18:   eq r1.w, cb4[0].y, l(1.000000)
  19:   mul r5.xyz, v6.yyyy, cb4[2].xyzx
  20:   mad r5.xyz, cb4[1].xyzx, v6.xxxx, r5.xyzx
  21:   mad r5.xyz, cb4[3].xyzx, v6.zzzz, r5.xyzx
  22:   add r5.xyz, r5.xyzx, cb4[4].xyzx
  23:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  24:   add r5.xyz, r5.xyzx, -cb4[6].xyzx
  25:   mul r5.yzw, r5.xxyz, cb4[5].xxyz
  26:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  27:   mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r1.w, r2.w
  29:   sample r5.xyzw, r5.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r1.w, r5.xyzw, cb2[45].xyzw
  34: dp3 r2.w, r4.xyzx, r4.xyzx
  35: sample r4.xyzw, r2.wwww, t1.xyzw, s2
  36: mul r1.w, r1.w, r4.x
  37: mov r4.x, v3.w
  38: mov r4.y, v4.w
  39: mov r4.z, v5.w
  40: dp3 r2.w, r4.xyzx, r4.xyzx
  41: rsq r2.w, r2.w
  42: mul r5.xyz, r2.wwww, r4.xyzx
  43: mul r6.xyz, r1.wwww, cb0[2].xyzx
  44: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  45: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  46: dp3 r1.w, r4.xyzx, r4.xyzx
  47: max r1.w, r1.w, l(0.001000)
  48: rsq r1.w, r1.w
  49: mul r4.xyz, r1.wwww, r4.xyzx
  50: dp3 r1.w, r2.xyzx, -r3.xyzx
  51: dp3_sat r2.w, r2.xyzx, r5.xyzx
  52: dp3_sat r2.x, r2.xyzx, r4.xyzx
  53: dp3_sat r2.y, r5.xyzx, r4.xyzx
  54: mul r2.z, r2.y, r2.y
  55: dp2 r2.z, r2.zzzz, r0.wwww
  56: add r2.z, r2.z, l(-0.500000)
  57: add r3.x, -r2.w, l(1.000000)
  58: mul r3.y, r3.x, r3.x
  59: mul r3.y, r3.y, r3.y
  60: mul r3.x, r3.x, r3.y
  61: mad r3.x, r2.z, r3.x, l(1.000000)
  62: add r3.y, -|r1.w|, l(1.000000)
  63: mul r3.z, r3.y, r3.y
  64: mul r3.z, r3.z, r3.z
  65: mul r3.y, r3.y, r3.z
  66: mad r2.z, r2.z, r3.y, l(1.000000)
  67: mul r2.z, r2.z, r3.x
  68: mul r2.z, r2.w, r2.z
  69: mul r3.x, r0.w, r0.w
  70: mad r0.w, -r0.w, r0.w, l(1.000000)
  71: mad r3.y, |r1.w|, r0.w, r3.x
  72: mad r0.w, r2.w, r0.w, r3.x
  73: mul r0.w, r0.w, |r1.w|
  74: mad r0.w, r2.w, r3.y, r0.w
  75: add r0.w, r0.w, l(0.000010)
  76: div r0.w, l(0.500000), r0.w
  77: mul r1.w, r3.x, r3.x
  78: mad r3.x, r2.x, r1.w, -r2.x
  79: mad r2.x, r3.x, r2.x, l(1.000000)
  80: mul r1.w, r1.w, l(0.318310)
  81: mad r2.x, r2.x, r2.x, l(0.000000)
  82: div r1.w, r1.w, r2.x
  83: mul r0.w, r0.w, r1.w
  84: mul r0.w, r0.w, l(3.141593)
  85: max r0.w, r0.w, l(0.000100)
  86: sqrt r0.w, r0.w
  87: mul r0.w, r2.w, r0.w
  88: dp3 r1.w, r0.xyzx, r0.xyzx
  89: ne r1.w, r1.w, l(0.000000)
  90: and r1.w, r1.w, l(0x3f800000)
  91: mul r0.w, r0.w, r1.w
  92: mul r2.xzw, r2.zzzz, r6.xxyz
  93: mul r3.xyz, r6.xyzx, r0.wwww
  94: add r0.w, -r2.y, l(1.000000)
  95: mul r1.w, r0.w, r0.w
  96: mul r1.w, r1.w, r1.w
  97: mul r0.w, r0.w, r1.w
  98: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  99: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 100: mul r0.xyz, r0.xyzx, r3.xyzx
 101: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 102: div r0.w, v7.z, cb1[5].y
 103: add r0.w, -r0.w, l(1.000000)
 104: mul r0.w, r0.w, cb1[5].z
 105: max r0.w, r0.w, l(0.000000)
 106: mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
 107: mul o0.xyz, r0.xyzx, r0.wwww
 108: mov o0.w, l(1.000000)
 109: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //         d3d9: 23 avg math (13..34)
 //        d3d11: 22 avg math (13..31)
 // Stats for Fragment shader:
 //         d3d9: 3 avg math (1..5)
 //        d3d11: 4 math
 Pass {
  Name "SHADOWCASTER"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_DEPTH 
-- Vertex shader for "d3d9":
// Stats: 34 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _WorldSpaceLightPos0 at 11
Vector4 unity_LightShadowBias at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _WorldSpaceLightPos0;
//   float4 unity_LightShadowBias;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   unity_ObjectToWorld   c0       4
//   unity_MatrixVP        c4       4
//   unity_WorldToObject   c8       3
//   _WorldSpaceLightPos0  c11      1
//   unity_LightShadowBias c12      1
//

    vs_3_0
    def c13, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_position o0
    mul r0.xyz, c9, v1.y
    mad r0.xyz, v1.x, c8, r0
    mad r0.xyz, v1.z, c10, r0
    nrm r1.xyz, r0
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    mad r2.xyz, r0, -c11.w, c11
    nrm r3.xyz, r2
    dp3 r0.w, r1, r3
    mad r0.w, r0.w, -r0.w, c13.x
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c12.z
    mul r1.xyz, r0.w, r1
    abs r0.w, c12.z
    slt r0.w, -r0.w, r0.w
    mad r0.xyz, r0.w, -r1, r0
    dp4 r0.w, c3, v0
    dp4 r4.x, c4, r0
    dp4 r4.y, c5, r0
    dp4 r1.x, c6, r0
    dp4 r0.x, c7, r0
    rcp r0.y, r0.x
    mov r4.w, r0.x
    mul_sat r0.x, r0.y, c12.x
    add r0.x, r0.x, r1.x
    max r0.y, r0.x, c13.y
    add r0.y, -r0.x, r0.y
    mad r4.z, c12.y, r0.y, r0.x
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 36 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 1 math
Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
    ps_3_0
    def c0, 0, 0, 0, 0
    mov_pp oC0, c0.x

// approximately 1 instruction slot used


-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityLighting" (752 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb1[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb1[5].y, r0.x, r0.z
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_CUBE 
-- Vertex shader for "d3d9":
// Stats: 13 math
Uses vertex data channel "Vertex"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Vector4 _LightPositionRange at 8

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _LightPositionRange;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_ObjectToWorld c0       4
//   unity_MatrixVP      c4       4
//   _LightPositionRange c8       1
//

    vs_3_0
    def c9, 1, 0, 0, 0
    dcl_position v0
    dcl_texcoord o0.xyz
    dcl_position o1
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o0.xyz, r0, -c8
    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp4 r2.w, c7, r1
    mad o1.xy, r2.w, c255, r2
    mov o1.zw, r2

// approximately 15 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 5 math
Vector4 _LightPositionRange at 0
Vector4 unity_LightShadowBias at 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _LightPositionRange;
//   float4 unity_LightShadowBias;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   _LightPositionRange   c0       1
//   unity_LightShadowBias c1       1
//

    ps_3_0
    dcl_texcoord v0.xyz
    dp3 r0.x, v0, v0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.x, r0.x, c1.x
    mul_pp oC0, r0.x, c0.w

// approximately 5 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 13 math, 2 temp registers
Uses vertex data channel "Vertex"

Constant Buffer "UnityLighting" (752 bytes) on slot 0 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[2], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_output o0.xyz
      dcl_output_siv o1.xyzw, position
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   4: add o0.xyz, r0.xyzx, -cb0[1].xyzx
   5: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   6: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  10: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o1.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  13: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 4 math, 1 temp registers
Constant Buffer "UnityLighting" (752 bytes) on slot 0 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// SV_POSITION              0   xyzw        1      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[2], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_input_ps linear v0.xyz
      dcl_output o0.xyzw
      dcl_temps 1
   0: dp3 r0.x, v0.xyzx, v0.xyzx
   1: sqrt r0.x, r0.x
   2: add r0.x, r0.x, cb1[5].x
   3: mul o0.xyzw, r0.xxxx, cb0[1].wwww
   4: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //         d3d9: 39 math
 //        d3d11: 29 math
 // Stats for Fragment shader:
 //         d3d9: 33 avg math (32..35), 2 texture
 //        d3d11: 42 avg math (41..43), 5 texture, 2 branch
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 14
Vector4 unity_SHBg at 13
Vector4 unity_SHBr at 12
Vector4 unity_SHC at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   unity_SHBr           c12      1
//   unity_SHBg           c13      1
//   unity_SHBb           c14      1
//   unity_SHC            c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c12, r1
    dp4 r2.y, c13, r1
    dp4 r2.z, c14, r1
    mad o6.xyz, c15, r0.z, r2
    mov r0.w, c19.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 35 math, 2 textures
Vector4 _Color at 3
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0, 0.416666657, 1.05499995, -0.0549999997
    def c9, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c7
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c7.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c9.xxxy, c9.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c8.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c8.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c8.z, c8.w
    max_pp r3.xyz, r2, c8.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    mul_pp r0.xyz, r1.xyww, r2
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c7.w

// approximately 37 instruction slots used (2 texture, 35 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 42 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   mov r3.y, v3.w
  20:   mov r3.z, v4.w
  21:   mov r3.w, v5.w
  22:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  23:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  24:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  25:   mul r2.y, r2.y, l(0.250000)
  26:   mul r3.x, cb2[0].z, l(0.500000)
  27:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  28:   max r2.y, r2.y, r3.x
  29:   min r2.x, r3.y, r2.y
  30:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  31:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  32:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  33:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  34:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  35:   mov r1.w, l(1.000000)
  36:   dp4 r3.x, r3.xyzw, r1.xyzw
  37:   dp4 r3.y, r4.xyzw, r1.xyzw
  38:   dp4 r3.z, r2.xyzw, r1.xyzw
  39: else 
  40:   mov r1.w, l(1.000000)
  41:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  42:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  43:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  44: endif 
  45: add r2.xyz, r3.xyzx, v6.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r2.xyz, r2.xyzx
  48: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r2.xyz, r2.xyzx
  50: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: mul r2.xyz, r0.wwww, r2.xyzx
  53: mul r2.xyz, r0.xyzx, r2.xyzx
  54: exp o3.xyz, -r2.xyzx
  55: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  56: mov o0.xyzw, r0.xyzw
  57: mov o1.w, cb0[8].w
  58: mov o2.w, l(1.000000)
  59: mov o3.w, l(1.000000)
  60: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: UNITY_HDR_ON _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 14
Vector4 unity_SHBg at 13
Vector4 unity_SHBr at 12
Vector4 unity_SHC at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   unity_SHBr           c12      1
//   unity_SHBg           c13      1
//   unity_SHBb           c14      1
//   unity_SHC            c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c12, r1
    dp4 r2.y, c13, r1
    dp4 r2.z, c14, r1
    mad o6.xyz, c15, r0.z, r2
    mov r0.w, c19.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 32 math, 2 textures
Vector4 _Color at 3
Float _GlossMapScale at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _GlossMapScale     c5       1
//   _OcclusionStrength c6       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0, 0.416666657, 1.05499995, -0.0549999997
    def c9, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mul_pp oC1.w, r0.w, c5.x
    mov r1, c7
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c7.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c9.xxxy, c9.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c8.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c8.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c8.z, c8.w
    max_pp r3.xyz, r2, c8.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    mul_pp oC3.xyz, r1.xyww, r2
    mov_pp oC0, r2
    mov_pp oC3.w, c7.w

// approximately 34 instruction slots used (2 texture, 32 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 42 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul o1.w, r0.w, cb0[9].x
   2: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   3: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.xyz, r0.xxxx, r1.xyzx
   7: dp3 r1.x, v5.xyzx, v5.xyzx
   8: rsq r1.x, r1.x
   9: mul r1.xyz, r1.xxxx, v5.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: add r2.x, -cb0[9].y, l(1.000000)
  12: mad r0.w, r2.y, cb0[9].y, r2.x
  13: eq r2.x, cb2[0].x, l(1.000000)
  14: if_nz r2.x
  15:   eq r2.x, cb2[0].y, l(1.000000)
  16:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  17:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  18:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  19:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  20:   mov r3.y, v3.w
  21:   mov r3.z, v4.w
  22:   mov r3.w, v5.w
  23:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  24:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  25:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  26:   mul r2.y, r2.y, l(0.250000)
  27:   mul r3.x, cb2[0].z, l(0.500000)
  28:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  29:   max r2.y, r2.y, r3.x
  30:   min r2.x, r3.y, r2.y
  31:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  32:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  33:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  34:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  35:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  36:   mov r1.w, l(1.000000)
  37:   dp4 r3.x, r3.xyzw, r1.xyzw
  38:   dp4 r3.y, r4.xyzw, r1.xyzw
  39:   dp4 r3.z, r2.xyzw, r1.xyzw
  40: else 
  41:   mov r1.w, l(1.000000)
  42:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  43:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  44:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  45: endif 
  46: add r2.xyz, r3.xyzx, v6.xyzx
  47: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r2.xyz, r2.xyzx
  49: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r2.xyz, r2.xyzx
  51: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mul r2.xyz, r0.wwww, r2.xyzx
  54: mul o3.xyz, r0.xyzx, r2.xyzx
  55: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  56: mov o0.xyzw, r0.xyzw
  57: mov o2.w, l(1.000000)
  58: mov o3.w, l(1.000000)
  59: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 14
Vector4 unity_SHBg at 13
Vector4 unity_SHBr at 12
Vector4 unity_SHC at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   unity_SHBr           c12      1
//   unity_SHBg           c13      1
//   unity_SHBb           c14      1
//   unity_SHC            c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c12, r1
    dp4 r2.y, c13, r1
    dp4 r2.z, c14, r1
    mad o6.xyz, c15, r0.z, r2
    mov r0.w, c19.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 32 math, 2 textures
Vector4 _Color at 3
Float _Glossiness at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   _OcclusionStrength c6       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0, 0.416666657, 1.05499995, -0.0549999997
    def c9, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mov r1, c7
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c7.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c9.xxxy, c9.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c8.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c8.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c8.z, c8.w
    max_pp r3.xyz, r2, c8.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    mul_pp oC3.xyz, r1.xyww, r2
    mov_pp oC0, r2
    mov_pp oC1.w, c5.x
    mov_pp oC3.w, c7.w

// approximately 34 instruction slots used (2 texture, 32 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 41 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r0.xyz, r0.xxxx, r1.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   mov r3.y, v3.w
  20:   mov r3.z, v4.w
  21:   mov r3.w, v5.w
  22:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  23:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  24:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  25:   mul r2.y, r2.y, l(0.250000)
  26:   mul r3.x, cb2[0].z, l(0.500000)
  27:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  28:   max r2.y, r2.y, r3.x
  29:   min r2.x, r3.y, r2.y
  30:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  31:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  32:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  33:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  34:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  35:   mov r1.w, l(1.000000)
  36:   dp4 r3.x, r3.xyzw, r1.xyzw
  37:   dp4 r3.y, r4.xyzw, r1.xyzw
  38:   dp4 r3.z, r2.xyzw, r1.xyzw
  39: else 
  40:   mov r1.w, l(1.000000)
  41:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  42:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  43:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  44: endif 
  45: add r2.xyz, r3.xyzx, v6.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: log r2.xyz, r2.xyzx
  48: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  49: exp r2.xyz, r2.xyzx
  50: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  51: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: mul r2.xyz, r0.wwww, r2.xyzx
  53: mul o3.xyz, r0.xyzx, r2.xyzx
  54: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  55: mov o0.xyzw, r0.xyzw
  56: mov o1.w, cb0[8].w
  57: mov o2.w, l(1.000000)
  58: mov o3.w, l(1.000000)
  59: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 17
Vector4 _MainTex_ST at 16
Float _UVSec at 18
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 14
Vector4 unity_SHBg at 13
Vector4 unity_SHBr at 12
Vector4 unity_SHC at 15

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   unity_SHBr           c12      1
//   unity_SHBg           c13      1
//   unity_SHBb           c14      1
//   unity_SHC            c15      1
//   _MainTex_ST          c16      1
//   _DetailAlbedoMap_ST  c17      1
//   _UVSec               c18      1
//

    vs_3_0
    def c19, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    mad r0, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v2, c16, c16.zwzw
    abs r0.x, c18.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c17.xyxy, c17
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c12, r1
    dp4 r2.y, c13, r1
    dp4 r2.z, c14, r1
    mad o6.xyz, c15, r0.z, r2
    mov r0.w, c19.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c19.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 35 math, 2 textures
Vector4 _Color at 3
Float _GlossMapScale at 5
Float _Metallic at 4
Float _OcclusionStrength at 6
Vector4 unity_SHAb at 2
Vector4 unity_SHAg at 1
Vector4 unity_SHAr at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_SHAr         c0       1
//   unity_SHAg         c1       1
//   unity_SHAb         c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _GlossMapScale     c5       1
//   _OcclusionStrength c6       1
//   _MainTex           s0       1
//   _OcclusionMap      s1       1
//

    ps_3_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0, 0.416666657, 1.05499995, -0.0549999997
    def c9, 0.5, 1, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord4_pp v1.xyz
    dcl_texcoord5_pp v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mul_pp oC1.w, r0.w, c5.x
    mov r1, c7
    mad_pp r2.xyz, c3, r0, r1.x
    mul_pp r0.xyz, r0, c3
    mad_pp oC1.xyz, c4.x, r2, r1.y
    nrm_pp r2.xyz, v1
    mov_pp r2.w, c7.w
    dp4_pp r3.x, c0, r2
    dp4_pp r3.y, c1, r2
    dp4_pp r3.z, c2, r2
    mad_pp oC2, r2, c9.xxxy, c9.xxxz
    add_pp r2.xyz, r3, v2
    max_pp r3.xyz, r2, c8.x
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c8.y
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c8.z, c8.w
    max_pp r3.xyz, r2, c8.x
    texld_pp r2, v0, s1
    add_pp r0.w, r1.w, -c6.x
    mad_pp r2.w, r2.y, c6.x, r0.w
    mul_pp r1.xyw, r2.w, r3.xyzz
    mad_pp r0.w, c4.x, -r1.z, r1.z
    mul_pp r2.xyz, r0.w, r0
    mul_pp r0.xyz, r1.xyww, r2
    mov_pp oC0, r2
    exp_pp oC3.x, -r0.x
    exp_pp oC3.y, -r0.y
    exp_pp oC3.z, -r0.z
    mov_pp oC3.w, c7.w

// approximately 37 instruction slots used (2 texture, 35 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[41].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[42].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[43].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[44].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 43 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[41], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul o1.w, r0.w, cb0[9].x
   2: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   3: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   4: mad o1.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   5: mad r0.x, -cb0[8].z, l(0.779084), l(0.779084)
   6: mul r0.xyz, r0.xxxx, r1.xyzx
   7: dp3 r1.x, v5.xyzx, v5.xyzx
   8: rsq r1.x, r1.x
   9: mul r1.xyz, r1.xxxx, v5.xyzx
  10: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  11: add r2.x, -cb0[9].y, l(1.000000)
  12: mad r0.w, r2.y, cb0[9].y, r2.x
  13: eq r2.x, cb2[0].x, l(1.000000)
  14: if_nz r2.x
  15:   eq r2.x, cb2[0].y, l(1.000000)
  16:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  17:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  18:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  19:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  20:   mov r3.y, v3.w
  21:   mov r3.z, v4.w
  22:   mov r3.w, v5.w
  23:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  24:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  25:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  26:   mul r2.y, r2.y, l(0.250000)
  27:   mul r3.x, cb2[0].z, l(0.500000)
  28:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  29:   max r2.y, r2.y, r3.x
  30:   min r2.x, r3.y, r2.y
  31:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  32:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  33:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  34:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  35:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  36:   mov r1.w, l(1.000000)
  37:   dp4 r3.x, r3.xyzw, r1.xyzw
  38:   dp4 r3.y, r4.xyzw, r1.xyzw
  39:   dp4 r3.z, r2.xyzw, r1.xyzw
  40: else 
  41:   mov r1.w, l(1.000000)
  42:   dp4 r3.x, cb1[38].xyzw, r1.xyzw
  43:   dp4 r3.y, cb1[39].xyzw, r1.xyzw
  44:   dp4 r3.z, cb1[40].xyzw, r1.xyzw
  45: endif 
  46: add r2.xyz, r3.xyzx, v6.xyzx
  47: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  48: log r2.xyz, r2.xyzx
  49: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  50: exp r2.xyz, r2.xyzx
  51: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  52: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: mul r2.xyz, r0.wwww, r2.xyzx
  54: mul r2.xyz, r0.xyzx, r2.xyzx
  55: exp o3.xyz, -r2.xyzx
  56: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  57: mov o0.xyzw, r0.xyzw
  58: mov o2.w, l(1.000000)
  59: mov o3.w, l(1.000000)
  60: ret 
// Approximately 0 instruction slots used


 }
}
SubShader { 
 LOD 150
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }


 // Stats for Vertex shader:
 //         d3d9: 69 avg math (45..94)
 //        d3d11: 49 avg math (32..68)
 // Stats for Fragment shader:
 //         d3d9: 107 avg math (44..169), 5 avg texture (4..7), 7 avg branch (0..14)
 //        d3d11: 115 avg math (52..182), 5 avg texture (4..7), 5 avg branch (2..8)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL 
-- Vertex shader for "d3d9":
// Stats: 64 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 20
Vector4 _MainTex_ST at 19
Float _UVSec at 21
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHAb at 14
Vector4 unity_SHAg at 13
Vector4 unity_SHAr at 12
Vector4 unity_SHBb at 17
Vector4 unity_SHBg at 16
Vector4 unity_SHBr at 15
Vector4 unity_SHC at 18

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   unity_SHAr           c12      1
//   unity_SHAg           c13      1
//   unity_SHAb           c14      1
//   unity_SHBr           c15      1
//   unity_SHBg           c16      1
//   unity_SHBb           c17      1
//   unity_SHC            c18      1
//   _MainTex_ST          c19      1
//   _DetailAlbedoMap_ST  c20      1
//   _UVSec               c21      1
//

    vs_2_0
    def c22, 1, 0, 0.416666657, 0
    def c23, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c22.xxxy, c22.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r4.x, c4, r1
    dp4 r4.y, c5, r1
    dp4 r4.z, c6, r1
    dp4 r4.w, c7, r1
    mad oT0.xy, v2, c19, c19.zwzw
    mul r0.x, c21.x, c21.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c20.xyxy, c20
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    mov oT4.w, r0.z
    dp3 r0.z, r1, r1
    rsq r0.z, r0.z
    mul oT1.xyz, r0.z, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    dp4 r3.x, c15, r1
    dp4 r3.y, c16, r1
    dp4 r3.z, c17, r1
    mad r1.xyz, c18, r0.z, r3
    mov r2.w, c22.x
    dp4 r3.x, c12, r2
    dp4 r3.y, c13, r2
    dp4 r3.z, c14, r2
    mov oT4.xyz, r2
    add r1.xyz, r1, r3
    max r1.xyz, r1, c22.y
    mov r1.w, c22.z
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c23.x, c23.y
    max oT5.xyz, r1, c22.y
    mov r0.w, c22.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT5.w, c22.y
    mov oT6.xy, c22.y
    mad oPos.xy, r4.w, c255, r4
    mov oPos.zw, r4

// approximately 59 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 46 math, 4 textures
Vector4 _Color at 3
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Float _Metallic at 4
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_SpecCube0_HDR at 1

Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float4 _WorldSpaceLightPos0;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceLightPos0 c0       1
//   unity_SpecCube0_HDR  c1       1
//   _LightColor0         c2       1
//   _Color               c3       1
//   _Metallic            c4       1
//   _Glossiness          c5       1
//   unity_SpecCube0      s0       1
//   unity_NHxRoughness   s1       1
//   _MainTex             s2       1
//   _OcclusionMap        s3       1
//

    ps_2_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 1
    def c7, 0.699999988, 1.70000005, 6, 16
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mov r0, c6
    add_pp r1.w, r0.w, -c5.x
    mad_pp r1.x, r1.w, -c7.x, c7.y
    mul_pp r1.x, r1.x, r1.w
    mul_pp r1.w, r1.x, c7.z
    nrm_pp r2.xyz, t4
    dp3_pp r2.w, t1, r2
    add_pp r2.w, r2.w, r2.w
    mad_pp r1.xyz, r2, -r2.w, t1
    dp3_pp r2.w, -t1, r2
    add_pp r3.w, r2.w, r2.w
    mov_sat_pp r2.w, r2.w
    add_pp r3.y, -r2.w, c6.w
    mad_pp r4.xyz, r2, -r3.w, -t1
    dp3_pp r3.x, r4, c0
    mul_pp r3.xy, r3, r3
    mul_pp r3.xy, r3, r3
    add_pp r3.z, r0.w, -c5.x
    mov_pp r4.x, r3.x
    mov_pp r4.y, r3.z
    texldb_pp r1, r1, s0
    texld_pp r5, t0, s3
    texld r6, t0, s2
    texld r4, r4, s1
    add_pp r1.w, r1.w, -c6.w
    mad_pp r0.w, c1.w, r1.w, r0.w
    mul_pp r0.w, r0.w, c1.x
    mul_pp r1.xyz, r1, r0.w
    mul_pp r1.xyz, r5.y, r1
    mul_pp r4.yzw, r5.y, t5.wzyx
    dp3_sat_pp r0.w, r2, c0
    mul_pp r2.xyz, r0.w, c2
    mad_pp r1.w, c4.x, -r0.z, r0.z
    add_pp r2.w, -r1.w, c5.x
    add_sat_pp r2.w, r2.w, c6.w
    mad_pp r5.xyz, c3, r6, r0.x
    mul_pp r6.xyz, r6, c3
    mul_pp r6.xyz, r1.w, r6
    mad_pp r0.xyz, c4.x, r5, r0.y
    lrp_pp r5.xyz, r3.y, r2.w, r0
    mul_pp r1.xyz, r1, r5
    mad_pp r1.xyz, r4.wzyx, r6, r1
    mul_pp r0.w, r4.x, c7.w
    mad_pp r0.xyz, r0.w, r0, r6
    mad_pp r0.xyz, r0, r2, r1
    mov_pp r0.w, c6.w
    mov_pp oC0, r0

// approximately 49 instruction slots used (4 texture, 45 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 42 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mul r1.x, r0.y, r0.y
  32: mad r1.x, r0.x, r0.x, -r1.x
  33: mul r2.xyzw, r0.yzzx, r0.xyzz
  34: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  35: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  36: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  37: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  38: mov r0.w, l(1.000000)
  39: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  40: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  41: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  42: add r0.xyz, r1.xyzx, r2.xyzx
  43: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r0.xyz, r0.xyzx
  45: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r0.xyz, r0.xyzx
  47: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mov o6.w, l(0)
  50: mov o7.xy, l(0,0,0,0)
  51: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 52 math, 8 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: eq r1.w, cb3[0].x, l(1.000000)
  10: if_nz r1.w
  11:   eq r1.w, cb3[0].y, l(1.000000)
  12:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  13:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  14:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  15:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  16:   mov r4.y, v3.w
  17:   mov r4.z, v4.w
  18:   mov r4.w, v5.w
  19:   movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
  20:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  21:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  22:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  24:   max r3.x, r1.w, r2.w
  25:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  26: else 
  27:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r3.xyzw, cb1[45].xyzw
  30: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  31: add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
  32: dp3 r2.w, v2.xyzx, r2.xyzx
  33: add r2.w, r2.w, r2.w
  34: mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
  35: mul r5.xyz, r1.wwww, cb0[2].xyzx
  36: mul r6.xyz, r3.yyyy, v6.xyzx
  37: mad r1.w, -r4.x, l(0.700000), l(1.700000)
  38: mul r1.w, r1.w, r4.x
  39: mul r1.w, r1.w, l(6.000000)
  40: sample_l r7.xyzw, r3.xzwx, t3.xyzw, s0, r1.w
  41: add r1.w, r7.w, l(-1.000000)
  42: mad r1.w, cb2[3].w, r1.w, l(1.000000)
  43: mul r1.w, r1.w, cb2[3].x
  44: mul r3.xzw, r7.xxyz, r1.wwww
  45: mul r3.xyz, r3.yyyy, r3.xzwx
  46: dp3 r1.w, -v2.xyzx, r2.xyzx
  47: add r2.w, r1.w, r1.w
  48: mad r7.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  49: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  50: mov_sat r1.w, r1.w
  51: dp3 r7.x, r7.xyzx, cb1[0].xyzx
  52: add r7.y, -r1.w, l(1.000000)
  53: mul r2.yz, r7.xxyx, r7.xxyx
  54: mul r4.yz, r2.yyzy, r2.yyzy
  55: add r0.w, -r0.w, cb0[8].w
  56: add_sat r0.w, r0.w, l(1.000000)
  57: sample r7.xyzw, r4.ywyy, t2.xyzw, s2
  58: mul r1.w, r7.x, l(16.000000)
  59: mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
  60: mul r4.xyw, r2.xxxx, r5.xyxz
  61: add r5.xyz, -r0.xyzx, r0.wwww
  62: mad r0.xyz, r4.zzzz, r5.xyzx, r0.xyzx
  63: mul r0.xyz, r0.xyzx, r3.xyzx
  64: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  65: mad o0.xyz, r2.yzwy, r4.xywx, r0.xyzx
  66: mov o0.w, l(1.000000)
  67: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 45 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _MainTex_ST at 17
Vector4 _ProjectionParams at 12
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 15
Vector4 unity_SHBg at 14
Vector4 unity_SHBr at 13
Vector4 unity_SHC at 16

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   unity_SHBr           c13      1
//   unity_SHBg           c14      1
//   unity_SHBb           c15      1
//   unity_SHC            c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mad r1, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c20.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.z, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mul r3.w, r0.z, c20.z
    add o7.xy, r3.z, r3.xwzw
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c13, r1
    dp4 r2.y, c14, r1
    dp4 r2.z, c15, r1
    mad o6.xyz, c16, r0.z, r2
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c20.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 46 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 166 math, 7 textures, 14 branches
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 19
Float _GlossMapScale at 21
Vector4 _LightColor0 at 18
Vector4 _LightShadowData at 8
Float _Metallic at 20
Float _OcclusionStrength at 22
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4
Vector4 unity_SHAb at 7
Vector4 unity_SHAg at 6
Vector4 unity_SHAr at 5
Vector4 unity_ShadowFadeCenterAndType at 9
Vector4 unity_SpecCube0_BoxMax at 10
Vector4 unity_SpecCube0_BoxMin at 11
Vector4 unity_SpecCube0_HDR at 13
Vector4 unity_SpecCube0_ProbePosition at 12
Vector4 unity_SpecCube1_BoxMax at 14
Vector4 unity_SpecCube1_BoxMin at 15
Vector4 unity_SpecCube1_HDR at 17
Vector4 unity_SpecCube1_ProbePosition at 16

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_ShadowMapTexture" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_ShadowFadeCenterAndType;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _WorldSpaceLightPos0          c4       1
//   unity_SHAr                    c5       1
//   unity_SHAg                    c6       1
//   unity_SHAb                    c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_SpecCube0_BoxMax        c10      1
//   unity_SpecCube0_BoxMin        c11      1
//   unity_SpecCube0_ProbePosition c12      1
//   unity_SpecCube0_HDR           c13      1
//   unity_SpecCube1_BoxMax        c14      1
//   unity_SpecCube1_BoxMin        c15      1
//   unity_SpecCube1_ProbePosition c16      1
//   unity_SpecCube1_HDR           c17      1
//   _LightColor0                  c18      1
//   _Color                        c19      1
//   _Metallic                     c20      1
//   _GlossMapScale                c21      1
//   _OcclusionStrength            c22      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//   _ShadowMapTexture             s4       1
//

    ps_3_0
    def c23, -0.220916301, 0.220916301, 0.779083729, 1
    def c24, 0, 0.416666657, 1.05499995, -0.0549999997
    def c25, 0.699999988, 1.70000005, 6, 0.999989986
    def c26, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c27, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c28, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5_pp v5.xyz
    dcl_texcoord6 v6
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c19
    mov r2, c23
    mad_pp r0.xyz, c19, r0, r2.x
    mad_pp r0.xyz, c20.x, r0, r2.y
    mad_pp r1.w, c20.x, -r2.z, r2.z
    mul_pp r1.xyz, r1.w, r1
    nrm_pp r3.xyz, v4
    dp3_pp r2.x, v1, v1
    rsq_pp r2.x, r2.x
    mul_pp r4.xyz, r2.x, v1
    mov_pp r5.x, v2.w
    mov_pp r5.y, v3.w
    mov_pp r5.z, v4.w
    add r6.xyz, -r5, c3
    dp3 r2.y, r6, c2
    add r6.xyz, r5, -c9
    dp3 r2.z, r6, r6
    rsq r2.z, r2.z
    rcp r2.z, r2.z
    lrp r4.w, c9.w, r2.z, r2.y
    mad_sat_pp r2.y, r4.w, c8.z, c8.w
    texldp_pp r6, v6, s4
    add_sat_pp r2.y, r2.y, r6.x
    texld_pp r6, v0, s3
    add_pp r2.z, r2.w, -c22.x
    mad_pp r2.z, r6.y, c22.x, r2.z
    mad_pp r4.w, r0.w, -c21.x, r2.w
    dp3_pp r5.w, r4, r3
    add_pp r5.w, r5.w, r5.w
    mad_pp r6.xyz, r3, -r5.w, r4
    mul_pp r7.xyz, r2.y, c18
    mov r3.w, c23.w
    dp4_pp r8.x, c5, r3
    dp4_pp r8.y, c6, r3
    dp4_pp r8.z, c7, r3
    add_pp r8.xyz, r8, v5
    max_pp r9.xyz, r8, c24.x
    log_pp r8.x, r9.x
    log_pp r8.y, r9.y
    log_pp r8.z, r9.z
    mul_pp r8.xyz, r8, c24.y
    exp_pp r9.x, r8.x
    exp_pp r9.y, r8.y
    exp_pp r9.z, r8.z
    mad_pp r8.xyz, r9, c24.z, c24.w
    max_pp r9.xyz, r8, c24.x
    mov r8.x, c24.x
    if_lt -c12.w, r8.x
      nrm_pp r10.xyz, r6
      add r8.yzw, -r5.xxyz, c10.xxyz
      rcp r11.x, r10.x
      rcp r11.y, r10.y
      rcp r11.z, r10.z
      mul_pp r8.yzw, r8, r11.xxyz
      add r12.xyz, -r5, c11
      mul_pp r11.xyz, r11, r12
      cmp_pp r8.yzw, -r10.xxyz, r11.xxyz, r8
      min_pp r2.y, r8.z, r8.y
      min_pp r3.w, r8.w, r2.y
      add r8.yzw, r5.xxyz, -c12.xxyz
      mad_pp r10.xyz, r10, r3.w, r8.yzww
    else
      mov_pp r10.xyz, r6
    endif
    mad_pp r2.y, r4.w, -c25.x, c25.y
    mul_pp r2.y, r2.y, r4.w
    mul_pp r10.w, r2.y, c25.z
    texldl_pp r11, r10, s0
    add_pp r2.y, r11.w, -c23.w
    mad_pp r2.y, c13.w, r2.y, r2.w
    mul_pp r2.y, r2.y, c13.x
    mul_pp r8.yzw, r11.xxyz, r2.y
    mov r3.w, c11.w
    if_lt r3.w, c25.w
      if_lt -c16.w, r8.x
        nrm_pp r12.xyz, r6
        add r13.xyz, -r5, c14
        rcp r14.x, r12.x
        rcp r14.y, r12.y
        rcp r14.z, r12.z
        mul_pp r13.xyz, r13, r14
        add r15.xyz, -r5, c15
        mul_pp r14.xyz, r14, r15
        cmp_pp r13.xyz, -r12, r14, r13
        min_pp r3.w, r13.y, r13.x
        min_pp r5.w, r13.z, r3.w
        add r5.xyz, r5, -c16
        mad_pp r10.xyz, r12, r5.w, r5
      else
        mov_pp r10.xyz, r6
      endif
      texldl_pp r5, r10, s1
      add_pp r3.w, r5.w, -c23.w
      mad_pp r2.w, c17.w, r3.w, r2.w
      mul_pp r2.w, r2.w, c17.x
      mul_pp r5.xyz, r5, r2.w
      mad r6.xyz, r2.y, r11, -r5
      mad_pp r8.yzw, c11.w, r6.xxyz, r5.xxyz
    endif
    mul_pp r5.xyz, r2.z, r8.yzww
    mad_pp r2.xyw, v1.xyzz, -r2.x, c4.xyzz
    dp3_pp r3.w, r2.xyww, r2.xyww
    add r5.w, -r3.w, c26.x
    rsq_pp r3.w, r3.w
    cmp_pp r3.w, r5.w, c26.y, r3.w
    mul_pp r2.xyw, r2, r3.w
    dp3_pp r3.w, r3, -r4
    dp3_sat_pp r4.x, r3, c4
    dp3_sat_pp r3.x, r3, r2.xyww
    dp3_sat_pp r2.x, c4, r2.xyww
    mul_pp r2.y, r2.x, r2.x
    dp2add_pp r2.y, r2.y, r4.w, c26.z
    add_pp r2.w, -r4.x, c23.w
    mul_pp r3.y, r2.w, r2.w
    mul_pp r3.y, r3.y, r3.y
    mul_pp r2.w, r2.w, r3.y
    mad_pp r2.w, r2.y, r2.w, c23.w
    add_pp r3.y, -r3_abs.w, c23.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.y, r2.y, r3.y, c23.w
    mul_pp r2.y, r2.y, r2.w
    mul_pp r2.y, r4.x, r2.y
    mul_pp r2.w, r4.w, r4.w
    mad_pp r3.z, r4.w, -r4.w, c23.w
    mad_pp r4.y, r3_abs.w, r3.z, r2.w
    mad_pp r3.z, r4.x, r3.z, r2.w
    mul_pp r3.z, r3.z, r3_abs.w
    mad r3.z, r4.x, r4.y, r3.z
    add r3.z, r3.z, c26.w
    rcp r3.z, r3.z
    mul_pp r3.z, r3.z, -c26.z
    mul_pp r3.w, r2.w, r2.w
    mad_pp r4.y, r3.x, r3.w, -r3.x
    mad_pp r3.x, r4.y, r3.x, c23.w
    mul r3.w, r3.w, c27.x
    mad r3.x, r3.x, r3.x, c27.y
    rcp r3.x, r3.x
    mul_pp r3.x, r3.x, r3.w
    mul r3.x, r3.x, r3.z
    mul_pp r3.z, r3.x, c27.z
    mad r3.x, r3.x, -c27.z, c27.w
    rsq r3.z, r3.z
    rcp_pp r3.z, r3.z
    cmp_pp r3.x, r3.x, c28.x, r3.z
    mul_pp r3.x, r4.x, r3.x
    mul_pp r2.w, r2.w, r4.w
    mad_pp r2.w, r2.w, -c28.y, c28.z
    dp3_pp r3.z, r0, r0
    cmp r3.z, -r3.z, c28.w, c28.z
    mul_pp r3.x, r3.z, r3.x
    add_pp r1.w, -r1.w, c23.w
    mad_sat_pp r0.w, r0.w, c21.x, r1.w
    mul_pp r4.xyz, r2.y, r7
    mad_pp r4.xyz, r9, r2.z, r4
    mul_pp r3.xzw, r7.xyyz, r3.x
    add_pp r1.w, -r2.x, c23.w
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.x, r2.x, r2.x
    mul_pp r1.w, r1.w, r2.x
    lrp_pp r2.xyz, r1.w, c23.w, r0
    mul_pp r2.xyz, r2, r3.xzww
    mad_pp r1.xyz, r1, r4, r2
    mul_pp r2.xyz, r5, r2.w
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp oC0.xyz, r2, r4, r1
    mov_pp oC0.w, c23.w

// approximately 184 instruction slots used (7 texture, 177 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul r1.xyz, r1.wwww, r1.xyzx
  28: mov o5.xyz, r1.xyzx
  29: mul r1.w, r1.y, r1.y
  30: mad r1.w, r1.x, r1.x, -r1.w
  31: mul r2.xyzw, r1.yzzx, r1.xyzz
  32: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  33: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  34: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  35: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  36: mov o6.w, l(0)
  37: mul r0.y, r0.y, cb1[5].x
  38: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  39: mov o7.zw, r0.zzzw
  40: add o7.xy, r1.zzzz, r1.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 174 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r3.x, v2.xyzx, v2.xyzx
  10: rsq r3.x, r3.x
  11: mul r3.yzw, r3.xxxx, v2.xxyz
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r4.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r5.x, r5.xyzx, r5.xyzx
  22: sqrt r5.x, r5.x
  23: add r5.x, -r4.w, r5.x
  24: mad r4.w, cb3[25].w, r5.x, r4.w
  25: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  26: eq r5.x, cb6[0].x, l(1.000000)
  27: if_nz r5.x
  28:   eq r5.y, cb6[0].y, l(1.000000)
  29:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  30:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  31:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  32:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  33:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  34:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  35:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  36:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  37:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r6.x, r5.z, r5.y
  39:   sample r6.xyzw, r6.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r5.y, r6.xyzw, cb2[45].xyzw
  44: div r5.zw, v7.xxxy, v7.wwww
  45: sample r6.xyzw, r5.zwzz, t1.xyzw, s4
  46: add_sat r4.w, r4.w, r6.x
  47: min r5.y, r4.w, r5.y
  48: movc r4.w, r5.x, r5.y, r4.w
  49: sample r6.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.y, -cb0[9].y, l(1.000000)
  51: mad r5.y, r6.y, cb0[9].y, r5.y
  52: mad r5.z, -r0.w, cb0[9].x, l(1.000000)
  53: dp3 r5.w, r3.yzwy, r2.xyzx
  54: add r5.w, r5.w, r5.w
  55: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  56: mul r7.xyz, r4.wwww, cb0[2].xyzx
  57: if_nz r5.x
  58:   eq r4.w, cb6[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  60:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  63:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  66:   mul r4.w, r8.y, l(0.250000)
  67:   mul r5.x, cb6[0].z, l(0.500000)
  68:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  69:   max r4.w, r4.w, r5.x
  70:   min r8.x, r5.w, r4.w
  71:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[38].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[39].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[40].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb5[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.z
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 115: add r4.w, r9.w, l(-1.000000)
 116: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 117: mul r4.w, r4.w, cb5[3].x
 118: mul r10.xyz, r9.xyzx, r4.wwww
 119: lt r5.x, cb5[1].w, l(0.999990)
 120: if_nz r5.x
 121:   lt r5.x, l(0.000000), cb5[6].w
 122:   if_nz r5.x
 123:     dp3 r5.x, r6.xyzx, r6.xyzx
 124:     rsq r5.x, r5.x
 125:     mul r11.xyz, r5.xxxx, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r5.x, r12.y, r12.x
 133:     min r5.x, r12.z, r5.x
 134:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 136:   endif 
 137:   sample_l r6.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 138:   add r2.w, r6.w, l(-1.000000)
 139:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb5[7].x
 141:   mul r4.xyz, r6.xyzx, r2.wwww
 142:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.yyyy, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 147: dp3 r2.w, r6.xyzx, r6.xyzx
 148: max r2.w, r2.w, l(0.001000)
 149: rsq r2.w, r2.w
 150: mul r6.xyz, r2.wwww, r6.xyzx
 151: dp3 r2.w, r2.xyzx, -r3.yzwy
 152: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.zzzz
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.y, -r3.x, l(1.000000)
 159: mul r3.z, r3.y, r3.y
 160: mul r3.z, r3.z, r3.z
 161: mul r3.y, r3.y, r3.z
 162: mad r3.y, r2.z, r3.y, l(1.000000)
 163: add r3.z, -|r2.w|, l(1.000000)
 164: mul r3.w, r3.z, r3.z
 165: mul r3.w, r3.w, r3.w
 166: mul r3.z, r3.z, r3.w
 167: mad r2.z, r2.z, r3.z, l(1.000000)
 168: mul r2.z, r2.z, r3.y
 169: mul r3.y, r5.z, r5.z
 170: mad r3.w, -r5.z, r5.z, l(1.000000)
 171: mad r4.w, |r2.w|, r3.w, r3.y
 172: mad r3.w, r3.x, r3.w, r3.y
 173: mul r2.w, |r2.w|, r3.w
 174: mad r2.w, r3.x, r4.w, r2.w
 175: add r2.w, r2.w, l(0.000010)
 176: div r2.w, l(0.500000), r2.w
 177: mul r3.w, r3.y, r3.y
 178: mad r4.w, r2.x, r3.w, -r2.x
 179: mad r2.x, r4.w, r2.x, l(1.000000)
 180: mul r3.w, r3.w, l(0.318310)
 181: mad r2.x, r2.x, r2.x, l(0.000000)
 182: div r2.x, r3.w, r2.x
 183: mul r2.x, r2.x, r2.w
 184: mul r2.x, r2.x, l(3.141593)
 185: max r2.x, r2.x, l(0.000100)
 186: sqrt r2.x, r2.x
 187: mul r2.xz, r3.xxxx, r2.xxzx
 188: mul r2.w, r3.y, r5.z
 189: mad r2.w, -r2.w, l(0.280000), l(1.000000)
 190: dp3 r3.x, r0.xyzx, r0.xyzx
 191: ne r3.x, r3.x, l(0.000000)
 192: and r3.x, r3.x, l(0x3f800000)
 193: mul r2.x, r2.x, r3.x
 194: mad r0.w, r0.w, cb0[9].x, -r1.w
 195: add_sat r0.w, r0.w, l(1.000000)
 196: mul r3.xyw, r2.zzzz, r7.xyxz
 197: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 198: mul r5.xyz, r7.xyzx, r2.xxxx
 199: add r1.w, -r2.y, l(1.000000)
 200: mul r2.x, r1.w, r1.w
 201: mul r2.x, r2.x, r2.x
 202: mul r1.w, r1.w, r2.x
 203: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 204: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 205: mul r2.xyz, r2.xyzx, r5.xyzx
 206: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 207: mul r2.xyz, r4.xyzx, r2.wwww
 208: add r3.xyw, -r0.xyxz, r0.wwww
 209: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 210: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 211: mov o0.w, l(1.000000)
 212: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 45 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _MainTex_ST at 17
Vector4 _ProjectionParams at 12
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 15
Vector4 unity_SHBg at 14
Vector4 unity_SHBr at 13
Vector4 unity_SHC at 16

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   unity_SHBr           c13      1
//   unity_SHBg           c14      1
//   unity_SHBb           c15      1
//   unity_SHC            c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mad r1, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c20.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.z, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mul r3.w, r0.z, c20.z
    add o7.xy, r3.z, r3.xwzw
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c13, r1
    dp4 r2.y, c14, r1
    dp4 r2.z, c15, r1
    mad o6.xyz, c16, r0.z, r2
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c20.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 46 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 166 math, 7 textures, 14 branches
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 19
Float _Glossiness at 21
Vector4 _LightColor0 at 18
Vector4 _LightShadowData at 8
Float _Metallic at 20
Float _OcclusionStrength at 22
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4
Vector4 unity_SHAb at 7
Vector4 unity_SHAg at 6
Vector4 unity_SHAr at 5
Vector4 unity_ShadowFadeCenterAndType at 9
Vector4 unity_SpecCube0_BoxMax at 10
Vector4 unity_SpecCube0_BoxMin at 11
Vector4 unity_SpecCube0_HDR at 13
Vector4 unity_SpecCube0_ProbePosition at 12
Vector4 unity_SpecCube1_BoxMax at 14
Vector4 unity_SpecCube1_BoxMin at 15
Vector4 unity_SpecCube1_HDR at 17
Vector4 unity_SpecCube1_ProbePosition at 16

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_ShadowMapTexture" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_ShadowFadeCenterAndType;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _WorldSpaceLightPos0          c4       1
//   unity_SHAr                    c5       1
//   unity_SHAg                    c6       1
//   unity_SHAb                    c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_SpecCube0_BoxMax        c10      1
//   unity_SpecCube0_BoxMin        c11      1
//   unity_SpecCube0_ProbePosition c12      1
//   unity_SpecCube0_HDR           c13      1
//   unity_SpecCube1_BoxMax        c14      1
//   unity_SpecCube1_BoxMin        c15      1
//   unity_SpecCube1_ProbePosition c16      1
//   unity_SpecCube1_HDR           c17      1
//   _LightColor0                  c18      1
//   _Color                        c19      1
//   _Metallic                     c20      1
//   _Glossiness                   c21      1
//   _OcclusionStrength            c22      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//   _ShadowMapTexture             s4       1
//

    ps_3_0
    def c23, -0.220916301, 0.220916301, 0.779083729, 1
    def c24, 0, 0.416666657, 1.05499995, -0.0549999997
    def c25, 0.699999988, 1.70000005, 6, 0.999989986
    def c26, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c27, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c28, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5_pp v5.xyz
    dcl_texcoord6 v6
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c19
    mov r2, c23
    mad_pp r0.xyz, c19, r0, r2.x
    mad_pp r0.xyz, c20.x, r0, r2.y
    mad_pp r0.w, c20.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r3.xyz, v4
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r2.xyz, r1.w, v1
    mov_pp r4.x, v2.w
    mov_pp r4.y, v3.w
    mov_pp r4.z, v4.w
    add r5.xyz, -r4, c3
    dp3 r4.w, r5, c2
    add r5.xyz, r4, -c9
    dp3 r5.x, r5, r5
    rsq r5.x, r5.x
    rcp r5.x, r5.x
    lrp r6.x, c9.w, r5.x, r4.w
    mad_sat_pp r4.w, r6.x, c8.z, c8.w
    texldp_pp r5, v6, s4
    add_sat_pp r4.w, r4.w, r5.x
    texld_pp r5, v0, s3
    add_pp r5.x, r2.w, -c22.x
    mad_pp r5.x, r5.y, c22.x, r5.x
    add_pp r5.y, r2.w, -c21.x
    dp3_pp r5.z, r2, r3
    add_pp r5.z, r5.z, r5.z
    mad_pp r6.xyz, r3, -r5.z, r2
    mul_pp r7.xyz, r4.w, c18
    mov r3.w, c23.w
    dp4_pp r8.x, c5, r3
    dp4_pp r8.y, c6, r3
    dp4_pp r8.z, c7, r3
    add_pp r8.xyz, r8, v5
    max_pp r9.xyz, r8, c24.x
    log_pp r8.x, r9.x
    log_pp r8.y, r9.y
    log_pp r8.z, r9.z
    mul_pp r8.xyz, r8, c24.y
    exp_pp r9.x, r8.x
    exp_pp r9.y, r8.y
    exp_pp r9.z, r8.z
    mad_pp r8.xyz, r9, c24.z, c24.w
    max_pp r9.xyz, r8, c24.x
    mov r8.x, c24.x
    if_lt -c12.w, r8.x
      nrm_pp r10.xyz, r6
      add r8.yzw, -r4.xxyz, c10.xxyz
      rcp r11.x, r10.x
      rcp r11.y, r10.y
      rcp r11.z, r10.z
      mul_pp r8.yzw, r8, r11.xxyz
      add r12.xyz, -r4, c11
      mul_pp r11.xyz, r11, r12
      cmp_pp r8.yzw, -r10.xxyz, r11.xxyz, r8
      min_pp r3.w, r8.z, r8.y
      min_pp r4.w, r8.w, r3.w
      add r8.yzw, r4.xxyz, -c12.xxyz
      mad_pp r10.xyz, r10, r4.w, r8.yzww
    else
      mov_pp r10.xyz, r6
    endif
    mad_pp r3.w, r5.y, -c25.x, c25.y
    mul_pp r3.w, r3.w, r5.y
    mul_pp r10.w, r3.w, c25.z
    texldl_pp r11, r10, s0
    add_pp r3.w, r11.w, -c23.w
    mad_pp r3.w, c13.w, r3.w, r2.w
    mul_pp r3.w, r3.w, c13.x
    mul_pp r8.yzw, r11.xxyz, r3.w
    mov r4.w, c11.w
    if_lt r4.w, c25.w
      if_lt -c16.w, r8.x
        nrm_pp r12.xyz, r6
        add r13.xyz, -r4, c14
        rcp r14.x, r12.x
        rcp r14.y, r12.y
        rcp r14.z, r12.z
        mul_pp r13.xyz, r13, r14
        add r15.xyz, -r4, c15
        mul_pp r14.xyz, r14, r15
        cmp_pp r13.xyz, -r12, r14, r13
        min_pp r4.w, r13.y, r13.x
        min_pp r5.z, r13.z, r4.w
        add r4.xyz, r4, -c16
        mad_pp r10.xyz, r12, r5.z, r4
      else
        mov_pp r10.xyz, r6
      endif
      texldl_pp r4, r10, s1
      add_pp r4.w, r4.w, -c23.w
      mad_pp r2.w, c17.w, r4.w, r2.w
      mul_pp r2.w, r2.w, c17.x
      mul_pp r4.xyz, r4, r2.w
      mad r6.xyz, r3.w, r11, -r4
      mad_pp r8.yzw, c11.w, r6.xxyz, r4.xxyz
    endif
    mul_pp r4.xyz, r5.x, r8.yzww
    mad_pp r6.xyz, v1, -r1.w, c4
    dp3_pp r1.w, r6, r6
    add r2.w, -r1.w, c26.x
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c26.y, r1.w
    mul_pp r6.xyz, r1.w, r6
    dp3_pp r1.w, r3, -r2
    dp3_sat_pp r2.x, r3, c4
    dp3_sat_pp r2.y, r3, r6
    dp3_sat_pp r2.z, c4, r6
    mul_pp r2.w, r2.z, r2.z
    dp2add_pp r2.w, r2.w, r5.y, c26.z
    add_pp r3.x, -r2.x, c23.w
    mul_pp r3.y, r3.x, r3.x
    mul_pp r3.y, r3.y, r3.y
    mul_pp r3.x, r3.x, r3.y
    mad_pp r3.x, r2.w, r3.x, c23.w
    add_pp r3.y, -r1_abs.w, c23.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.w, r2.w, r3.y, c23.w
    mul_pp r2.w, r2.w, r3.x
    mul_pp r2.w, r2.x, r2.w
    mul_pp r3.x, r5.y, r5.y
    mad_pp r3.z, r5.y, -r5.y, c23.w
    mad_pp r3.w, r1_abs.w, r3.z, r3.x
    mad_pp r3.z, r2.x, r3.z, r3.x
    mul_pp r1.w, r1_abs.w, r3.z
    mad r1.w, r2.x, r3.w, r1.w
    add r1.w, r1.w, c26.w
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, -c26.z
    mul_pp r3.z, r3.x, r3.x
    mad_pp r3.w, r2.y, r3.z, -r2.y
    mad_pp r2.y, r3.w, r2.y, c23.w
    mul r3.z, r3.z, c27.x
    mad r2.y, r2.y, r2.y, c27.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, r3.z
    mul r1.w, r1.w, r2.y
    mul_pp r2.y, r1.w, c27.z
    mad r1.w, r1.w, -c27.z, c27.w
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r1.w, r1.w, c28.x, r2.y
    mul_pp r1.w, r2.x, r1.w
    mul_pp r2.x, r3.x, r5.y
    mad_pp r2.x, r2.x, -c28.y, c28.z
    dp3_pp r2.y, r0, r0
    cmp r2.y, -r2.y, c28.w, c28.z
    mul_pp r1.w, r1.w, r2.y
    add_pp r0.w, -r0.w, c23.w
    add_sat_pp r0.w, r0.w, c21.x
    mul_pp r3.xzw, r2.w, r7.xyyz
    mad_pp r3.xzw, r9.xyyz, r5.x, r3
    mul_pp r5.xyz, r7, r1.w
    add_pp r1.w, -r2.z, c23.w
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.w, r1.w, r2.y
    lrp_pp r2.yzw, r1.w, c23.w, r0.xxyz
    mul_pp r2.yzw, r2, r5.xxyz
    mad_pp r1.xyz, r1, r3.xzww, r2.yzww
    mul_pp r2.xyz, r4, r2.x
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp oC0.xyz, r2, r4, r1
    mov_pp oC0.w, c23.w

// approximately 184 instruction slots used (7 texture, 177 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r1.xyzx, r1.xyzx
  26: rsq r1.w, r1.w
  27: mul r1.xyz, r1.wwww, r1.xyzx
  28: mov o5.xyz, r1.xyzx
  29: mul r1.w, r1.y, r1.y
  30: mad r1.w, r1.x, r1.x, -r1.w
  31: mul r2.xyzw, r1.yzzx, r1.xyzz
  32: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  33: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  34: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  35: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  36: mov o6.w, l(0)
  37: mul r0.y, r0.y, cb1[5].x
  38: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  39: mov o7.zw, r0.zzzw
  40: add o7.xy, r1.zzzz, r1.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 175 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r3.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r4.w, r5.xyzx, r5.xyzx
  22: sqrt r4.w, r4.w
  23: add r4.w, -r3.w, r4.w
  24: mad r3.w, cb3[25].w, r4.w, r3.w
  25: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  26: eq r4.w, cb6[0].x, l(1.000000)
  27: if_nz r4.w
  28:   eq r5.x, cb6[0].y, l(1.000000)
  29:   mul r5.yzw, v4.wwww, cb6[2].xxyz
  30:   mad r5.yzw, cb6[1].xxyz, v3.wwww, r5.yyzw
  31:   mad r5.yzw, cb6[3].xxyz, v5.wwww, r5.yyzw
  32:   add r5.yzw, r5.yyzw, cb6[4].xxyz
  33:   movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
  34:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  35:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  36:   mad r5.y, r5.y, l(0.250000), l(0.750000)
  37:   mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r5.x, r5.y, r6.x
  39:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r5.x, r5.xyzw, cb2[45].xyzw
  44: div r5.yz, v7.xxyx, v7.wwww
  45: sample r6.xyzw, r5.yzyy, t1.xyzw, s4
  46: add_sat r3.w, r3.w, r6.x
  47: min r5.x, r3.w, r5.x
  48: movc r3.w, r4.w, r5.x, r3.w
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.x, -cb0[9].y, l(1.000000)
  51: mad r5.x, r5.y, cb0[9].y, r5.x
  52: add r5.y, -cb0[8].w, l(1.000000)
  53: dp3 r5.z, r3.xyzx, r2.xyzx
  54: add r5.z, r5.z, r5.z
  55: mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
  56: mul r7.xyz, r3.wwww, cb0[2].xyzx
  57: if_nz r4.w
  58:   eq r3.w, cb6[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  60:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  63:   movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  66:   mul r3.w, r8.y, l(0.250000)
  67:   mul r4.w, cb6[0].z, l(0.500000)
  68:   mad r5.z, -cb6[0].z, l(0.500000), l(0.250000)
  69:   max r3.w, r3.w, r4.w
  70:   min r8.x, r5.z, r3.w
  71:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[38].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[39].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[40].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb5[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.y, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.y
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 115: add r3.w, r9.w, l(-1.000000)
 116: mad r3.w, cb5[3].w, r3.w, l(1.000000)
 117: mul r3.w, r3.w, cb5[3].x
 118: mul r10.xyz, r9.xyzx, r3.wwww
 119: lt r4.w, cb5[1].w, l(0.999990)
 120: if_nz r4.w
 121:   lt r4.w, l(0.000000), cb5[6].w
 122:   if_nz r4.w
 123:     dp3 r4.w, r6.xyzx, r6.xyzx
 124:     rsq r4.w, r4.w
 125:     mul r11.xyz, r4.wwww, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r4.w, r12.y, r12.x
 133:     min r4.w, r12.z, r4.w
 134:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
 136:   endif 
 137:   sample_l r4.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 138:   add r2.w, r4.w, l(-1.000000)
 139:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb5[7].x
 141:   mul r4.xyz, r4.xyzx, r2.wwww
 142:   mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.xxxx, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
 147: dp3 r1.w, r6.xyzx, r6.xyzx
 148: max r1.w, r1.w, l(0.001000)
 149: rsq r1.w, r1.w
 150: mul r6.xyz, r1.wwww, r6.xyzx
 151: dp3 r1.w, r2.xyzx, -r3.xyzx
 152: dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.yyyy
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.x, -r2.w, l(1.000000)
 159: mul r3.y, r3.x, r3.x
 160: mul r3.y, r3.y, r3.y
 161: mul r3.x, r3.x, r3.y
 162: mad r3.x, r2.z, r3.x, l(1.000000)
 163: add r3.y, -|r1.w|, l(1.000000)
 164: mul r3.z, r3.y, r3.y
 165: mul r3.z, r3.z, r3.z
 166: mul r3.y, r3.y, r3.z
 167: mad r2.z, r2.z, r3.y, l(1.000000)
 168: mul r2.z, r2.z, r3.x
 169: mul r2.z, r2.w, r2.z
 170: mul r3.x, r5.y, r5.y
 171: mad r3.z, -r5.y, r5.y, l(1.000000)
 172: mad r3.w, |r1.w|, r3.z, r3.x
 173: mad r3.z, r2.w, r3.z, r3.x
 174: mul r1.w, |r1.w|, r3.z
 175: mad r1.w, r2.w, r3.w, r1.w
 176: add r1.w, r1.w, l(0.000010)
 177: div r1.w, l(0.500000), r1.w
 178: mul r3.z, r3.x, r3.x
 179: mad r3.w, r2.x, r3.z, -r2.x
 180: mad r2.x, r3.w, r2.x, l(1.000000)
 181: mul r3.z, r3.z, l(0.318310)
 182: mad r2.x, r2.x, r2.x, l(0.000000)
 183: div r2.x, r3.z, r2.x
 184: mul r1.w, r1.w, r2.x
 185: mul r1.w, r1.w, l(3.141593)
 186: max r1.w, r1.w, l(0.000100)
 187: sqrt r1.w, r1.w
 188: mul r1.w, r2.w, r1.w
 189: mul r2.x, r3.x, r5.y
 190: mad r2.x, -r2.x, l(0.280000), l(1.000000)
 191: dp3 r2.w, r0.xyzx, r0.xyzx
 192: ne r2.w, r2.w, l(0.000000)
 193: and r2.w, r2.w, l(0x3f800000)
 194: mul r1.w, r1.w, r2.w
 195: add r0.w, -r0.w, cb0[8].w
 196: add_sat r0.w, r0.w, l(1.000000)
 197: mul r3.xzw, r2.zzzz, r7.xxyz
 198: mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
 199: mul r5.xyz, r7.xyzx, r1.wwww
 200: add r1.w, -r2.y, l(1.000000)
 201: mul r2.y, r1.w, r1.w
 202: mul r2.y, r2.y, r2.y
 203: mul r1.w, r1.w, r2.y
 204: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 205: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 206: mul r2.yzw, r2.yyzw, r5.xxyz
 207: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 208: mul r2.xyz, r4.xyzx, r2.xxxx
 209: add r3.xzw, -r0.xxyz, r0.wwww
 210: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 211: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 212: mov o0.w, l(1.000000)
 213: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 44 math, 4 textures
Vector4 _Color at 3
Float _GlossMapScale at 5
Vector4 _LightColor0 at 2
Float _Metallic at 4
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_SpecCube0_HDR at 1

Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float4 _WorldSpaceLightPos0;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceLightPos0 c0       1
//   unity_SpecCube0_HDR  c1       1
//   _LightColor0         c2       1
//   _Color               c3       1
//   _Metallic            c4       1
//   _GlossMapScale       c5       1
//   unity_SpecCube0      s0       1
//   unity_NHxRoughness   s1       1
//   _MainTex             s2       1
//   _OcclusionMap        s3       1
//

    ps_2_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 1
    def c7, 0.699999988, 1.70000005, 6, 16
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t0, s2
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, t1
    mov r3, c6
    mad_pp r4.y, r0.w, -c5.x, r3.w
    mad_pp r1.w, r4.y, -c7.x, c7.y
    mul_pp r1.w, r1.w, r4.y
    mul_pp r2.w, r1.w, c7.z
    dp3_pp r1.w, -t1, r1
    add_pp r4.z, r1.w, r1.w
    mov_sat_pp r1.w, r1.w
    add_pp r5.y, -r1.w, c6.w
    mad_pp r6.xyz, r1, -r4.z, -t1
    dp3_pp r5.x, r6, c0
    mul_pp r4.zw, r5.wzyx, r5.wzyx
    mul_pp r4.zw, r4, r4
    mov_pp r4.x, r4.w
    texldb_pp r2, r2, s0
    texld_pp r5, t0, s3
    texld r6, r4, s1
    add_pp r1.w, r2.w, -c6.w
    mad_pp r1.w, c1.w, r1.w, r3.w
    mul_pp r1.w, r1.w, c1.x
    mul_pp r2.xyz, r2, r1.w
    mul_pp r2.xyz, r5.y, r2
    mul_pp r5.xyz, r5.y, t5
    dp3_sat_pp r2.w, r1, c0
    mul_pp r1.xyz, r2.w, c2
    mad_pp r1.w, c4.x, -r3.z, r3.z
    mad_pp r0.w, r0.w, c5.x, -r1.w
    add_sat_pp r0.w, r0.w, c6.w
    mad_pp r6.yzw, c3.wzyx, r0.wzyx, r3.x
    mul_pp r0.xyz, r0, c3
    mul_pp r0.xyz, r1.w, r0
    mad_pp r3.xyz, c4.x, r6.wzyx, r3.y
    lrp_pp r6.yzw, r4.z, r0.w, r3.wzyx
    mul_pp r0.w, r6.x, c7.w
    mad_pp r3.xyz, r0.w, r3, r0
    mul_pp r2.xyz, r2, r6.wzyx
    mad_pp r0.xyz, r5, r0, r2
    mad_pp r0.xyz, r3, r1, r0
    mov_pp r0.w, c6.w
    mov_pp oC0, r0

// approximately 47 instruction slots used (4 texture, 43 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 52 math, 8 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: eq r2.w, cb3[0].x, l(1.000000)
  10: if_nz r2.w
  11:   eq r2.w, cb3[0].y, l(1.000000)
  12:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  13:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  14:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  15:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  16:   mov r4.y, v3.w
  17:   mov r4.z, v4.w
  18:   mov r4.w, v5.w
  19:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  20:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  21:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  22:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  23:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  24:   max r3.x, r2.w, r3.y
  25:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  26: else 
  27:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r3.xyzw, cb1[45].xyzw
  30: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  31: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  32: dp3 r3.x, v2.xyzx, r2.xyzx
  33: add r3.x, r3.x, r3.x
  34: mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
  35: mul r5.xyz, r2.wwww, cb0[2].xyzx
  36: mul r6.xyz, r3.yyyy, v6.xyzx
  37: mad r2.w, -r4.z, l(0.700000), l(1.700000)
  38: mul r2.w, r2.w, r4.z
  39: mul r2.w, r2.w, l(6.000000)
  40: sample_l r7.xyzw, r3.xzwx, t3.xyzw, s0, r2.w
  41: add r2.w, r7.w, l(-1.000000)
  42: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  43: mul r2.w, r2.w, cb2[3].x
  44: mul r3.xzw, r7.xxyz, r2.wwww
  45: mul r3.xyz, r3.yyyy, r3.xzwx
  46: dp3 r2.w, -v2.xyzx, r2.xyzx
  47: add r3.w, r2.w, r2.w
  48: mad r7.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  49: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  50: mov_sat r2.w, r2.w
  51: dp3 r7.x, r7.xyzx, cb1[0].xyzx
  52: add r7.y, -r2.w, l(1.000000)
  53: mul r2.yz, r7.xxyx, r7.xxyx
  54: mul r4.xy, r2.yzyy, r2.yzyy
  55: mad r0.w, r0.w, cb0[9].x, -r1.w
  56: add_sat r0.w, r0.w, l(1.000000)
  57: sample r7.xyzw, r4.xzxx, t2.xyzw, s2
  58: mul r1.w, r7.x, l(16.000000)
  59: mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
  60: mul r4.xzw, r2.xxxx, r5.xxyz
  61: add r5.xyz, -r0.xyzx, r0.wwww
  62: mad r0.xyz, r4.yyyy, r5.xyzx, r0.xyzx
  63: mul r0.xyz, r0.xyzx, r3.xyzx
  64: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  65: mad o0.xyz, r2.yzwy, r4.xzwx, r0.xyzx
  66: mov o0.w, l(1.000000)
  67: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 49 math, 4 textures
Vector4 _Color at 4
Float _Glossiness at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_FogColor at 1
Vector4 unity_SpecCube0_HDR at 2

Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogColor;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceLightPos0 c0       1
//   unity_FogColor       c1       1
//   unity_SpecCube0_HDR  c2       1
//   _LightColor0         c3       1
//   _Color               c4       1
//   _Metallic            c5       1
//   _Glossiness          c6       1
//   unity_SpecCube0      s0       1
//   unity_NHxRoughness   s1       1
//   _MainTex             s2       1
//   _OcclusionMap        s3       1
//

    ps_2_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0.699999988, 1.70000005, 6, 16
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl t7.x
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mov r0, c7
    add_pp r1.w, r0.w, -c6.x
    mad_pp r1.x, r1.w, -c8.x, c8.y
    mul_pp r1.x, r1.x, r1.w
    mul_pp r1.w, r1.x, c8.z
    nrm_pp r2.xyz, t4
    dp3_pp r2.w, t1, r2
    add_pp r2.w, r2.w, r2.w
    mad_pp r1.xyz, r2, -r2.w, t1
    dp3_pp r2.w, -t1, r2
    add_pp r3.w, r2.w, r2.w
    mov_sat_pp r2.w, r2.w
    add_pp r3.y, -r2.w, c7.w
    mad_pp r4.xyz, r2, -r3.w, -t1
    dp3_pp r3.x, r4, c0
    mul_pp r3.xy, r3, r3
    mul_pp r3.xy, r3, r3
    add_pp r3.z, r0.w, -c6.x
    mov_pp r4.x, r3.x
    mov_pp r4.y, r3.z
    texldb_pp r1, r1, s0
    texld_pp r5, t0, s3
    texld r6, t0, s2
    texld r4, r4, s1
    add_pp r1.w, r1.w, -c7.w
    mad_pp r0.w, c2.w, r1.w, r0.w
    mul_pp r0.w, r0.w, c2.x
    mul_pp r1.xyz, r1, r0.w
    mul_pp r1.xyz, r5.y, r1
    mul_pp r4.yzw, r5.y, t5.wzyx
    dp3_sat_pp r0.w, r2, c0
    mul_pp r2.xyz, r0.w, c3
    mad_pp r1.w, c5.x, -r0.z, r0.z
    add_pp r2.w, -r1.w, c6.x
    add_sat_pp r2.w, r2.w, c7.w
    mad_pp r5.xyz, c4, r6, r0.x
    mul_pp r6.xyz, r6, c4
    mul_pp r6.xyz, r1.w, r6
    mad_pp r0.xyz, c5.x, r5, r0.y
    lrp_pp r5.xyz, r3.y, r2.w, r0
    mul_pp r1.xyz, r1, r5
    mad_pp r1.xyz, r4.wzyx, r6, r1
    mul_pp r0.w, r4.x, c8.w
    mad_pp r0.xyz, r0.w, r0, r6
    mad_pp r0.xyz, r0, r2, r1
    mov_sat r0.w, t7.x
    lrp_pp r1.xyz, r0.w, r0, c1
    mov_pp r1.w, c7.w
    mov_pp oC0, r1

// approximately 51 instruction slots used (4 texture, 47 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 54 math, 8 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 2 {
  Vector4 unity_FogColor at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: eq r1.w, cb4[0].x, l(1.000000)
  10: if_nz r1.w
  11:   eq r1.w, cb4[0].y, l(1.000000)
  12:   mul r3.xyz, v4.wwww, cb4[2].xyzx
  13:   mad r3.xyz, cb4[1].xyzx, v3.wwww, r3.xyzx
  14:   mad r3.xyz, cb4[3].xyzx, v5.wwww, r3.xyzx
  15:   add r3.xyz, r3.xyzx, cb4[4].xyzx
  16:   mov r4.y, v3.w
  17:   mov r4.z, v4.w
  18:   mov r4.w, v5.w
  19:   movc r3.xyz, r1.wwww, r3.xyzx, r4.yzwy
  20:   add r3.xyz, r3.xyzx, -cb4[6].xyzx
  21:   mul r3.yzw, r3.xxyz, cb4[5].xxyz
  22:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
  24:   max r3.x, r1.w, r2.w
  25:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  26: else 
  27:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r3.xyzw, cb1[45].xyzw
  30: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  31: add r4.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
  32: dp3 r2.w, v2.xyzx, r2.xyzx
  33: add r2.w, r2.w, r2.w
  34: mad r3.xzw, r2.xxyz, -r2.wwww, v2.xxyz
  35: mul r5.xyz, r1.wwww, cb0[2].xyzx
  36: mul r6.xyz, r3.yyyy, v6.xyzx
  37: mad r1.w, -r4.x, l(0.700000), l(1.700000)
  38: mul r1.w, r1.w, r4.x
  39: mul r1.w, r1.w, l(6.000000)
  40: sample_l r7.xyzw, r3.xzwx, t3.xyzw, s0, r1.w
  41: add r1.w, r7.w, l(-1.000000)
  42: mad r1.w, cb3[3].w, r1.w, l(1.000000)
  43: mul r1.w, r1.w, cb3[3].x
  44: mul r3.xzw, r7.xxyz, r1.wwww
  45: mul r3.xyz, r3.yyyy, r3.xzwx
  46: dp3 r1.w, -v2.xyzx, r2.xyzx
  47: add r2.w, r1.w, r1.w
  48: mad r7.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  49: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  50: mov_sat r1.w, r1.w
  51: dp3 r7.x, r7.xyzx, cb1[0].xyzx
  52: add r7.y, -r1.w, l(1.000000)
  53: mul r2.yz, r7.xxyx, r7.xxyx
  54: mul r4.yz, r2.yyzy, r2.yyzy
  55: add r0.w, -r0.w, cb0[8].w
  56: add_sat r0.w, r0.w, l(1.000000)
  57: sample r7.xyzw, r4.ywyy, t2.xyzw, s2
  58: mul r1.w, r7.x, l(16.000000)
  59: mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
  60: mul r4.xyw, r2.xxxx, r5.xyxz
  61: add r5.xyz, -r0.xyzx, r0.wwww
  62: mad r0.xyz, r4.zzzz, r5.xyzx, r0.xyzx
  63: mul r0.xyz, r0.xyzx, r3.xyzx
  64: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  65: mad r0.xyz, r2.yzwy, r4.xywx, r0.xyzx
  66: mov_sat r0.w, v7.z
  67: add r0.xyz, r0.xyzx, -cb2[0].xyzx
  68: mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
  69: mov o0.w, l(1.000000)
  70: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 169 math, 7 textures, 14 branches
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 21
Float _GlossMapScale at 23
Vector4 _LightColor0 at 20
Vector4 _LightShadowData at 8
Float _Metallic at 22
Float _OcclusionStrength at 24
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4
Vector4 unity_FogColor at 10
Vector4 unity_FogParams at 11
Vector4 unity_SHAb at 7
Vector4 unity_SHAg at 6
Vector4 unity_SHAr at 5
Vector4 unity_ShadowFadeCenterAndType at 9
Vector4 unity_SpecCube0_BoxMax at 12
Vector4 unity_SpecCube0_BoxMin at 13
Vector4 unity_SpecCube0_HDR at 15
Vector4 unity_SpecCube0_ProbePosition at 14
Vector4 unity_SpecCube1_BoxMax at 16
Vector4 unity_SpecCube1_BoxMin at 17
Vector4 unity_SpecCube1_HDR at 19
Vector4 unity_SpecCube1_ProbePosition at 18

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_ShadowMapTexture" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogColor;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_ShadowFadeCenterAndType;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _WorldSpaceLightPos0          c4       1
//   unity_SHAr                    c5       1
//   unity_SHAg                    c6       1
//   unity_SHAb                    c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_FogColor                c10      1
//   unity_FogParams               c11      1
//   unity_SpecCube0_BoxMax        c12      1
//   unity_SpecCube0_BoxMin        c13      1
//   unity_SpecCube0_ProbePosition c14      1
//   unity_SpecCube0_HDR           c15      1
//   unity_SpecCube1_BoxMax        c16      1
//   unity_SpecCube1_BoxMin        c17      1
//   unity_SpecCube1_ProbePosition c18      1
//   unity_SpecCube1_HDR           c19      1
//   _LightColor0                  c20      1
//   _Color                        c21      1
//   _Metallic                     c22      1
//   _GlossMapScale                c23      1
//   _OcclusionStrength            c24      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//   _ShadowMapTexture             s4       1
//

    ps_3_0
    def c25, -0.220916301, 0.220916301, 0.779083729, 1
    def c26, 0, 0.416666657, 1.05499995, -0.0549999997
    def c27, 0.699999988, 1.70000005, 6, 0.999989986
    def c28, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c29, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c30, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5_pp v5.xyz
    dcl_texcoord6 v6
    dcl_texcoord7 v7.x
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c21
    mov r2, c25
    mad_pp r0.xyz, c21, r0, r2.x
    mad_pp r0.xyz, c22.x, r0, r2.y
    mad_pp r1.w, c22.x, -r2.z, r2.z
    mul_pp r1.xyz, r1.w, r1
    nrm_pp r3.xyz, v4
    dp3_pp r2.x, v1, v1
    rsq_pp r2.x, r2.x
    mul_pp r4.xyz, r2.x, v1
    mov_pp r5.x, v2.w
    mov_pp r5.y, v3.w
    mov_pp r5.z, v4.w
    add r6.xyz, -r5, c3
    dp3 r2.y, r6, c2
    add r6.xyz, r5, -c9
    dp3 r2.z, r6, r6
    rsq r2.z, r2.z
    rcp r2.z, r2.z
    lrp r4.w, c9.w, r2.z, r2.y
    mad_sat_pp r2.y, r4.w, c8.z, c8.w
    texldp_pp r6, v6, s4
    add_sat_pp r2.y, r2.y, r6.x
    texld_pp r6, v0, s3
    add_pp r2.z, r2.w, -c24.x
    mad_pp r2.z, r6.y, c24.x, r2.z
    mad_pp r4.w, r0.w, -c23.x, r2.w
    dp3_pp r5.w, r4, r3
    add_pp r5.w, r5.w, r5.w
    mad_pp r6.xyz, r3, -r5.w, r4
    mul_pp r7.xyz, r2.y, c20
    mov r3.w, c25.w
    dp4_pp r8.x, c5, r3
    dp4_pp r8.y, c6, r3
    dp4_pp r8.z, c7, r3
    add_pp r8.xyz, r8, v5
    max_pp r9.xyz, r8, c26.x
    log_pp r8.x, r9.x
    log_pp r8.y, r9.y
    log_pp r8.z, r9.z
    mul_pp r8.xyz, r8, c26.y
    exp_pp r9.x, r8.x
    exp_pp r9.y, r8.y
    exp_pp r9.z, r8.z
    mad_pp r8.xyz, r9, c26.z, c26.w
    max_pp r9.xyz, r8, c26.x
    mov r8.x, c26.x
    if_lt -c14.w, r8.x
      nrm_pp r10.xyz, r6
      add r8.yzw, -r5.xxyz, c12.xxyz
      rcp r11.x, r10.x
      rcp r11.y, r10.y
      rcp r11.z, r10.z
      mul_pp r8.yzw, r8, r11.xxyz
      add r12.xyz, -r5, c13
      mul_pp r11.xyz, r11, r12
      cmp_pp r8.yzw, -r10.xxyz, r11.xxyz, r8
      min_pp r2.y, r8.z, r8.y
      min_pp r3.w, r8.w, r2.y
      add r8.yzw, r5.xxyz, -c14.xxyz
      mad_pp r10.xyz, r10, r3.w, r8.yzww
    else
      mov_pp r10.xyz, r6
    endif
    mad_pp r2.y, r4.w, -c27.x, c27.y
    mul_pp r2.y, r2.y, r4.w
    mul_pp r10.w, r2.y, c27.z
    texldl_pp r11, r10, s0
    add_pp r2.y, r11.w, -c25.w
    mad_pp r2.y, c15.w, r2.y, r2.w
    mul_pp r2.y, r2.y, c15.x
    mul_pp r8.yzw, r11.xxyz, r2.y
    mov r3.w, c13.w
    if_lt r3.w, c27.w
      if_lt -c18.w, r8.x
        nrm_pp r12.xyz, r6
        add r13.xyz, -r5, c16
        rcp r14.x, r12.x
        rcp r14.y, r12.y
        rcp r14.z, r12.z
        mul_pp r13.xyz, r13, r14
        add r15.xyz, -r5, c17
        mul_pp r14.xyz, r14, r15
        cmp_pp r13.xyz, -r12, r14, r13
        min_pp r3.w, r13.y, r13.x
        min_pp r5.w, r13.z, r3.w
        add r5.xyz, r5, -c18
        mad_pp r10.xyz, r12, r5.w, r5
      else
        mov_pp r10.xyz, r6
      endif
      texldl_pp r5, r10, s1
      add_pp r3.w, r5.w, -c25.w
      mad_pp r2.w, c19.w, r3.w, r2.w
      mul_pp r2.w, r2.w, c19.x
      mul_pp r5.xyz, r5, r2.w
      mad r6.xyz, r2.y, r11, -r5
      mad_pp r8.yzw, c13.w, r6.xxyz, r5.xxyz
    endif
    mul_pp r5.xyz, r2.z, r8.yzww
    mad_pp r2.xyw, v1.xyzz, -r2.x, c4.xyzz
    dp3_pp r3.w, r2.xyww, r2.xyww
    add r5.w, -r3.w, c28.x
    rsq_pp r3.w, r3.w
    cmp_pp r3.w, r5.w, c28.y, r3.w
    mul_pp r2.xyw, r2, r3.w
    dp3_pp r3.w, r3, -r4
    dp3_sat_pp r4.x, r3, c4
    dp3_sat_pp r3.x, r3, r2.xyww
    dp3_sat_pp r2.x, c4, r2.xyww
    mul_pp r2.y, r2.x, r2.x
    dp2add_pp r2.y, r2.y, r4.w, c28.z
    add_pp r2.w, -r4.x, c25.w
    mul_pp r3.y, r2.w, r2.w
    mul_pp r3.y, r3.y, r3.y
    mul_pp r2.w, r2.w, r3.y
    mad_pp r2.w, r2.y, r2.w, c25.w
    add_pp r3.y, -r3_abs.w, c25.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.y, r2.y, r3.y, c25.w
    mul_pp r2.y, r2.y, r2.w
    mul_pp r2.y, r4.x, r2.y
    mul_pp r2.w, r4.w, r4.w
    mad_pp r3.z, r4.w, -r4.w, c25.w
    mad_pp r4.y, r3_abs.w, r3.z, r2.w
    mad_pp r3.z, r4.x, r3.z, r2.w
    mul_pp r3.z, r3.z, r3_abs.w
    mad r3.z, r4.x, r4.y, r3.z
    add r3.z, r3.z, c28.w
    rcp r3.z, r3.z
    mul_pp r3.z, r3.z, -c28.z
    mul_pp r3.w, r2.w, r2.w
    mad_pp r4.y, r3.x, r3.w, -r3.x
    mad_pp r3.x, r4.y, r3.x, c25.w
    mul r3.w, r3.w, c29.x
    mad r3.x, r3.x, r3.x, c29.y
    rcp r3.x, r3.x
    mul_pp r3.x, r3.x, r3.w
    mul r3.x, r3.x, r3.z
    mul_pp r3.z, r3.x, c29.z
    mad r3.x, r3.x, -c29.z, c29.w
    rsq r3.z, r3.z
    rcp_pp r3.z, r3.z
    cmp_pp r3.x, r3.x, c30.x, r3.z
    mul_pp r3.x, r4.x, r3.x
    mul_pp r2.w, r2.w, r4.w
    mad_pp r2.w, r2.w, -c30.y, c30.z
    dp3_pp r3.z, r0, r0
    cmp r3.z, -r3.z, c30.w, c30.z
    mul_pp r3.x, r3.z, r3.x
    add_pp r1.w, -r1.w, c25.w
    mad_sat_pp r0.w, r0.w, c23.x, r1.w
    mul_pp r4.xyz, r2.y, r7
    mad_pp r4.xyz, r9, r2.z, r4
    mul_pp r3.xzw, r7.xyyz, r3.x
    add_pp r1.w, -r2.x, c25.w
    mul_pp r2.x, r1.w, r1.w
    mul_pp r2.x, r2.x, r2.x
    mul_pp r1.w, r1.w, r2.x
    lrp_pp r2.xyz, r1.w, c25.w, r0
    mul_pp r2.xyz, r2, r3.xzww
    mad_pp r1.xyz, r1, r4, r2
    mul_pp r2.xyz, r5, r2.w
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp r0.xyz, r2, r4, r1
    mad_sat r0.w, v7.x, c11.z, c11.w
    add r0.xyz, r0, -c10
    mad_pp oC0.xyz, r0.w, r0, c10
    mov_pp oC0.w, c25.w

// approximately 187 instruction slots used (7 texture, 180 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 181 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogColor at 0
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 6 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 7 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[8], immediateIndexed
      dcl_constantbuffer CB7[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v2.w
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: dp3 r3.x, v2.xyzx, v2.xyzx
  10: rsq r3.x, r3.x
  11: mul r3.yzw, r3.xxxx, v2.xxyz
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r4.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r5.x, r5.xyzx, r5.xyzx
  22: sqrt r5.x, r5.x
  23: add r5.x, -r4.w, r5.x
  24: mad r4.w, cb3[25].w, r5.x, r4.w
  25: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  26: eq r5.x, cb7[0].x, l(1.000000)
  27: if_nz r5.x
  28:   eq r5.y, cb7[0].y, l(1.000000)
  29:   mul r6.xyz, v4.wwww, cb7[2].xyzx
  30:   mad r6.xyz, cb7[1].xyzx, v3.wwww, r6.xyzx
  31:   mad r6.xyz, cb7[3].xyzx, v5.wwww, r6.xyzx
  32:   add r6.xyz, r6.xyzx, cb7[4].xyzx
  33:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  34:   add r5.yzw, r5.yyzw, -cb7[6].xxyz
  35:   mul r6.yzw, r5.yyzw, cb7[5].xxyz
  36:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  37:   mad r5.z, cb7[0].z, l(0.500000), l(0.750000)
  38:   max r6.x, r5.z, r5.y
  39:   sample r6.xyzw, r6.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r5.y, r6.xyzw, cb2[45].xyzw
  44: div r5.zw, v7.xxxy, v7.wwww
  45: sample r6.xyzw, r5.zwzz, t1.xyzw, s4
  46: add_sat r4.w, r4.w, r6.x
  47: min r5.y, r4.w, r5.y
  48: movc r4.w, r5.x, r5.y, r4.w
  49: sample r6.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.y, -cb0[9].y, l(1.000000)
  51: mad r5.y, r6.y, cb0[9].y, r5.y
  52: mad r5.z, -r0.w, cb0[9].x, l(1.000000)
  53: dp3 r5.w, r3.yzwy, r2.xyzx
  54: add r5.w, r5.w, r5.w
  55: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  56: mul r7.xyz, r4.wwww, cb0[2].xyzx
  57: if_nz r5.x
  58:   eq r4.w, cb7[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb7[2].xyzx
  60:   mad r8.xyz, cb7[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb7[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb7[4].xyzx
  63:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb7[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb7[5].xxyz
  66:   mul r4.w, r8.y, l(0.250000)
  67:   mul r5.x, cb7[0].z, l(0.500000)
  68:   mad r5.w, -cb7[0].z, l(0.500000), l(0.250000)
  69:   max r4.w, r4.w, r5.x
  70:   min r8.x, r5.w, r4.w
  71:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[38].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[39].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[40].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb6[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb6[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb6[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb6[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.z
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 115: add r4.w, r9.w, l(-1.000000)
 116: mad r4.w, cb6[3].w, r4.w, l(1.000000)
 117: mul r4.w, r4.w, cb6[3].x
 118: mul r10.xyz, r9.xyzx, r4.wwww
 119: lt r5.x, cb6[1].w, l(0.999990)
 120: if_nz r5.x
 121:   lt r5.x, l(0.000000), cb6[6].w
 122:   if_nz r5.x
 123:     dp3 r5.x, r6.xyzx, r6.xyzx
 124:     rsq r5.x, r5.x
 125:     mul r11.xyz, r5.xxxx, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb6[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb6[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r5.x, r12.y, r12.x
 133:     min r5.x, r12.z, r5.x
 134:     add r4.xyz, r4.xyzx, -cb6[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 136:   endif 
 137:   sample_l r6.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 138:   add r2.w, r6.w, l(-1.000000)
 139:   mad r2.w, cb6[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb6[7].x
 141:   mul r4.xyz, r6.xyzx, r2.wwww
 142:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb6[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.yyyy, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 147: dp3 r2.w, r6.xyzx, r6.xyzx
 148: max r2.w, r2.w, l(0.001000)
 149: rsq r2.w, r2.w
 150: mul r6.xyz, r2.wwww, r6.xyzx
 151: dp3 r2.w, r2.xyzx, -r3.yzwy
 152: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.zzzz
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.y, -r3.x, l(1.000000)
 159: mul r3.z, r3.y, r3.y
 160: mul r3.z, r3.z, r3.z
 161: mul r3.y, r3.y, r3.z
 162: mad r3.y, r2.z, r3.y, l(1.000000)
 163: add r3.z, -|r2.w|, l(1.000000)
 164: mul r3.w, r3.z, r3.z
 165: mul r3.w, r3.w, r3.w
 166: mul r3.z, r3.z, r3.w
 167: mad r2.z, r2.z, r3.z, l(1.000000)
 168: mul r2.z, r2.z, r3.y
 169: mul r3.y, r5.z, r5.z
 170: mad r3.w, -r5.z, r5.z, l(1.000000)
 171: mad r4.w, |r2.w|, r3.w, r3.y
 172: mad r3.w, r3.x, r3.w, r3.y
 173: mul r2.w, |r2.w|, r3.w
 174: mad r2.w, r3.x, r4.w, r2.w
 175: add r2.w, r2.w, l(0.000010)
 176: div r2.w, l(0.500000), r2.w
 177: mul r3.w, r3.y, r3.y
 178: mad r4.w, r2.x, r3.w, -r2.x
 179: mad r2.x, r4.w, r2.x, l(1.000000)
 180: mul r3.w, r3.w, l(0.318310)
 181: mad r2.x, r2.x, r2.x, l(0.000000)
 182: div r2.x, r3.w, r2.x
 183: mul r2.x, r2.x, r2.w
 184: mul r2.x, r2.x, l(3.141593)
 185: max r2.x, r2.x, l(0.000100)
 186: sqrt r2.x, r2.x
 187: mul r2.xz, r3.xxxx, r2.xxzx
 188: mul r2.w, r3.y, r5.z
 189: mad r2.w, -r2.w, l(0.280000), l(1.000000)
 190: dp3 r3.x, r0.xyzx, r0.xyzx
 191: ne r3.x, r3.x, l(0.000000)
 192: and r3.x, r3.x, l(0x3f800000)
 193: mul r2.x, r2.x, r3.x
 194: mad r0.w, r0.w, cb0[9].x, -r1.w
 195: add_sat r0.w, r0.w, l(1.000000)
 196: mul r3.xyw, r2.zzzz, r7.xyxz
 197: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 198: mul r5.xyz, r7.xyzx, r2.xxxx
 199: add r1.w, -r2.y, l(1.000000)
 200: mul r2.x, r1.w, r1.w
 201: mul r2.x, r2.x, r2.x
 202: mul r1.w, r1.w, r2.x
 203: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 204: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 205: mul r2.xyz, r2.xyzx, r5.xyzx
 206: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 207: mul r2.xyz, r4.xyzx, r2.wwww
 208: add r3.xyw, -r0.xyxz, r0.wwww
 209: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 210: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 211: div r0.w, v2.w, cb1[5].y
 212: add r0.w, -r0.w, l(1.000000)
 213: mul r0.w, r0.w, cb1[5].z
 214: max r0.w, r0.w, l(0.000000)
 215: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 216: add r0.xyz, r0.xyzx, -cb5[0].xyzx
 217: mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
 218: mov o0.w, l(1.000000)
 219: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 169 math, 7 textures, 14 branches
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 21
Float _Glossiness at 23
Vector4 _LightColor0 at 20
Vector4 _LightShadowData at 8
Float _Metallic at 22
Float _OcclusionStrength at 24
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4
Vector4 unity_FogColor at 10
Vector4 unity_FogParams at 11
Vector4 unity_SHAb at 7
Vector4 unity_SHAg at 6
Vector4 unity_SHAr at 5
Vector4 unity_ShadowFadeCenterAndType at 9
Vector4 unity_SpecCube0_BoxMax at 12
Vector4 unity_SpecCube0_BoxMin at 13
Vector4 unity_SpecCube0_HDR at 15
Vector4 unity_SpecCube0_ProbePosition at 14
Vector4 unity_SpecCube1_BoxMax at 16
Vector4 unity_SpecCube1_BoxMin at 17
Vector4 unity_SpecCube1_HDR at 19
Vector4 unity_SpecCube1_ProbePosition at 18

Set CUBE Texture "unity_SpecCube0" to slot 0
Set CUBE Texture "unity_SpecCube1" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3
Set 2D Texture "_ShadowMapTexture" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float _OcclusionStrength;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogColor;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_ShadowFadeCenterAndType;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_BoxMax;
//   float4 unity_SpecCube0_BoxMin;
//   float4 unity_SpecCube0_HDR;
//   float4 unity_SpecCube0_ProbePosition;
//   samplerCUBE unity_SpecCube1;
//   float4 unity_SpecCube1_BoxMax;
//   float4 unity_SpecCube1_BoxMin;
//   float4 unity_SpecCube1_HDR;
//   float4 unity_SpecCube1_ProbePosition;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _WorldSpaceLightPos0          c4       1
//   unity_SHAr                    c5       1
//   unity_SHAg                    c6       1
//   unity_SHAb                    c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   unity_FogColor                c10      1
//   unity_FogParams               c11      1
//   unity_SpecCube0_BoxMax        c12      1
//   unity_SpecCube0_BoxMin        c13      1
//   unity_SpecCube0_ProbePosition c14      1
//   unity_SpecCube0_HDR           c15      1
//   unity_SpecCube1_BoxMax        c16      1
//   unity_SpecCube1_BoxMin        c17      1
//   unity_SpecCube1_ProbePosition c18      1
//   unity_SpecCube1_HDR           c19      1
//   _LightColor0                  c20      1
//   _Color                        c21      1
//   _Metallic                     c22      1
//   _Glossiness                   c23      1
//   _OcclusionStrength            c24      1
//   unity_SpecCube0               s0       1
//   unity_SpecCube1               s1       1
//   _MainTex                      s2       1
//   _OcclusionMap                 s3       1
//   _ShadowMapTexture             s4       1
//

    ps_3_0
    def c25, -0.220916301, 0.220916301, 0.779083729, 1
    def c26, 0, 0.416666657, 1.05499995, -0.0549999997
    def c27, 0.699999988, 1.70000005, 6, 0.999989986
    def c28, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c29, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c30, 0.00999999978, 0.280000001, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5_pp v5.xyz
    dcl_texcoord6 v6
    dcl_texcoord7 v7.x
    dcl_cube s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, v0, s2
    mul_pp r1.xyz, r0, c21
    mov r2, c25
    mad_pp r0.xyz, c21, r0, r2.x
    mad_pp r0.xyz, c22.x, r0, r2.y
    mad_pp r0.w, c22.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r1
    nrm_pp r3.xyz, v4
    dp3_pp r1.w, v1, v1
    rsq_pp r1.w, r1.w
    mul_pp r2.xyz, r1.w, v1
    mov_pp r4.x, v2.w
    mov_pp r4.y, v3.w
    mov_pp r4.z, v4.w
    add r5.xyz, -r4, c3
    dp3 r4.w, r5, c2
    add r5.xyz, r4, -c9
    dp3 r5.x, r5, r5
    rsq r5.x, r5.x
    rcp r5.x, r5.x
    lrp r6.x, c9.w, r5.x, r4.w
    mad_sat_pp r4.w, r6.x, c8.z, c8.w
    texldp_pp r5, v6, s4
    add_sat_pp r4.w, r4.w, r5.x
    texld_pp r5, v0, s3
    add_pp r5.x, r2.w, -c24.x
    mad_pp r5.x, r5.y, c24.x, r5.x
    add_pp r5.y, r2.w, -c23.x
    dp3_pp r5.z, r2, r3
    add_pp r5.z, r5.z, r5.z
    mad_pp r6.xyz, r3, -r5.z, r2
    mul_pp r7.xyz, r4.w, c20
    mov r3.w, c25.w
    dp4_pp r8.x, c5, r3
    dp4_pp r8.y, c6, r3
    dp4_pp r8.z, c7, r3
    add_pp r8.xyz, r8, v5
    max_pp r9.xyz, r8, c26.x
    log_pp r8.x, r9.x
    log_pp r8.y, r9.y
    log_pp r8.z, r9.z
    mul_pp r8.xyz, r8, c26.y
    exp_pp r9.x, r8.x
    exp_pp r9.y, r8.y
    exp_pp r9.z, r8.z
    mad_pp r8.xyz, r9, c26.z, c26.w
    max_pp r9.xyz, r8, c26.x
    mov r8.x, c26.x
    if_lt -c14.w, r8.x
      nrm_pp r10.xyz, r6
      add r8.yzw, -r4.xxyz, c12.xxyz
      rcp r11.x, r10.x
      rcp r11.y, r10.y
      rcp r11.z, r10.z
      mul_pp r8.yzw, r8, r11.xxyz
      add r12.xyz, -r4, c13
      mul_pp r11.xyz, r11, r12
      cmp_pp r8.yzw, -r10.xxyz, r11.xxyz, r8
      min_pp r3.w, r8.z, r8.y
      min_pp r4.w, r8.w, r3.w
      add r8.yzw, r4.xxyz, -c14.xxyz
      mad_pp r10.xyz, r10, r4.w, r8.yzww
    else
      mov_pp r10.xyz, r6
    endif
    mad_pp r3.w, r5.y, -c27.x, c27.y
    mul_pp r3.w, r3.w, r5.y
    mul_pp r10.w, r3.w, c27.z
    texldl_pp r11, r10, s0
    add_pp r3.w, r11.w, -c25.w
    mad_pp r3.w, c15.w, r3.w, r2.w
    mul_pp r3.w, r3.w, c15.x
    mul_pp r8.yzw, r11.xxyz, r3.w
    mov r4.w, c13.w
    if_lt r4.w, c27.w
      if_lt -c18.w, r8.x
        nrm_pp r12.xyz, r6
        add r13.xyz, -r4, c16
        rcp r14.x, r12.x
        rcp r14.y, r12.y
        rcp r14.z, r12.z
        mul_pp r13.xyz, r13, r14
        add r15.xyz, -r4, c17
        mul_pp r14.xyz, r14, r15
        cmp_pp r13.xyz, -r12, r14, r13
        min_pp r4.w, r13.y, r13.x
        min_pp r5.z, r13.z, r4.w
        add r4.xyz, r4, -c18
        mad_pp r10.xyz, r12, r5.z, r4
      else
        mov_pp r10.xyz, r6
      endif
      texldl_pp r4, r10, s1
      add_pp r4.w, r4.w, -c25.w
      mad_pp r2.w, c19.w, r4.w, r2.w
      mul_pp r2.w, r2.w, c19.x
      mul_pp r4.xyz, r4, r2.w
      mad r6.xyz, r3.w, r11, -r4
      mad_pp r8.yzw, c13.w, r6.xxyz, r4.xxyz
    endif
    mul_pp r4.xyz, r5.x, r8.yzww
    mad_pp r6.xyz, v1, -r1.w, c4
    dp3_pp r1.w, r6, r6
    add r2.w, -r1.w, c28.x
    rsq_pp r1.w, r1.w
    cmp_pp r1.w, r2.w, c28.y, r1.w
    mul_pp r6.xyz, r1.w, r6
    dp3_pp r1.w, r3, -r2
    dp3_sat_pp r2.x, r3, c4
    dp3_sat_pp r2.y, r3, r6
    dp3_sat_pp r2.z, c4, r6
    mul_pp r2.w, r2.z, r2.z
    dp2add_pp r2.w, r2.w, r5.y, c28.z
    add_pp r3.x, -r2.x, c25.w
    mul_pp r3.y, r3.x, r3.x
    mul_pp r3.y, r3.y, r3.y
    mul_pp r3.x, r3.x, r3.y
    mad_pp r3.x, r2.w, r3.x, c25.w
    add_pp r3.y, -r1_abs.w, c25.w
    mul_pp r3.z, r3.y, r3.y
    mul_pp r3.z, r3.z, r3.z
    mul_pp r3.y, r3.y, r3.z
    mad_pp r2.w, r2.w, r3.y, c25.w
    mul_pp r2.w, r2.w, r3.x
    mul_pp r2.w, r2.x, r2.w
    mul_pp r3.x, r5.y, r5.y
    mad_pp r3.z, r5.y, -r5.y, c25.w
    mad_pp r3.w, r1_abs.w, r3.z, r3.x
    mad_pp r3.z, r2.x, r3.z, r3.x
    mul_pp r1.w, r1_abs.w, r3.z
    mad r1.w, r2.x, r3.w, r1.w
    add r1.w, r1.w, c28.w
    rcp r1.w, r1.w
    mul_pp r1.w, r1.w, -c28.z
    mul_pp r3.z, r3.x, r3.x
    mad_pp r3.w, r2.y, r3.z, -r2.y
    mad_pp r2.y, r3.w, r2.y, c25.w
    mul r3.z, r3.z, c29.x
    mad r2.y, r2.y, r2.y, c29.y
    rcp r2.y, r2.y
    mul_pp r2.y, r2.y, r3.z
    mul r1.w, r1.w, r2.y
    mul_pp r2.y, r1.w, c29.z
    mad r1.w, r1.w, -c29.z, c29.w
    rsq r2.y, r2.y
    rcp_pp r2.y, r2.y
    cmp_pp r1.w, r1.w, c30.x, r2.y
    mul_pp r1.w, r2.x, r1.w
    mul_pp r2.x, r3.x, r5.y
    mad_pp r2.x, r2.x, -c30.y, c30.z
    dp3_pp r2.y, r0, r0
    cmp r2.y, -r2.y, c30.w, c30.z
    mul_pp r1.w, r1.w, r2.y
    add_pp r0.w, -r0.w, c25.w
    add_sat_pp r0.w, r0.w, c23.x
    mul_pp r3.xzw, r2.w, r7.xyyz
    mad_pp r3.xzw, r9.xyyz, r5.x, r3
    mul_pp r5.xyz, r7, r1.w
    add_pp r1.w, -r2.z, c25.w
    mul_pp r2.y, r1.w, r1.w
    mul_pp r2.y, r2.y, r2.y
    mul_pp r1.w, r1.w, r2.y
    lrp_pp r2.yzw, r1.w, c25.w, r0.xxyz
    mul_pp r2.yzw, r2, r5.xxyz
    mad_pp r1.xyz, r1, r3.xzww, r2.yzww
    mul_pp r2.xyz, r4, r2.x
    lrp_pp r4.xyz, r3.y, r0.w, r0
    mad_pp r0.xyz, r2, r4, r1
    mad_sat r0.w, v7.x, c11.z, c11.w
    add r0.xyz, r0, -c10
    mad_pp oC0.xyz, r0.w, r0, c10
    mov_pp oC0.w, c25.w

// approximately 187 instruction slots used (7 texture, 180 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 182 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogColor at 0
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 6 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 7 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[8], immediateIndexed
      dcl_constantbuffer CB7[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v2.w
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mov r4.x, v3.w
  13: mov r4.y, v4.w
  14: mov r4.z, v5.w
  15: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  16: mov r6.x, cb4[9].z
  17: mov r6.y, cb4[10].z
  18: mov r6.z, cb4[11].z
  19: dp3 r3.w, r5.xyzx, r6.xyzx
  20: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  21: dp3 r4.w, r5.xyzx, r5.xyzx
  22: sqrt r4.w, r4.w
  23: add r4.w, -r3.w, r4.w
  24: mad r3.w, cb3[25].w, r4.w, r3.w
  25: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  26: eq r4.w, cb7[0].x, l(1.000000)
  27: if_nz r4.w
  28:   eq r5.x, cb7[0].y, l(1.000000)
  29:   mul r5.yzw, v4.wwww, cb7[2].xxyz
  30:   mad r5.yzw, cb7[1].xxyz, v3.wwww, r5.yyzw
  31:   mad r5.yzw, cb7[3].xxyz, v5.wwww, r5.yyzw
  32:   add r5.yzw, r5.yyzw, cb7[4].xxyz
  33:   movc r5.xyz, r5.xxxx, r5.yzwy, r4.xyzx
  34:   add r5.xyz, r5.xyzx, -cb7[6].xyzx
  35:   mul r5.yzw, r5.xxyz, cb7[5].xxyz
  36:   mad r5.y, r5.y, l(0.250000), l(0.750000)
  37:   mad r6.x, cb7[0].z, l(0.500000), l(0.750000)
  38:   max r5.x, r5.y, r6.x
  39:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r5.x, r5.xyzw, cb2[45].xyzw
  44: div r5.yz, v7.xxyx, v7.wwww
  45: sample r6.xyzw, r5.yzyy, t1.xyzw, s4
  46: add_sat r3.w, r3.w, r6.x
  47: min r5.x, r3.w, r5.x
  48: movc r3.w, r4.w, r5.x, r3.w
  49: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  50: add r5.x, -cb0[9].y, l(1.000000)
  51: mad r5.x, r5.y, cb0[9].y, r5.x
  52: add r5.y, -cb0[8].w, l(1.000000)
  53: dp3 r5.z, r3.xyzx, r2.xyzx
  54: add r5.z, r5.z, r5.z
  55: mad r6.xyz, r2.xyzx, -r5.zzzz, r3.xyzx
  56: mul r7.xyz, r3.wwww, cb0[2].xyzx
  57: if_nz r4.w
  58:   eq r3.w, cb7[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb7[2].xyzx
  60:   mad r8.xyz, cb7[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb7[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb7[4].xyzx
  63:   movc r8.xyz, r3.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb7[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb7[5].xxyz
  66:   mul r3.w, r8.y, l(0.250000)
  67:   mul r4.w, cb7[0].z, l(0.500000)
  68:   mad r5.z, -cb7[0].z, l(0.500000), l(0.250000)
  69:   max r3.w, r3.w, r4.w
  70:   min r8.x, r5.z, r3.w
  71:   sample r9.xyzw, r8.xzwx, t5.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t5.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t5.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[38].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[39].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[40].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: log r8.xyz, r8.xyzx
  89: mul r8.xyz, r8.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  90: exp r8.xyz, r8.xyzx
  91: mad r8.xyz, r8.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  92: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  93: lt r2.w, l(0.000000), cb6[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r6.xyzx, r6.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r6.xyzx
  98:   add r10.xyz, -r4.xyzx, cb6[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r4.xyzx, cb6[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r4.xyzx, -cb6[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r6.xyzx
 110: endif 
 111: mad r2.w, -r5.y, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r5.y
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t3.xyzw, s0, r2.w
 115: add r3.w, r9.w, l(-1.000000)
 116: mad r3.w, cb6[3].w, r3.w, l(1.000000)
 117: mul r3.w, r3.w, cb6[3].x
 118: mul r10.xyz, r9.xyzx, r3.wwww
 119: lt r4.w, cb6[1].w, l(0.999990)
 120: if_nz r4.w
 121:   lt r4.w, l(0.000000), cb6[6].w
 122:   if_nz r4.w
 123:     dp3 r4.w, r6.xyzx, r6.xyzx
 124:     rsq r4.w, r4.w
 125:     mul r11.xyz, r4.wwww, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb6[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb6[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r4.w, r12.y, r12.x
 133:     min r4.w, r12.z, r4.w
 134:     add r4.xyz, r4.xyzx, -cb6[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r4.wwww, r4.xyzx
 136:   endif 
 137:   sample_l r4.xyzw, r6.xyzx, t4.xyzw, s0, r2.w
 138:   add r2.w, r4.w, l(-1.000000)
 139:   mad r2.w, cb6[7].w, r2.w, l(1.000000)
 140:   mul r2.w, r2.w, cb6[7].x
 141:   mul r4.xyz, r4.xyzx, r2.wwww
 142:   mad r6.xyz, r3.wwww, r9.xyzx, -r4.xyzx
 143:   mad r10.xyz, cb6[1].wwww, r6.xyzx, r4.xyzx
 144: endif 
 145: mul r4.xyz, r5.xxxx, r10.xyzx
 146: mad r6.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
 147: dp3 r1.w, r6.xyzx, r6.xyzx
 148: max r1.w, r1.w, l(0.001000)
 149: rsq r1.w, r1.w
 150: mul r6.xyz, r1.wwww, r6.xyzx
 151: dp3 r1.w, r2.xyzx, -r3.xyzx
 152: dp3_sat r2.w, r2.xyzx, cb2[0].xyzx
 153: dp3_sat r2.x, r2.xyzx, r6.xyzx
 154: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 155: mul r2.z, r2.y, r2.y
 156: dp2 r2.z, r2.zzzz, r5.yyyy
 157: add r2.z, r2.z, l(-0.500000)
 158: add r3.x, -r2.w, l(1.000000)
 159: mul r3.y, r3.x, r3.x
 160: mul r3.y, r3.y, r3.y
 161: mul r3.x, r3.x, r3.y
 162: mad r3.x, r2.z, r3.x, l(1.000000)
 163: add r3.y, -|r1.w|, l(1.000000)
 164: mul r3.z, r3.y, r3.y
 165: mul r3.z, r3.z, r3.z
 166: mul r3.y, r3.y, r3.z
 167: mad r2.z, r2.z, r3.y, l(1.000000)
 168: mul r2.z, r2.z, r3.x
 169: mul r2.z, r2.w, r2.z
 170: mul r3.x, r5.y, r5.y
 171: mad r3.z, -r5.y, r5.y, l(1.000000)
 172: mad r3.w, |r1.w|, r3.z, r3.x
 173: mad r3.z, r2.w, r3.z, r3.x
 174: mul r1.w, |r1.w|, r3.z
 175: mad r1.w, r2.w, r3.w, r1.w
 176: add r1.w, r1.w, l(0.000010)
 177: div r1.w, l(0.500000), r1.w
 178: mul r3.z, r3.x, r3.x
 179: mad r3.w, r2.x, r3.z, -r2.x
 180: mad r2.x, r3.w, r2.x, l(1.000000)
 181: mul r3.z, r3.z, l(0.318310)
 182: mad r2.x, r2.x, r2.x, l(0.000000)
 183: div r2.x, r3.z, r2.x
 184: mul r1.w, r1.w, r2.x
 185: mul r1.w, r1.w, l(3.141593)
 186: max r1.w, r1.w, l(0.000100)
 187: sqrt r1.w, r1.w
 188: mul r1.w, r2.w, r1.w
 189: mul r2.x, r3.x, r5.y
 190: mad r2.x, -r2.x, l(0.280000), l(1.000000)
 191: dp3 r2.w, r0.xyzx, r0.xyzx
 192: ne r2.w, r2.w, l(0.000000)
 193: and r2.w, r2.w, l(0x3f800000)
 194: mul r1.w, r1.w, r2.w
 195: add r0.w, -r0.w, cb0[8].w
 196: add_sat r0.w, r0.w, l(1.000000)
 197: mul r3.xzw, r2.zzzz, r7.xxyz
 198: mad r3.xzw, r8.xxyz, r5.xxxx, r3.xxzw
 199: mul r5.xyz, r7.xyzx, r1.wwww
 200: add r1.w, -r2.y, l(1.000000)
 201: mul r2.y, r1.w, r1.w
 202: mul r2.y, r2.y, r2.y
 203: mul r1.w, r1.w, r2.y
 204: add r2.yzw, -r0.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
 205: mad r2.yzw, r2.yyzw, r1.wwww, r0.xxyz
 206: mul r2.yzw, r2.yyzw, r5.xxyz
 207: mad r1.xyz, r1.xyzx, r3.xzwx, r2.yzwy
 208: mul r2.xyz, r4.xyzx, r2.xxxx
 209: add r3.xzw, -r0.xxyz, r0.wwww
 210: mad r0.xyz, r3.yyyy, r3.xzwx, r0.xyzx
 211: mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 212: div r0.w, v2.w, cb1[5].y
 213: add r0.w, -r0.w, l(1.000000)
 214: mul r0.w, r0.w, cb1[5].z
 215: max r0.w, r0.w, l(0.000000)
 216: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 217: add r0.xyz, r0.xyzx, -cb5[0].xyzx
 218: mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
 219: mov o0.w, l(1.000000)
 220: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d9":
// Stats: 47 math, 4 textures
Vector4 _Color at 4
Float _GlossMapScale at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5
Vector4 _WorldSpaceLightPos0 at 0
Vector4 unity_FogColor at 1
Vector4 unity_SpecCube0_HDR at 2

Set CUBE Texture "unity_SpecCube0" to slot 0
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _OcclusionMap;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogColor;
//   sampler2D unity_NHxRoughness;
//   samplerCUBE unity_SpecCube0;
//   float4 unity_SpecCube0_HDR;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceLightPos0 c0       1
//   unity_FogColor       c1       1
//   unity_SpecCube0_HDR  c2       1
//   _LightColor0         c3       1
//   _Color               c4       1
//   _Metallic            c5       1
//   _GlossMapScale       c6       1
//   unity_SpecCube0      s0       1
//   unity_NHxRoughness   s1       1
//   _MainTex             s2       1
//   _OcclusionMap        s3       1
//

    ps_2_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 0.699999988, 1.70000005, 6, 16
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t4.xyz
    dcl_pp t5.xyz
    dcl t7.x
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t0, s2
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, t1
    mov r3, c7
    mad_pp r4.y, r0.w, -c6.x, r3.w
    mad_pp r1.w, r4.y, -c8.x, c8.y
    mul_pp r1.w, r1.w, r4.y
    mul_pp r2.w, r1.w, c8.z
    dp3_pp r1.w, -t1, r1
    add_pp r4.z, r1.w, r1.w
    mov_sat_pp r1.w, r1.w
    add_pp r5.y, -r1.w, c7.w
    mad_pp r6.xyz, r1, -r4.z, -t1
    dp3_pp r5.x, r6, c0
    mul_pp r4.zw, r5.wzyx, r5.wzyx
    mul_pp r4.zw, r4, r4
    mov_pp r4.x, r4.w
    texldb_pp r2, r2, s0
    texld_pp r5, t0, s3
    texld r6, r4, s1
    add_pp r1.w, r2.w, -c7.w
    mad_pp r1.w, c2.w, r1.w, r3.w
    mul_pp r1.w, r1.w, c2.x
    mul_pp r2.xyz, r2, r1.w
    mul_pp r2.xyz, r5.y, r2
    mul_pp r5.xyz, r5.y, t5
    dp3_sat_pp r2.w, r1, c0
    mul_pp r1.xyz, r2.w, c3
    mad_pp r1.w, c5.x, -r3.z, r3.z
    mad_pp r0.w, r0.w, c6.x, -r1.w
    add_sat_pp r0.w, r0.w, c7.w
    mad_pp r6.yzw, c4.wzyx, r0.wzyx, r3.x
    mul_pp r0.xyz, r0, c4
    mul_pp r0.xyz, r1.w, r0
    mad_pp r3.xyz, c5.x, r6.wzyx, r3.y
    lrp_pp r6.yzw, r4.z, r0.w, r3.wzyx
    mul_pp r0.w, r6.x, c8.w
    mad_pp r3.xyz, r0.w, r3, r0
    mul_pp r2.xyz, r2, r6.wzyx
    mad_pp r0.xyz, r5, r0, r2
    mad_pp r0.xyz, r3, r1, r0
    mov_sat r0.w, t7.x
    lrp_pp r1.xyz, r0.w, r0, c1
    mov_pp r1.w, c7.w
    mov_pp oC0, r1

// approximately 49 instruction slots used (4 texture, 45 arithmetic)


-- Vertex shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Fragment shader for "d3d11":
// Stats: 54 math, 8 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityFog" (32 bytes) on slot 2 {
  Vector4 unity_FogColor at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 3 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 4 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[4], immediateIndexed
      dcl_constantbuffer CB4[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r2.x, v5.xyzx, v5.xyzx
   7: rsq r2.x, r2.x
   8: mul r2.xyz, r2.xxxx, v5.xyzx
   9: eq r2.w, cb4[0].x, l(1.000000)
  10: if_nz r2.w
  11:   eq r2.w, cb4[0].y, l(1.000000)
  12:   mul r3.xyz, v4.wwww, cb4[2].xyzx
  13:   mad r3.xyz, cb4[1].xyzx, v3.wwww, r3.xyzx
  14:   mad r3.xyz, cb4[3].xyzx, v5.wwww, r3.xyzx
  15:   add r3.xyz, r3.xyzx, cb4[4].xyzx
  16:   mov r4.y, v3.w
  17:   mov r4.z, v4.w
  18:   mov r4.w, v5.w
  19:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  20:   add r3.xyz, r3.xyzx, -cb4[6].xyzx
  21:   mul r3.yzw, r3.xxyz, cb4[5].xxyz
  22:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  23:   mad r3.y, cb4[0].z, l(0.500000), l(0.750000)
  24:   max r3.x, r2.w, r3.y
  25:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  26: else 
  27:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r3.xyzw, cb1[45].xyzw
  30: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  31: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  32: dp3 r3.x, v2.xyzx, r2.xyzx
  33: add r3.x, r3.x, r3.x
  34: mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
  35: mul r5.xyz, r2.wwww, cb0[2].xyzx
  36: mul r6.xyz, r3.yyyy, v6.xyzx
  37: mad r2.w, -r4.z, l(0.700000), l(1.700000)
  38: mul r2.w, r2.w, r4.z
  39: mul r2.w, r2.w, l(6.000000)
  40: sample_l r7.xyzw, r3.xzwx, t3.xyzw, s0, r2.w
  41: add r2.w, r7.w, l(-1.000000)
  42: mad r2.w, cb3[3].w, r2.w, l(1.000000)
  43: mul r2.w, r2.w, cb3[3].x
  44: mul r3.xzw, r7.xxyz, r2.wwww
  45: mul r3.xyz, r3.yyyy, r3.xzwx
  46: dp3 r2.w, -v2.xyzx, r2.xyzx
  47: add r3.w, r2.w, r2.w
  48: mad r7.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  49: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  50: mov_sat r2.w, r2.w
  51: dp3 r7.x, r7.xyzx, cb1[0].xyzx
  52: add r7.y, -r2.w, l(1.000000)
  53: mul r2.yz, r7.xxyx, r7.xxyx
  54: mul r4.xy, r2.yzyy, r2.yzyy
  55: mad r0.w, r0.w, cb0[9].x, -r1.w
  56: add_sat r0.w, r0.w, l(1.000000)
  57: sample r7.xyzw, r4.xzxx, t2.xyzw, s2
  58: mul r1.w, r7.x, l(16.000000)
  59: mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
  60: mul r4.xzw, r2.xxxx, r5.xxyz
  61: add r5.xyz, -r0.xyzx, r0.wwww
  62: mad r0.xyz, r4.yyyy, r5.xyzx, r0.xyzx
  63: mul r0.xyz, r0.xyzx, r3.xyzx
  64: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  65: mad r0.xyz, r2.yzwy, r4.xzwx, r0.xyzx
  66: mov_sat r0.w, v7.z
  67: add r0.xyz, r0.xyzx, -cb2[0].xyzx
  68: mad o0.xyz, r0.wwww, r0.xyzx, cb2[0].xyzx
  69: mov o0.w, l(1.000000)
  70: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL VERTEXLIGHT_ON _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 92 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 28
Vector4 _MainTex_ST at 27
Float _UVSec at 29
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHAb at 22
Vector4 unity_SHAg at 21
Vector4 unity_SHAr at 20
Vector4 unity_SHBb at 25
Vector4 unity_SHBg at 24
Vector4 unity_SHBr at 23
Vector4 unity_SHC at 26

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   unity_4LightPosX0    c16      1
//   unity_4LightPosY0    c17      1
//   unity_4LightPosZ0    c18      1
//   unity_4LightAtten0   c19      1
//   unity_SHAr           c20      1
//   unity_SHAg           c21      1
//   unity_SHAb           c22      1
//   unity_SHBr           c23      1
//   unity_SHBg           c24      1
//   unity_SHBb           c25      1
//   unity_SHC            c26      1
//   _MainTex_ST          c27      1
//   _DetailAlbedoMap_ST  c28      1
//   _UVSec               c29      1
//

    vs_2_0
    def c30, 1, 0, 9.99999997e-007, 0.416666657
    def c31, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c30.xxxy, c30.yyyx
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp4 r1.w, c7, r0
    dp4 r6.x, c8, r1
    dp4 r6.y, c9, r1
    dp4 r6.z, c10, r1
    dp4 r6.w, c11, r1
    mad oT0.xy, v2, c27, c27.zwzw
    mul r0.x, c29.x, c29.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c28.xyxy, c28
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c15
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c13
    mad r1.xyz, v1.x, c12, r1
    mad r1.xyz, v1.z, c14, r1
    nrm r2.xyz, r1
    mul r1.x, r2.y, r2.y
    mad r1.x, r2.x, r2.x, -r1.x
    mul r3, r2.yzzx, r2.xyzz
    dp4 r4.x, c23, r3
    dp4 r4.y, c24, r3
    dp4 r4.z, c25, r3
    mad r1.xyz, c26, r1.x, r4
    mov r2.w, c30.x
    dp4 r3.x, c20, r2
    dp4 r3.y, c21, r2
    dp4 r3.z, c22, r2
    add r1.xyz, r1, r3
    max r1.xyz, r1, c30.y
    mov r1.w, c30.w
    lit r3, r1.xxww
    mov r3.x, r3.z
    lit r4, r1.yyww
    lit r1, r1.zzww
    mov r3.z, r1.z
    mov r3.y, r4.z
    mad r1.xyz, r3, c31.x, c31.y
    max r1.xyz, r1, c30.y
    add r3, -r0.y, c17
    mul r4, r2.y, r3
    mul r3, r3, r3
    add r5, -r0.x, c16
    mad r4, r5, r2.x, r4
    mad r3, r5, r5, r3
    add r5, -r0.z, c18
    mov oT4.w, r0.z
    mad r4, r5, r2.z, r4
    mad r3, r5, r5, r3
    max r3, r3, c30.z
    mov oT4.xyz, r2
    rsq r2.x, r3.x
    rsq r2.y, r3.y
    rsq r2.z, r3.z
    rsq r2.w, r3.w
    mov r5.x, c30.x
    mad r3, r3, c19, r5.x
    mul r2, r2, r4
    max r2, r2, c30.y
    rcp r4.x, r3.x
    rcp r4.y, r3.y
    rcp r4.z, r3.z
    rcp r4.w, r3.w
    mul r2, r2, r4
    mul r3.xyz, r2.y, c1
    mad r3.xyz, c0, r2.x, r3
    mad r2.xyz, c2, r2.z, r3
    mad r2.xyz, c3, r2.w, r2
    add oT5.xyz, r1, r2
    mov r0.w, c30.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT5.w, c30.y
    mov oT6.xy, c30.y
    mad oPos.xy, r6.w, c255, r6
    mov oPos.zw, r6

// approximately 87 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 63 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r1.xyzx, r1.xyzx
  28: rsq r0.w, r0.w
  29: mul r1.xyz, r0.wwww, r1.xyzx
  30: mov o5.xyz, r1.xyzx
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mul r2.xyzw, r1.yzzx, r1.xyzz
  34: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  35: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  36: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  37: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  38: mov r1.w, l(1.000000)
  39: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  40: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  41: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  42: add r2.xyz, r2.xyzx, r3.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  50: mul r4.xyzw, r1.yyyy, r3.xyzw
  51: mul r3.xyzw, r3.xyzw, r3.xyzw
  52: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  53: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  54: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  55: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  56: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  57: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  58: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  59: rsq r3.xyzw, r0.xyzw
  60: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  61: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  62: mul r1.xyzw, r1.xyzw, r3.xyzw
  63: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  64: mul r0.xyzw, r0.xyzw, r1.xyzw
  65: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  66: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  67: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  68: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  69: add o6.xyz, r2.xyzx, r0.xyzx
  70: mov o6.w, l(0)
  71: mov o7.xy, l(0,0,0,0)
  72: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 92 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 28
Vector4 _MainTex_ST at 27
Float _UVSec at 29
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHAb at 22
Vector4 unity_SHAg at 21
Vector4 unity_SHAr at 20
Vector4 unity_SHBb at 25
Vector4 unity_SHBg at 24
Vector4 unity_SHBr at 23
Vector4 unity_SHC at 26

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   unity_4LightPosX0    c16      1
//   unity_4LightPosY0    c17      1
//   unity_4LightPosZ0    c18      1
//   unity_4LightAtten0   c19      1
//   unity_SHAr           c20      1
//   unity_SHAg           c21      1
//   unity_SHAb           c22      1
//   unity_SHBr           c23      1
//   unity_SHBg           c24      1
//   unity_SHBb           c25      1
//   unity_SHC            c26      1
//   _MainTex_ST          c27      1
//   _DetailAlbedoMap_ST  c28      1
//   _UVSec               c29      1
//

    vs_2_0
    def c30, 1, 0, 9.99999997e-007, 0.416666657
    def c31, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c30.xxxy, c30.yyyx
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp4 r1.w, c7, r0
    dp4 r6.x, c8, r1
    dp4 r6.y, c9, r1
    dp4 r6.z, c10, r1
    dp4 r6.w, c11, r1
    mad oT0.xy, v2, c27, c27.zwzw
    mul r0.x, c29.x, c29.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c28.xyxy, c28
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add r1.xyz, r0, -c15
    dp3 r1.w, r1, r1
    rsq r1.w, r1.w
    mul oT1.xyz, r1.w, r1
    mul r1.xyz, v1.y, c13
    mad r1.xyz, v1.x, c12, r1
    mad r1.xyz, v1.z, c14, r1
    nrm r2.xyz, r1
    mul r1.x, r2.y, r2.y
    mad r1.x, r2.x, r2.x, -r1.x
    mul r3, r2.yzzx, r2.xyzz
    dp4 r4.x, c23, r3
    dp4 r4.y, c24, r3
    dp4 r4.z, c25, r3
    mad r1.xyz, c26, r1.x, r4
    mov r2.w, c30.x
    dp4 r3.x, c20, r2
    dp4 r3.y, c21, r2
    dp4 r3.z, c22, r2
    add r1.xyz, r1, r3
    max r1.xyz, r1, c30.y
    mov r1.w, c30.w
    lit r3, r1.xxww
    mov r3.x, r3.z
    lit r4, r1.yyww
    lit r1, r1.zzww
    mov r3.z, r1.z
    mov r3.y, r4.z
    mad r1.xyz, r3, c31.x, c31.y
    max r1.xyz, r1, c30.y
    add r3, -r0.y, c17
    mul r4, r2.y, r3
    mul r3, r3, r3
    add r5, -r0.x, c16
    mad r4, r5, r2.x, r4
    mad r3, r5, r5, r3
    add r5, -r0.z, c18
    mov oT4.w, r0.z
    mad r4, r5, r2.z, r4
    mad r3, r5, r5, r3
    max r3, r3, c30.z
    mov oT4.xyz, r2
    rsq r2.x, r3.x
    rsq r2.y, r3.y
    rsq r2.z, r3.z
    rsq r2.w, r3.w
    mov r5.x, c30.x
    mad r3, r3, c19, r5.x
    mul r2, r2, r4
    max r2, r2, c30.y
    rcp r4.x, r3.x
    rcp r4.y, r3.y
    rcp r4.z, r3.z
    rcp r4.w, r3.w
    mul r2, r2, r4
    mul r3.xyz, r2.y, c1
    mad r3.xyz, c0, r2.x, r3
    mad r2.xyz, c2, r2.z, r3
    mad r2.xyz, c3, r2.w, r2
    add oT5.xyz, r1, r2
    mov r0.w, c30.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT5.w, c30.y
    mov oT6.xy, c30.y
    mad oPos.xy, r6.w, c255, r6
    mov oPos.zw, r6

// approximately 87 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 63 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r1.xyzx, r1.xyzx
  28: rsq r0.w, r0.w
  29: mul r1.xyz, r0.wwww, r1.xyzx
  30: mov o5.xyz, r1.xyzx
  31: mul r0.w, r1.y, r1.y
  32: mad r0.w, r1.x, r1.x, -r0.w
  33: mul r2.xyzw, r1.yzzx, r1.xyzz
  34: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  35: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  36: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  37: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  38: mov r1.w, l(1.000000)
  39: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  40: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  41: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  42: add r2.xyz, r2.xyzx, r3.xyzx
  43: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r2.xyz, r2.xyzx
  45: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r2.xyz, r2.xyzx
  47: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  50: mul r4.xyzw, r1.yyyy, r3.xyzw
  51: mul r3.xyzw, r3.xyzw, r3.xyzw
  52: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  53: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  54: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  55: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  56: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  57: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  58: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  59: rsq r3.xyzw, r0.xyzw
  60: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  61: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  62: mul r1.xyzw, r1.xyzw, r3.xyzw
  63: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  64: mul r0.xyzw, r0.xyzw, r1.xyzw
  65: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  66: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  67: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  68: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  69: add o6.xyz, r2.xyzx, r0.xyzx
  70: mov o6.w, l(0)
  71: mov o7.xy, l(0,0,0,0)
  72: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 75 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 26
Vector4 _MainTex_ST at 25
Vector4 _ProjectionParams at 16
Float _UVSec at 27
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 20
Vector4 unity_4LightPosX0 at 17
Vector4 unity_4LightPosY0 at 18
Vector4 unity_4LightPosZ0 at 19
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 23
Vector4 unity_SHBg at 22
Vector4 unity_SHBr at 21
Vector4 unity_SHC at 24

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   _ProjectionParams    c16      1
//   unity_4LightPosX0    c17      1
//   unity_4LightPosY0    c18      1
//   unity_4LightPosZ0    c19      1
//   unity_4LightAtten0   c20      1
//   unity_SHBr           c21      1
//   unity_SHBg           c22      1
//   unity_SHBb           c23      1
//   unity_SHC            c24      1
//   _MainTex_ST          c25      1
//   _DetailAlbedoMap_ST  c26      1
//   _UVSec               c27      1
//

    vs_3_0
    def c28, 1, 0, 0.5, 9.99999997e-007
    def c29, 0.305306017, 0.682171106, 0.0125228781, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    mad o1.xy, v2, c25, c25.zwzw
    abs r0.x, c27.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c26.xyxy, c26
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    mad r1, v0.xyzx, c28.xxxy, c28.yyyx
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp4 r2.w, c7, r1
    dp4 r1.x, c8, r2
    dp4 r1.w, c11, r2
    mul r3.xz, r1.xyww, c28.z
    dp4 r1.y, c9, r2
    dp4 r1.z, c10, r2
    mul r2.x, r1.y, c16.x
    mov r6, r1
    mov o7.zw, r1
    mul r3.w, r2.x, c28.z
    add o7.xy, r3.z, r3.xwzw
    add r1, -r0.z, c19
    mov o5.w, r0.z
    add r2, -r0.x, c17
    add r3, -r0.y, c18
    mul r4.xyz, c13, v1.y
    mad r4.xyz, v1.x, c12, r4
    mad r4.xyz, v1.z, c14, r4
    nrm r5.xyz, r4
    mul r4, r3, r5.y
    mul r3, r3, r3
    mad r3, r2, r2, r3
    mad r2, r2, r5.x, r4
    mad r2, r1, r5.z, r2
    mad r1, r1, r1, r3
    max r1, r1, c28.w
    rsq r3.x, r1.x
    rsq r3.y, r1.y
    rsq r3.z, r1.z
    rsq r3.w, r1.w
    mov r4.x, c28.x
    mad r1, r1, c20, r4.x
    mul r2, r2, r3
    max r2, r2, c28.y
    rcp r3.x, r1.x
    rcp r3.y, r1.y
    rcp r3.z, r1.z
    rcp r3.w, r1.w
    mul r1, r2, r3
    mul r2.xyz, r1.y, c1
    mad r2.xyz, c0, r1.x, r2
    mad r1.xyz, c2, r1.z, r2
    mad r1.xyz, c3, r1.w, r1
    mad r2.xyz, r1, c29.x, c29.y
    mad r2.xyz, r1, r2, c29.z
    mul r0.z, r5.y, r5.y
    mad r0.z, r5.x, r5.x, -r0.z
    mul r3, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r4.x, c21, r3
    dp4 r4.y, c22, r3
    dp4 r4.z, c23, r3
    mad r3.xyz, c24, r0.z, r4
    mad o6.xyz, r1, r2, r3
    mov r0.w, c28.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c28.y
    mad o0.xy, r6.w, c255, r6
    mov o0.zw, r6

// approximately 76 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r2.xyzx, r2.xyzx
  26: rsq r1.w, r1.w
  27: mul r2.xyz, r1.wwww, r2.xyzx
  28: mov o5.xyz, r2.xyzx
  29: add r3.xyzw, -r1.xxxx, cb2[2].xyzw
  30: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  31: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  32: mul r5.xyzw, r2.yyyy, r4.xyzw
  33: mul r4.xyzw, r4.xyzw, r4.xyzw
  34: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  35: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  36: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  37: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  38: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  39: rsq r4.xyzw, r1.xyzw
  40: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  41: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  42: mul r3.xyzw, r3.xyzw, r4.xyzw
  43: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mul r1.xyzw, r1.xyzw, r3.xyzw
  45: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  46: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  47: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  48: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  49: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  50: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  51: mul r1.w, r2.y, r2.y
  52: mad r1.w, r2.x, r2.x, -r1.w
  53: mul r2.xyzw, r2.yzzx, r2.xyzz
  54: dp4 r4.x, cb2[41].xyzw, r2.xyzw
  55: dp4 r4.y, cb2[42].xyzw, r2.xyzw
  56: dp4 r4.z, cb2[43].xyzw, r2.xyzw
  57: mad r2.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  58: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  59: mov o6.w, l(0)
  60: mul r0.y, r0.y, cb1[5].x
  61: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  62: mov o7.zw, r0.zzzw
  63: add o7.xy, r1.zzzz, r1.xwxx
  64: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 75 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 26
Vector4 _MainTex_ST at 25
Vector4 _ProjectionParams at 16
Float _UVSec at 27
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 20
Vector4 unity_4LightPosX0 at 17
Vector4 unity_4LightPosY0 at 18
Vector4 unity_4LightPosZ0 at 19
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 23
Vector4 unity_SHBg at 22
Vector4 unity_SHBr at 21
Vector4 unity_SHC at 24

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   _ProjectionParams    c16      1
//   unity_4LightPosX0    c17      1
//   unity_4LightPosY0    c18      1
//   unity_4LightPosZ0    c19      1
//   unity_4LightAtten0   c20      1
//   unity_SHBr           c21      1
//   unity_SHBg           c22      1
//   unity_SHBb           c23      1
//   unity_SHC            c24      1
//   _MainTex_ST          c25      1
//   _DetailAlbedoMap_ST  c26      1
//   _UVSec               c27      1
//

    vs_3_0
    def c28, 1, 0, 0.5, 9.99999997e-007
    def c29, 0.305306017, 0.682171106, 0.0125228781, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    mad o1.xy, v2, c25, c25.zwzw
    abs r0.x, c27.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c26.xyxy, c26
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    mad r1, v0.xyzx, c28.xxxy, c28.yyyx
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp4 r2.w, c7, r1
    dp4 r1.x, c8, r2
    dp4 r1.w, c11, r2
    mul r3.xz, r1.xyww, c28.z
    dp4 r1.y, c9, r2
    dp4 r1.z, c10, r2
    mul r2.x, r1.y, c16.x
    mov r6, r1
    mov o7.zw, r1
    mul r3.w, r2.x, c28.z
    add o7.xy, r3.z, r3.xwzw
    add r1, -r0.z, c19
    mov o5.w, r0.z
    add r2, -r0.x, c17
    add r3, -r0.y, c18
    mul r4.xyz, c13, v1.y
    mad r4.xyz, v1.x, c12, r4
    mad r4.xyz, v1.z, c14, r4
    nrm r5.xyz, r4
    mul r4, r3, r5.y
    mul r3, r3, r3
    mad r3, r2, r2, r3
    mad r2, r2, r5.x, r4
    mad r2, r1, r5.z, r2
    mad r1, r1, r1, r3
    max r1, r1, c28.w
    rsq r3.x, r1.x
    rsq r3.y, r1.y
    rsq r3.z, r1.z
    rsq r3.w, r1.w
    mov r4.x, c28.x
    mad r1, r1, c20, r4.x
    mul r2, r2, r3
    max r2, r2, c28.y
    rcp r3.x, r1.x
    rcp r3.y, r1.y
    rcp r3.z, r1.z
    rcp r3.w, r1.w
    mul r1, r2, r3
    mul r2.xyz, r1.y, c1
    mad r2.xyz, c0, r1.x, r2
    mad r1.xyz, c2, r1.z, r2
    mad r1.xyz, c3, r1.w, r1
    mad r2.xyz, r1, c29.x, c29.y
    mad r2.xyz, r1, r2, c29.z
    mul r0.z, r5.y, r5.y
    mad r0.z, r5.x, r5.x, -r0.z
    mul r3, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r4.x, c21, r3
    dp4 r4.y, c22, r3
    dp4 r4.z, c23, r3
    mad r3.xyz, c24, r0.z, r4
    mad o6.xyz, r1, r2, r3
    mov r0.w, c28.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c28.y
    mad o0.xy, r6.w, c255, r6
    mov o0.zw, r6

// approximately 76 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov r1.w, l(0)
  19: mov o3.xyzw, r1.wwwx
  20: mov o4.xyzw, r1.wwwy
  21: mov o5.w, r1.z
  22: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r1.w, r2.xyzx, r2.xyzx
  26: rsq r1.w, r1.w
  27: mul r2.xyz, r1.wwww, r2.xyzx
  28: mov o5.xyz, r2.xyzx
  29: add r3.xyzw, -r1.xxxx, cb2[2].xyzw
  30: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  31: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  32: mul r5.xyzw, r2.yyyy, r4.xyzw
  33: mul r4.xyzw, r4.xyzw, r4.xyzw
  34: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  35: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  36: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  37: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  38: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  39: rsq r4.xyzw, r1.xyzw
  40: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  41: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  42: mul r3.xyzw, r3.xyzw, r4.xyzw
  43: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mul r1.xyzw, r1.xyzw, r3.xyzw
  45: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  46: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  47: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  48: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  49: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  50: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  51: mul r1.w, r2.y, r2.y
  52: mad r1.w, r2.x, r2.x, -r1.w
  53: mul r2.xyzw, r2.yzzx, r2.xyzz
  54: dp4 r4.x, cb2[41].xyzw, r2.xyzw
  55: dp4 r4.y, cb2[42].xyzw, r2.xyzw
  56: dp4 r4.z, cb2[43].xyzw, r2.xyzw
  57: mad r2.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  58: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  59: mov o6.w, l(0)
  60: mul r0.y, r0.y, cb1[5].x
  61: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  62: mov o7.zw, r0.zzzw
  63: add o7.xy, r1.zzzz, r1.xwxx
  64: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 64 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 20
Vector4 _MainTex_ST at 19
Float _UVSec at 21
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHAb at 14
Vector4 unity_SHAg at 13
Vector4 unity_SHAr at 12
Vector4 unity_SHBb at 17
Vector4 unity_SHBg at 16
Vector4 unity_SHBr at 15
Vector4 unity_SHC at 18

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   unity_SHAr           c12      1
//   unity_SHAg           c13      1
//   unity_SHAb           c14      1
//   unity_SHBr           c15      1
//   unity_SHBg           c16      1
//   unity_SHBb           c17      1
//   unity_SHC            c18      1
//   _MainTex_ST          c19      1
//   _DetailAlbedoMap_ST  c20      1
//   _UVSec               c21      1
//

    vs_2_0
    def c22, 1, 0, 0.416666657, 0
    def c23, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c22.xxxy, c22.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r4.x, c4, r1
    dp4 r4.y, c5, r1
    dp4 r4.z, c6, r1
    dp4 r4.w, c7, r1
    mad oT0.xy, v2, c19, c19.zwzw
    mul r0.x, c21.x, c21.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c20.xyxy, c20
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    mov oT4.w, r0.z
    dp3 r0.z, r1, r1
    rsq r0.z, r0.z
    mul oT1.xyz, r0.z, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    dp4 r3.x, c15, r1
    dp4 r3.y, c16, r1
    dp4 r3.z, c17, r1
    mad r1.xyz, c18, r0.z, r3
    mov r2.w, c22.x
    dp4 r3.x, c12, r2
    dp4 r3.y, c13, r2
    dp4 r3.z, c14, r2
    mov oT4.xyz, r2
    add r1.xyz, r1, r3
    max r1.xyz, r1, c22.y
    mov r1.w, c22.z
    lit r2, r1.xxww
    mov r2.x, r2.z
    lit r3, r1.yyww
    lit r1, r1.zzww
    mov r2.z, r1.z
    mov r2.y, r3.z
    mad r1.xyz, r2, c23.x, c23.y
    max oT5.xyz, r1, c22.y
    mov r0.w, c22.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT5.w, c22.y
    mov oT6.xy, c22.y
    mad oPos.xy, r4.w, c255, r4
    mov oPos.zw, r4

// approximately 59 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 42 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov r0.w, l(0)
  21: mov o3.xyzw, r0.wwwx
  22: mov o4.xyzw, r0.wwwy
  23: mov o5.w, r0.z
  24: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mul r1.x, r0.y, r0.y
  32: mad r1.x, r0.x, r0.x, -r1.x
  33: mul r2.xyzw, r0.yzzx, r0.xyzz
  34: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  35: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  36: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  37: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  38: mov r0.w, l(1.000000)
  39: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  40: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  41: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  42: add r0.xyz, r1.xyzx, r2.xyzx
  43: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: log r0.xyz, r0.xyzx
  45: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  46: exp r0.xyz, r0.xyzx
  47: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  48: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mov o6.w, l(0)
  50: mov o7.xy, l(0,0,0,0)
  51: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 66 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 21
Vector4 _MainTex_ST at 20
Float _UVSec at 22
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_FogParams at 19
Vector4 unity_SHAb at 14
Vector4 unity_SHAg at 13
Vector4 unity_SHAr at 12
Vector4 unity_SHBb at 17
Vector4 unity_SHBg at 16
Vector4 unity_SHBr at 15
Vector4 unity_SHC at 18

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   unity_SHAr           c12      1
//   unity_SHAg           c13      1
//   unity_SHAb           c14      1
//   unity_SHBr           c15      1
//   unity_SHBg           c16      1
//   unity_SHBb           c17      1
//   unity_SHC            c18      1
//   unity_FogParams      c19      1
//   _MainTex_ST          c20      1
//   _DetailAlbedoMap_ST  c21      1
//   _UVSec               c22      1
//

    vs_2_0
    def c23, 1, 0, 0.416666657, 0
    def c24, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c23.xxxy, c23.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r5.x, c4, r1
    dp4 r5.y, c5, r1
    dp4 r5.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c20, c20.zwzw
    mul r0.y, c22.x, c22.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c21.xyxy, c21
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    mov oT4.w, r1.z
    dp3 r1.z, r0.yzww, r0.yzww
    rsq r1.z, r1.z
    mul oT1.xyz, r0.yzww, r1.z
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    nrm r2.xyz, r0.yzww
    mul r0.y, r2.y, r2.y
    mad r0.y, r2.x, r2.x, -r0.y
    mul r3, r2.yzzx, r2.xyzz
    dp4 r4.x, c15, r3
    dp4 r4.y, c16, r3
    dp4 r4.z, c17, r3
    mad r0.yzw, c18.xxyz, r0.y, r4.xxyz
    mov r2.w, c23.x
    dp4 r3.x, c12, r2
    dp4 r3.y, c13, r2
    dp4 r3.z, c14, r2
    mov oT4.xyz, r2
    add r0.yzw, r0, r3.xxyz
    max r2.xyz, r0.yzww, c23.y
    mov r2.w, c23.z
    lit r3, r2.xxww
    mov r3.x, r3.z
    lit r4, r2.yyww
    lit r2, r2.zzww
    mov r3.z, r2.z
    mov r3.y, r4.z
    mad r0.yzw, r3.xxyz, c24.x, c24.y
    max oT5.xyz, r0.yzww, c23.y
    mad oT7.x, r0.x, c19.z, c19.w
    mov r5.z, r0.x
    mov r1.w, c23.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT5.w, c23.y
    mov oT6.xy, c23.y
    mad oPos.xy, r5.w, c255, r5
    mov oPos.zw, r5

// approximately 61 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 47 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r1.w, r1.xyzx, r1.xyzx
  24: rsq r1.w, r1.w
  25: mul o2.xyz, r1.wwww, r1.xyzx
  26: mov r0.w, l(0)
  27: mov o3.xyzw, r0.wwwx
  28: mov o4.xyzw, r0.wwwy
  29: mov o5.w, r0.z
  30: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  31: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  32: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  33: dp3 r0.w, r0.xyzx, r0.xyzx
  34: rsq r0.w, r0.w
  35: mul r0.xyz, r0.wwww, r0.xyzx
  36: mov o5.xyz, r0.xyzx
  37: mul r1.x, r0.y, r0.y
  38: mad r1.x, r0.x, r0.x, -r1.x
  39: mul r2.xyzw, r0.yzzx, r0.xyzz
  40: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  41: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  42: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  43: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  44: mov r0.w, l(1.000000)
  45: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  46: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  47: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  48: add r0.xyz, r1.xyzx, r2.xyzx
  49: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  50: log r0.xyz, r0.xyzx
  51: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  52: exp r0.xyz, r0.xyzx
  53: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  54: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mov o6.w, l(0)
  56: mov o7.xy, l(0,0,0,0)
  57: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 46 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _MainTex_ST at 17
Vector4 _ProjectionParams at 12
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 15
Vector4 unity_SHBg at 14
Vector4 unity_SHBr at 13
Vector4 unity_SHC at 16

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   unity_SHBr           c13      1
//   unity_SHBg           c14      1
//   unity_SHBb           c15      1
//   unity_SHC            c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mad r1, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c20.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.z, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r0.z, c20.z
    add o7.xy, r3.z, r3.xwzw
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c13, r1
    dp4 r2.y, c14, r1
    dp4 r2.z, c15, r1
    mad o6.xyz, c16, r0.z, r2
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c20.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 47 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul r1.xyz, r1.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mul r1.w, r1.y, r1.y
  31: mad r1.w, r1.x, r1.x, -r1.w
  32: mul r2.xyzw, r1.yzzx, r1.xyzz
  33: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  34: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  35: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  36: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  37: mov o6.w, l(0)
  38: mul r0.y, r0.y, cb1[5].x
  39: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  40: mov o7.zw, r0.zzzw
  41: add o7.xy, r1.zzzz, r1.xwxx
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 46 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 18
Vector4 _MainTex_ST at 17
Vector4 _ProjectionParams at 12
Float _UVSec at 19
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_SHBb at 15
Vector4 unity_SHBg at 14
Vector4 unity_SHBr at 13
Vector4 unity_SHC at 16

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   unity_SHBr           c13      1
//   unity_SHBg           c14      1
//   unity_SHBb           c15      1
//   unity_SHC            c16      1
//   _MainTex_ST          c17      1
//   _DetailAlbedoMap_ST  c18      1
//   _UVSec               c19      1
//

    vs_3_0
    def c20, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c17, c17.zwzw
    abs r0.x, c19.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c18.xyxy, c18
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mov o5.w, r0.z
    mad r1, v0.xyzx, c20.xxxy, c20.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c20.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.z, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r0.z, c20.z
    add o7.xy, r3.z, r3.xwzw
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    nrm r2.xyz, r1
    mul r0.z, r2.y, r2.y
    mad r0.z, r2.x, r2.x, -r0.z
    mul r1, r2.yzzx, r2.xyzz
    mov o5.xyz, r2
    dp4 r2.x, c13, r1
    dp4 r2.y, c14, r1
    dp4 r2.z, c15, r1
    mad o6.xyz, c16, r0.z, r2
    mov r0.w, c20.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c20.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 47 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul r1.xyz, r1.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mul r1.w, r1.y, r1.y
  31: mad r1.w, r1.x, r1.x, -r1.w
  32: mul r2.xyzw, r1.yzzx, r1.xyzz
  33: dp4 r1.x, cb2[41].xyzw, r2.xyzw
  34: dp4 r1.y, cb2[42].xyzw, r2.xyzw
  35: dp4 r1.z, cb2[43].xyzw, r2.xyzw
  36: mad o6.xyz, cb2[44].xyzx, r1.wwww, r1.xyzx
  37: mov o6.w, l(0)
  38: mul r0.y, r0.y, cb1[5].x
  39: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  40: mov o7.zw, r0.zzzw
  41: add o7.xy, r1.zzzz, r1.xwxx
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL FOG_LINEAR VERTEXLIGHT_ON _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 94 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 29
Vector4 _MainTex_ST at 28
Float _UVSec at 30
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_FogParams at 27
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHAb at 22
Vector4 unity_SHAg at 21
Vector4 unity_SHAr at 20
Vector4 unity_SHBb at 25
Vector4 unity_SHBg at 24
Vector4 unity_SHBr at 23
Vector4 unity_SHC at 26

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_FogParams;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   unity_4LightPosX0    c16      1
//   unity_4LightPosY0    c17      1
//   unity_4LightPosZ0    c18      1
//   unity_4LightAtten0   c19      1
//   unity_SHAr           c20      1
//   unity_SHAg           c21      1
//   unity_SHAb           c22      1
//   unity_SHBr           c23      1
//   unity_SHBg           c24      1
//   unity_SHBb           c25      1
//   unity_SHC            c26      1
//   unity_FogParams      c27      1
//   _MainTex_ST          c28      1
//   _DetailAlbedoMap_ST  c29      1
//   _UVSec               c30      1
//

    vs_2_0
    def c31, 1, 0, 9.99999997e-007, 0.416666657
    def c32, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c31.xxxy, c31.yyyx
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp4 r1.w, c7, r0
    dp4 r6.x, c8, r1
    dp4 r6.y, c9, r1
    dp4 r6.w, c11, r1
    dp4 r0.x, c10, r1
    mad oT0.xy, v2, c28, c28.zwzw
    mul r0.y, c30.x, c30.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c29.xyxy, c29
    dp4 r1.x, c4, v0
    dp4 r1.y, c5, v0
    dp4 r1.z, c6, v0
    add r0.yzw, r1.xxyz, -c15.xxyz
    dp3 r2.x, r0.yzww, r0.yzww
    rsq r2.x, r2.x
    mul oT1.xyz, r0.yzww, r2.x
    mul r0.yzw, v1.y, c13.xxyz
    mad r0.yzw, v1.x, c12.xxyz, r0
    mad r0.yzw, v1.z, c14.xxyz, r0
    nrm r2.xyz, r0.yzww
    mul r0.y, r2.y, r2.y
    mad r0.y, r2.x, r2.x, -r0.y
    mul r3, r2.yzzx, r2.xyzz
    dp4 r4.x, c23, r3
    dp4 r4.y, c24, r3
    dp4 r4.z, c25, r3
    mad r0.yzw, c26.xxyz, r0.y, r4.xxyz
    mov r2.w, c31.x
    dp4 r3.x, c20, r2
    dp4 r3.y, c21, r2
    dp4 r3.z, c22, r2
    add r0.yzw, r0, r3.xxyz
    max r3.xyz, r0.yzww, c31.y
    mov r3.w, c31.w
    lit r4, r3.xxww
    mov r4.x, r4.z
    lit r5, r3.yyww
    lit r3, r3.zzww
    mov r4.z, r3.z
    mov r4.y, r5.z
    mad r0.yzw, r4.xxyz, c32.x, c32.y
    max r0.yzw, r0, c31.y
    add r3, -r1.y, c17
    mul r4, r2.y, r3
    mul r3, r3, r3
    add r5, -r1.x, c16
    mad r4, r5, r2.x, r4
    mad r3, r5, r5, r3
    add r5, -r1.z, c18
    mov oT4.w, r1.z
    mad r4, r5, r2.z, r4
    mad r3, r5, r5, r3
    max r3, r3, c31.z
    mov oT4.xyz, r2
    rsq r2.x, r3.x
    rsq r2.y, r3.y
    rsq r2.z, r3.z
    rsq r2.w, r3.w
    mov r5.x, c31.x
    mad r3, r3, c19, r5.x
    mul r2, r2, r4
    max r2, r2, c31.y
    rcp r4.x, r3.x
    rcp r4.y, r3.y
    rcp r4.z, r3.z
    rcp r4.w, r3.w
    mul r2, r2, r4
    mul r3.xyz, r2.y, c1
    mad r3.xyz, c0, r2.x, r3
    mad r2.xyz, c2, r2.z, r3
    mad r2.xyz, c3, r2.w, r2
    add oT5.xyz, r0.yzww, r2
    mad oT7.x, r0.x, c27.z, c27.w
    mov r6.z, r0.x
    mov r1.w, c31.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT5.w, c31.y
    mov oT6.xy, c31.y
    mad oPos.xy, r6.w, c255, r6
    mov oPos.zw, r6

// approximately 89 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 68 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r1.w, r1.xyzx, r1.xyzx
  24: rsq r1.w, r1.w
  25: mul o2.xyz, r1.wwww, r1.xyzx
  26: mov r0.w, l(0)
  27: mov o3.xyzw, r0.wwwx
  28: mov o4.xyzw, r0.wwwy
  29: mov o5.w, r0.z
  30: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  31: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  32: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mov o5.xyz, r1.xyzx
  37: mul r0.w, r1.y, r1.y
  38: mad r0.w, r1.x, r1.x, -r0.w
  39: mul r2.xyzw, r1.yzzx, r1.xyzz
  40: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  41: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  42: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  43: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  44: mov r1.w, l(1.000000)
  45: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  46: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  47: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  48: add r2.xyz, r2.xyzx, r3.xyzx
  49: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  50: log r2.xyz, r2.xyzx
  51: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  52: exp r2.xyz, r2.xyzx
  53: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  54: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  56: mul r4.xyzw, r1.yyyy, r3.xyzw
  57: mul r3.xyzw, r3.xyzw, r3.xyzw
  58: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  59: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  60: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  61: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  62: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  63: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  64: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  65: rsq r3.xyzw, r0.xyzw
  66: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  67: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  68: mul r1.xyzw, r1.xyzw, r3.xyzw
  69: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  70: mul r0.xyzw, r0.xyzw, r1.xyzw
  71: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  72: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  73: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  74: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  75: add o6.xyz, r2.xyzx, r0.xyzx
  76: mov o6.w, l(0)
  77: mov o7.xy, l(0,0,0,0)
  78: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 94 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 29
Vector4 _MainTex_ST at 28
Float _UVSec at 30
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_FogParams at 27
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHAb at 22
Vector4 unity_SHAg at 21
Vector4 unity_SHAr at 20
Vector4 unity_SHBb at 25
Vector4 unity_SHBg at 24
Vector4 unity_SHBr at 23
Vector4 unity_SHC at 26

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_FogParams;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   unity_4LightPosX0    c16      1
//   unity_4LightPosY0    c17      1
//   unity_4LightPosZ0    c18      1
//   unity_4LightAtten0   c19      1
//   unity_SHAr           c20      1
//   unity_SHAg           c21      1
//   unity_SHAb           c22      1
//   unity_SHBr           c23      1
//   unity_SHBg           c24      1
//   unity_SHBb           c25      1
//   unity_SHC            c26      1
//   unity_FogParams      c27      1
//   _MainTex_ST          c28      1
//   _DetailAlbedoMap_ST  c29      1
//   _UVSec               c30      1
//

    vs_2_0
    def c31, 1, 0, 9.99999997e-007, 0.416666657
    def c32, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c31.xxxy, c31.yyyx
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp4 r1.w, c7, r0
    dp4 r6.x, c8, r1
    dp4 r6.y, c9, r1
    dp4 r6.w, c11, r1
    dp4 r0.x, c10, r1
    mad oT0.xy, v2, c28, c28.zwzw
    mul r0.y, c30.x, c30.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c29.xyxy, c29
    dp4 r1.x, c4, v0
    dp4 r1.y, c5, v0
    dp4 r1.z, c6, v0
    add r0.yzw, r1.xxyz, -c15.xxyz
    dp3 r2.x, r0.yzww, r0.yzww
    rsq r2.x, r2.x
    mul oT1.xyz, r0.yzww, r2.x
    mul r0.yzw, v1.y, c13.xxyz
    mad r0.yzw, v1.x, c12.xxyz, r0
    mad r0.yzw, v1.z, c14.xxyz, r0
    nrm r2.xyz, r0.yzww
    mul r0.y, r2.y, r2.y
    mad r0.y, r2.x, r2.x, -r0.y
    mul r3, r2.yzzx, r2.xyzz
    dp4 r4.x, c23, r3
    dp4 r4.y, c24, r3
    dp4 r4.z, c25, r3
    mad r0.yzw, c26.xxyz, r0.y, r4.xxyz
    mov r2.w, c31.x
    dp4 r3.x, c20, r2
    dp4 r3.y, c21, r2
    dp4 r3.z, c22, r2
    add r0.yzw, r0, r3.xxyz
    max r3.xyz, r0.yzww, c31.y
    mov r3.w, c31.w
    lit r4, r3.xxww
    mov r4.x, r4.z
    lit r5, r3.yyww
    lit r3, r3.zzww
    mov r4.z, r3.z
    mov r4.y, r5.z
    mad r0.yzw, r4.xxyz, c32.x, c32.y
    max r0.yzw, r0, c31.y
    add r3, -r1.y, c17
    mul r4, r2.y, r3
    mul r3, r3, r3
    add r5, -r1.x, c16
    mad r4, r5, r2.x, r4
    mad r3, r5, r5, r3
    add r5, -r1.z, c18
    mov oT4.w, r1.z
    mad r4, r5, r2.z, r4
    mad r3, r5, r5, r3
    max r3, r3, c31.z
    mov oT4.xyz, r2
    rsq r2.x, r3.x
    rsq r2.y, r3.y
    rsq r2.z, r3.z
    rsq r2.w, r3.w
    mov r5.x, c31.x
    mad r3, r3, c19, r5.x
    mul r2, r2, r4
    max r2, r2, c31.y
    rcp r4.x, r3.x
    rcp r4.y, r3.y
    rcp r4.z, r3.z
    rcp r4.w, r3.w
    mul r2, r2, r4
    mul r3.xyz, r2.y, c1
    mad r3.xyz, c0, r2.x, r3
    mad r2.xyz, c2, r2.z, r3
    mad r2.xyz, c3, r2.w, r2
    add oT5.xyz, r0.yzww, r2
    mad oT7.x, r0.x, c27.z, c27.w
    mov r6.z, r0.x
    mov r1.w, c31.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT5.w, c31.y
    mov oT6.xy, c31.y
    mad oPos.xy, r6.w, c255, r6
    mov oPos.zw, r6

// approximately 89 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 68 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r1.w, r1.xyzx, r1.xyzx
  24: rsq r1.w, r1.w
  25: mul o2.xyz, r1.wwww, r1.xyzx
  26: mov r0.w, l(0)
  27: mov o3.xyzw, r0.wwwx
  28: mov o4.xyzw, r0.wwwy
  29: mov o5.w, r0.z
  30: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  31: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  32: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  33: dp3 r0.w, r1.xyzx, r1.xyzx
  34: rsq r0.w, r0.w
  35: mul r1.xyz, r0.wwww, r1.xyzx
  36: mov o5.xyz, r1.xyzx
  37: mul r0.w, r1.y, r1.y
  38: mad r0.w, r1.x, r1.x, -r0.w
  39: mul r2.xyzw, r1.yzzx, r1.xyzz
  40: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  41: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  42: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  43: mad r2.xyz, cb2[44].xyzx, r0.wwww, r3.xyzx
  44: mov r1.w, l(1.000000)
  45: dp4 r3.x, cb2[38].xyzw, r1.xyzw
  46: dp4 r3.y, cb2[39].xyzw, r1.xyzw
  47: dp4 r3.z, cb2[40].xyzw, r1.xyzw
  48: add r2.xyz, r2.xyzx, r3.xyzx
  49: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  50: log r2.xyz, r2.xyzx
  51: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  52: exp r2.xyz, r2.xyzx
  53: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  54: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: add r3.xyzw, -r0.yyyy, cb2[3].xyzw
  56: mul r4.xyzw, r1.yyyy, r3.xyzw
  57: mul r3.xyzw, r3.xyzw, r3.xyzw
  58: add r5.xyzw, -r0.xxxx, cb2[2].xyzw
  59: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  60: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  61: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  62: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  63: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  64: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  65: rsq r3.xyzw, r0.xyzw
  66: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  67: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  68: mul r1.xyzw, r1.xyzw, r3.xyzw
  69: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  70: mul r0.xyzw, r0.xyzw, r1.xyzw
  71: mul r1.xyz, r0.yyyy, cb2[7].xyzx
  72: mad r1.xyz, cb2[6].xyzx, r0.xxxx, r1.xyzx
  73: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r1.xyzx
  74: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  75: add o6.xyz, r2.xyzx, r0.xyzx
  76: mov o6.w, l(0)
  77: mov o7.xy, l(0,0,0,0)
  78: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN FOG_LINEAR VERTEXLIGHT_ON _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 76 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 26
Vector4 _MainTex_ST at 25
Vector4 _ProjectionParams at 16
Float _UVSec at 27
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 20
Vector4 unity_4LightPosX0 at 17
Vector4 unity_4LightPosY0 at 18
Vector4 unity_4LightPosZ0 at 19
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 23
Vector4 unity_SHBg at 22
Vector4 unity_SHBr at 21
Vector4 unity_SHC at 24

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   _ProjectionParams    c16      1
//   unity_4LightPosX0    c17      1
//   unity_4LightPosY0    c18      1
//   unity_4LightPosZ0    c19      1
//   unity_4LightAtten0   c20      1
//   unity_SHBr           c21      1
//   unity_SHBg           c22      1
//   unity_SHBb           c23      1
//   unity_SHC            c24      1
//   _MainTex_ST          c25      1
//   _DetailAlbedoMap_ST  c26      1
//   _UVSec               c27      1
//

    vs_3_0
    def c28, 1, 0, 0.5, 9.99999997e-007
    def c29, 0.305306017, 0.682171106, 0.0125228781, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c25, c25.zwzw
    abs r0.x, c27.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c26.xyxy, c26
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    mad r1, v0.xyzx, c28.xxxy, c28.yyyx
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp4 r2.w, c7, r1
    dp4 r1.x, c8, r2
    dp4 r1.w, c11, r2
    mul r3.xz, r1.xyww, c28.z
    dp4 r1.y, c9, r2
    dp4 r1.z, c10, r2
    mul r2.x, r1.y, c16.x
    mov r6, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r2.x, c28.z
    add o7.xy, r3.z, r3.xwzw
    add r1, -r0.z, c19
    mov o5.w, r0.z
    add r2, -r0.x, c17
    add r3, -r0.y, c18
    mul r4.xyz, c13, v1.y
    mad r4.xyz, v1.x, c12, r4
    mad r4.xyz, v1.z, c14, r4
    nrm r5.xyz, r4
    mul r4, r3, r5.y
    mul r3, r3, r3
    mad r3, r2, r2, r3
    mad r2, r2, r5.x, r4
    mad r2, r1, r5.z, r2
    mad r1, r1, r1, r3
    max r1, r1, c28.w
    rsq r3.x, r1.x
    rsq r3.y, r1.y
    rsq r3.z, r1.z
    rsq r3.w, r1.w
    mov r4.x, c28.x
    mad r1, r1, c20, r4.x
    mul r2, r2, r3
    max r2, r2, c28.y
    rcp r3.x, r1.x
    rcp r3.y, r1.y
    rcp r3.z, r1.z
    rcp r3.w, r1.w
    mul r1, r2, r3
    mul r2.xyz, r1.y, c1
    mad r2.xyz, c0, r1.x, r2
    mad r1.xyz, c2, r1.z, r2
    mad r1.xyz, c3, r1.w, r1
    mad r2.xyz, r1, c29.x, c29.y
    mad r2.xyz, r1, r2, c29.z
    mul r0.z, r5.y, r5.y
    mad r0.z, r5.x, r5.x, -r0.z
    mul r3, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r4.x, c21, r3
    dp4 r4.y, c22, r3
    dp4 r4.z, c23, r3
    mad r3.xyz, c24, r0.z, r4
    mad o6.xyz, r1, r2, r3
    mov r0.w, c28.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c28.y
    mad o0.xy, r6.w, c255, r6
    mov o0.zw, r6

// approximately 77 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r2.xyzx, r2.xyzx
  27: rsq r1.w, r1.w
  28: mul r2.xyz, r1.wwww, r2.xyzx
  29: mov o5.xyz, r2.xyzx
  30: add r3.xyzw, -r1.xxxx, cb2[2].xyzw
  31: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  32: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  33: mul r5.xyzw, r2.yyyy, r4.xyzw
  34: mul r4.xyzw, r4.xyzw, r4.xyzw
  35: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  36: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  37: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  38: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r4.xyzw, r1.xyzw
  41: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  43: mul r3.xyzw, r3.xyzw, r4.xyzw
  44: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r1.xyzw, r1.xyzw, r3.xyzw
  46: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  47: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  48: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  49: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  50: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  51: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  52: mul r1.w, r2.y, r2.y
  53: mad r1.w, r2.x, r2.x, -r1.w
  54: mul r2.xyzw, r2.yzzx, r2.xyzz
  55: dp4 r4.x, cb2[41].xyzw, r2.xyzw
  56: dp4 r4.y, cb2[42].xyzw, r2.xyzw
  57: dp4 r4.z, cb2[43].xyzw, r2.xyzw
  58: mad r2.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  59: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  60: mov o6.w, l(0)
  61: mul r0.y, r0.y, cb1[5].x
  62: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  63: mov o7.zw, r0.zzzw
  64: add o7.xy, r1.zzzz, r1.xwxx
  65: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d9":
// Stats: 76 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _DetailAlbedoMap_ST at 26
Vector4 _MainTex_ST at 25
Vector4 _ProjectionParams at 16
Float _UVSec at 27
Vector4 _WorldSpaceCameraPos at 15
Vector4 unity_4LightAtten0 at 20
Vector4 unity_4LightPosX0 at 17
Vector4 unity_4LightPosY0 at 18
Vector4 unity_4LightPosZ0 at 19
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 23
Vector4 unity_SHBg at 22
Vector4 unity_SHBr at 21
Vector4 unity_SHC at 24

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_LightColor     c0       4
//   unity_ObjectToWorld  c4       4
//   unity_MatrixVP       c8       4
//   unity_WorldToObject  c12      3
//   _WorldSpaceCameraPos c15      1
//   _ProjectionParams    c16      1
//   unity_4LightPosX0    c17      1
//   unity_4LightPosY0    c18      1
//   unity_4LightPosZ0    c19      1
//   unity_4LightAtten0   c20      1
//   unity_SHBr           c21      1
//   unity_SHBg           c22      1
//   unity_SHBb           c23      1
//   unity_SHC            c24      1
//   _MainTex_ST          c25      1
//   _DetailAlbedoMap_ST  c26      1
//   _UVSec               c27      1
//

    vs_3_0
    def c28, 1, 0, 0.5, 9.99999997e-007
    def c29, 0.305306017, 0.682171106, 0.0125228781, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c25, c25.zwzw
    abs r0.x, c27.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c26.xyxy, c26
    dp4 r0.x, c4, v0
    dp4 r0.y, c5, v0
    dp4 r0.z, c6, v0
    add o2.xyz, r0, -c15
    mad r1, v0.xyzx, c28.xxxy, c28.yyyx
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp4 r2.w, c7, r1
    dp4 r1.x, c8, r2
    dp4 r1.w, c11, r2
    mul r3.xz, r1.xyww, c28.z
    dp4 r1.y, c9, r2
    dp4 r1.z, c10, r2
    mul r2.x, r1.y, c16.x
    mov r6, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r2.x, c28.z
    add o7.xy, r3.z, r3.xwzw
    add r1, -r0.z, c19
    mov o5.w, r0.z
    add r2, -r0.x, c17
    add r3, -r0.y, c18
    mul r4.xyz, c13, v1.y
    mad r4.xyz, v1.x, c12, r4
    mad r4.xyz, v1.z, c14, r4
    nrm r5.xyz, r4
    mul r4, r3, r5.y
    mul r3, r3, r3
    mad r3, r2, r2, r3
    mad r2, r2, r5.x, r4
    mad r2, r1, r5.z, r2
    mad r1, r1, r1, r3
    max r1, r1, c28.w
    rsq r3.x, r1.x
    rsq r3.y, r1.y
    rsq r3.z, r1.z
    rsq r3.w, r1.w
    mov r4.x, c28.x
    mad r1, r1, c20, r4.x
    mul r2, r2, r3
    max r2, r2, c28.y
    rcp r3.x, r1.x
    rcp r3.y, r1.y
    rcp r3.z, r1.z
    rcp r3.w, r1.w
    mul r1, r2, r3
    mul r2.xyz, r1.y, c1
    mad r2.xyz, c0, r1.x, r2
    mad r1.xyz, c2, r1.z, r2
    mad r1.xyz, c3, r1.w, r1
    mad r2.xyz, r1, c29.x, c29.y
    mad r2.xyz, r1, r2, c29.z
    mul r0.z, r5.y, r5.y
    mad r0.z, r5.x, r5.x, -r0.z
    mul r3, r5.yzzx, r5.xyzz
    mov o5.xyz, r5
    dp4 r4.x, c21, r3
    dp4 r4.y, c22, r3
    dp4 r4.z, c23, r3
    mad r3.xyz, c24, r0.z, r4
    mad o6.xyz, r1, r2, r3
    mov r0.w, c28.y
    mov o3, r0.wwwx
    mov o4, r0.wwwy
    mov o6.w, c28.y
    mad o0.xy, r6.w, c255, r6
    mov o0.zw, r6

// approximately 77 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 55 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r2.xyzx, r2.xyzx
  27: rsq r1.w, r1.w
  28: mul r2.xyz, r1.wwww, r2.xyzx
  29: mov o5.xyz, r2.xyzx
  30: add r3.xyzw, -r1.xxxx, cb2[2].xyzw
  31: add r4.xyzw, -r1.yyyy, cb2[3].xyzw
  32: add r1.xyzw, -r1.zzzz, cb2[4].xyzw
  33: mul r5.xyzw, r2.yyyy, r4.xyzw
  34: mul r4.xyzw, r4.xyzw, r4.xyzw
  35: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  36: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  37: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  38: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r4.xyzw, r1.xyzw
  41: mad r1.xyzw, r1.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  43: mul r3.xyzw, r3.xyzw, r4.xyzw
  44: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r1.xyzw, r1.xyzw, r3.xyzw
  46: mul r3.xyz, r1.yyyy, cb2[7].xyzx
  47: mad r3.xyz, cb2[6].xyzx, r1.xxxx, r3.xyzx
  48: mad r1.xyz, cb2[8].xyzx, r1.zzzz, r3.xyzx
  49: mad r1.xyz, cb2[9].xyzx, r1.wwww, r1.xyzx
  50: mad r3.xyz, r1.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  51: mad r3.xyz, r1.xyzx, r3.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  52: mul r1.w, r2.y, r2.y
  53: mad r1.w, r2.x, r2.x, -r1.w
  54: mul r2.xyzw, r2.yzzx, r2.xyzz
  55: dp4 r4.x, cb2[41].xyzw, r2.xyzw
  56: dp4 r4.y, cb2[42].xyzw, r2.xyzw
  57: dp4 r4.z, cb2[43].xyzw, r2.xyzw
  58: mad r2.xyz, cb2[44].xyzx, r1.wwww, r4.xyzx
  59: mad o6.xyz, r1.xyzx, r3.xyzx, r2.xyzx
  60: mov o6.w, l(0)
  61: mul r0.y, r0.y, cb1[5].x
  62: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  63: mov o7.zw, r0.zzzw
  64: add o7.xy, r1.zzzz, r1.xwxx
  65: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 66 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 21
Vector4 _MainTex_ST at 20
Float _UVSec at 22
Vector4 _WorldSpaceCameraPos at 11
Vector4 unity_FogParams at 19
Vector4 unity_SHAb at 14
Vector4 unity_SHAg at 13
Vector4 unity_SHAr at 12
Vector4 unity_SHBb at 17
Vector4 unity_SHBg at 16
Vector4 unity_SHBr at 15
Vector4 unity_SHC at 18

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   unity_SHAr           c12      1
//   unity_SHAg           c13      1
//   unity_SHAb           c14      1
//   unity_SHBr           c15      1
//   unity_SHBg           c16      1
//   unity_SHBb           c17      1
//   unity_SHC            c18      1
//   unity_FogParams      c19      1
//   _MainTex_ST          c20      1
//   _DetailAlbedoMap_ST  c21      1
//   _UVSec               c22      1
//

    vs_2_0
    def c23, 1, 0, 0.416666657, 0
    def c24, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c23.xxxy, c23.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r5.x, c4, r1
    dp4 r5.y, c5, r1
    dp4 r5.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c20, c20.zwzw
    mul r0.y, c22.x, c22.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c21.xyxy, c21
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    mov oT4.w, r1.z
    dp3 r1.z, r0.yzww, r0.yzww
    rsq r1.z, r1.z
    mul oT1.xyz, r0.yzww, r1.z
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    nrm r2.xyz, r0.yzww
    mul r0.y, r2.y, r2.y
    mad r0.y, r2.x, r2.x, -r0.y
    mul r3, r2.yzzx, r2.xyzz
    dp4 r4.x, c15, r3
    dp4 r4.y, c16, r3
    dp4 r4.z, c17, r3
    mad r0.yzw, c18.xxyz, r0.y, r4.xxyz
    mov r2.w, c23.x
    dp4 r3.x, c12, r2
    dp4 r3.y, c13, r2
    dp4 r3.z, c14, r2
    mov oT4.xyz, r2
    add r0.yzw, r0, r3.xxyz
    max r2.xyz, r0.yzww, c23.y
    mov r2.w, c23.z
    lit r3, r2.xxww
    mov r3.x, r3.z
    lit r4, r2.yyww
    lit r2, r2.zzww
    mov r3.z, r2.z
    mov r3.y, r4.z
    mad r0.yzw, r3.xxyz, c24.x, c24.y
    max oT5.xyz, r0.yzww, c23.y
    mad oT7.x, r0.x, c19.z, c19.w
    mov r5.z, r0.x
    mov r1.w, c23.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT5.w, c23.y
    mov oT6.xy, c23.y
    mad oPos.xy, r5.w, c255, r5
    mov oPos.zw, r5

// approximately 61 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 47 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r1.w, r1.xyzx, r1.xyzx
  24: rsq r1.w, r1.w
  25: mul o2.xyz, r1.wwww, r1.xyzx
  26: mov r0.w, l(0)
  27: mov o3.xyzw, r0.wwwx
  28: mov o4.xyzw, r0.wwwy
  29: mov o5.w, r0.z
  30: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  31: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  32: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  33: dp3 r0.w, r0.xyzx, r0.xyzx
  34: rsq r0.w, r0.w
  35: mul r0.xyz, r0.wwww, r0.xyzx
  36: mov o5.xyz, r0.xyzx
  37: mul r1.x, r0.y, r0.y
  38: mad r1.x, r0.x, r0.x, -r1.x
  39: mul r2.xyzw, r0.yzzx, r0.xyzz
  40: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  41: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  42: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  43: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  44: mov r0.w, l(1.000000)
  45: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  46: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  47: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  48: add r0.xyz, r1.xyzx, r2.xyzx
  49: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  50: log r0.xyz, r0.xyzx
  51: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  52: exp r0.xyz, r0.xyzx
  53: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  54: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mov o6.w, l(0)
  56: mov o7.xy, l(0,0,0,0)
  57: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //         d3d9: 39 avg math (36..41)
 //        d3d11: 29 avg math (26..34)
 // Stats for Fragment shader:
 //         d3d9: 48 avg math (26..95), 3 avg texture (2..5)
 //        d3d11: 50 avg math (33..104), 3 avg texture (3..5), 1 avg branch (0..2)
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="FORWARDADD" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: POINT 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    nrm r0.xyz, r1
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 33 math, 3 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 4
Float _Glossiness at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _Glossiness        c6       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//

    ps_2_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c7
    add_pp r1.y, r2.w, -c6.x
    mov r3.xyz, t5
    mov_pp r3.w, c7.w
    dp4 r4.x, c0, r3
    dp4 r4.y, c1, r3
    dp4 r4.z, c2, r3
    dp3 r3.xy, r4, r4
    texld r1, r1, s0
    texld r4, t0, s1
    texld_pp r3, r3, s2
    mul_pp r2.w, r1.x, c8.x
    mad_pp r0.yzw, c4.wzyx, r4.wzyx, r2.x
    mul_pp r1.xyz, r4, c4
    mad_pp r0.yzw, c5.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c5.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul_pp r1.xyz, r3.x, c3
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c7.w
    mov_pp oC0, r0

// approximately 36 instruction slots used (3 texture, 33 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xy, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 39 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   9: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[14].xyzx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[45].xyzw
  30: dp3 r2.w, r3.xyzx, r3.xyzx
  31: sample r3.xyzw, r2.wwww, t1.xyzw, s3
  32: mul r1.w, r1.w, r3.x
  33: mul r3.xyz, r1.wwww, cb0[2].xyzx
  34: dp3 r1.w, -v2.xyzx, r2.xyzx
  35: add r1.w, r1.w, r1.w
  36: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  37: mov r5.x, v3.w
  38: mov r5.y, v4.w
  39: mov r5.z, v5.w
  40: dp3_sat r1.w, r2.xyzx, r5.xyzx
  41: dp3 r2.x, r4.xyzx, r5.xyzx
  42: mul r2.x, r2.x, r2.x
  43: mul r2.x, r2.x, r2.x
  44: add r2.y, -cb0[8].w, l(1.000000)
  45: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  46: mul r2.x, r2.x, l(16.000000)
  47: mul r0.xyz, r0.xyzx, r2.xxxx
  48: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  49: mul r1.xyz, r1.wwww, r3.xyzx
  50: mul o0.xyz, r0.xyzx, r1.xyzx
  51: mov o0.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 36 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    mov r1.w, c16.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 37 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 26 math, 2 textures
Vector4 _Color at 1
Float _GlossMapScale at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   _LightColor0       c0       1
//   _Color             c1       1
//   _Metallic          c2       1
//   _GlossMapScale     c3       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//

    ps_2_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s1
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, -t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, -t1
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    dp3_pp r1.w, r2, r3
    dp3_sat_pp r1.x, r1, r3
    mul_pp r1.xyz, r1.x, c0
    mul_pp r1.w, r1.w, r1.w
    mul_pp r2.x, r1.w, r1.w
    mov r3, c4
    mad_pp r2.y, r0.w, -c3.x, r3.w
    texld r2, r2, s0
    mul_pp r0.w, r2.x, c5.x
    mad_pp r2.xyz, c1, r0, r3.x
    mul_pp r0.xyz, r0, c1
    mad_pp r2.xyz, c2.x, r2, r3.y
    mul_pp r2.xyz, r0.w, r2
    mad_pp r0.w, c2.x, -r3.z, r3.z
    mad_pp r0.xyz, r0, r0.w, r2
    mul_pp r0.xyz, r1, r0
    mov_pp r0.w, c4.w
    mov_pp oC0, r0

// approximately 28 instruction slots used (2 texture, 26 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: mov r1.w, l(0)
  23: mov o3.xyzw, r1.wwwx
  24: mov o4.xyzw, r1.wwwy
  25: mov o5.w, r1.z
  26: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul o5.xyz, r0.wwww, r0.xyzx
  32: mov o7.xy, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 33 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r2.x, v5.xyzx, v5.xyzx
   6: rsq r2.x, r2.x
   7: mul r2.xyz, r2.xxxx, v5.xyzx
   8: eq r2.w, cb2[0].x, l(1.000000)
   9: if_nz r2.w
  10:   eq r2.w, cb2[0].y, l(1.000000)
  11:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  12:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  13:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  14:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  15:   movc r3.xyz, r2.wwww, r3.xyzx, v6.xyzx
  16:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  17:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  18:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  19:   mad r3.y, cb2[0].z, l(0.500000), l(0.750000)
  20:   max r3.x, r2.w, r3.y
  21:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  22: else 
  23:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  24: endif 
  25: dp4_sat r2.w, r3.xyzw, cb1[45].xyzw
  26: mul r3.xyz, r2.wwww, cb0[2].xyzx
  27: dp3 r2.w, -v2.xyzx, r2.xyzx
  28: add r2.w, r2.w, r2.w
  29: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  30: mov r5.x, v3.w
  31: mov r5.y, v4.w
  32: mov r5.z, v5.w
  33: dp3_sat r2.x, r2.xyzx, r5.xyzx
  34: dp3 r2.y, r4.xyzx, r5.xyzx
  35: mul r2.y, r2.y, r2.y
  36: mul r4.x, r2.y, r2.y
  37: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  38: sample r4.xyzw, r4.xyxx, t1.xyzw, s1
  39: mul r0.w, r4.x, l(16.000000)
  40: mul r0.xyz, r0.xyzx, r0.wwww
  41: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  42: mul r1.xyz, r2.xxxx, r3.xyzx
  43: mul o0.xyz, r0.xyzx, r1.xyzx
  44: mov o0.w, l(1.000000)
  45: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 36 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    mov r1.w, c16.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 37 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 26 math, 2 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   _LightColor0       c0       1
//   _Color             c1       1
//   _Metallic          c2       1
//   _Glossiness        c3       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//

    ps_2_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl_2d s0
    dcl_2d s1
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.xyz, r0.x, c0
    mul_pp r0.w, r0.w, r0.w
    mul_pp r1.x, r0.w, r0.w
    mov r2, c4
    add_pp r1.y, r2.w, -c3.x
    texld r1, r1, s0
    texld r3, t0, s1
    mul_pp r0.w, r1.x, c5.x
    mad_pp r1.xyz, c1, r3, r2.x
    mul_pp r3.xyz, r3, c1
    mad_pp r1.xyz, c2.x, r1, r2.y
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.w, c2.x, -r2.z, r2.z
    mad_pp r1.xyz, r3, r0.w, r1
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c4.w
    mov_pp oC0, r0

// approximately 28 instruction slots used (2 texture, 26 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: mov r1.w, l(0)
  23: mov o3.xyzw, r1.wwwx
  24: mov o4.xyzw, r1.wwwy
  25: mov o5.w, r1.z
  26: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul o5.xyz, r0.wwww, r0.xyzx
  32: mov o7.xy, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 33 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: eq r1.w, cb2[0].x, l(1.000000)
   9: if_nz r1.w
  10:   eq r1.w, cb2[0].y, l(1.000000)
  11:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  12:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  13:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  14:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  15:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  16:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  17:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  18:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  19:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  20:   max r3.x, r1.w, r2.w
  21:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  22: else 
  23:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  24: endif 
  25: dp4_sat r1.w, r3.xyzw, cb1[45].xyzw
  26: mul r3.xyz, r1.wwww, cb0[2].xyzx
  27: dp3 r1.w, -v2.xyzx, r2.xyzx
  28: add r1.w, r1.w, r1.w
  29: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  30: mov r5.x, v3.w
  31: mov r5.y, v4.w
  32: mov r5.z, v5.w
  33: dp3_sat r1.w, r2.xyzx, r5.xyzx
  34: dp3 r2.x, r4.xyzx, r5.xyzx
  35: mul r2.x, r2.x, r2.x
  36: mul r2.x, r2.x, r2.x
  37: add r2.y, -cb0[8].w, l(1.000000)
  38: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  39: mul r2.x, r2.x, l(16.000000)
  40: mul r0.xyz, r0.xyzx, r2.xxxx
  41: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  42: mul r1.xyz, r1.wwww, r3.xyzx
  43: mul o0.xyz, r0.xyzx, r1.xyzx
  44: mov o0.w, l(1.000000)
  45: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    nrm r0.xyz, r1
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 38 math, 4 textures
Matrix4x4 unity_WorldToLight at 0
Vector4 _Color at 5
Float _GlossMapScale at 7
Vector4 _LightColor0 at 4
Float _Metallic at 6

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       4
//   _LightColor0       c4       1
//   _Color             c5       1
//   _Metallic          c6       1
//   _GlossMapScale     c7       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//   _LightTextureB0    s3       1
//

    ps_2_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 0.5, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t0, s1
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, -t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, -t1
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    dp3_pp r1.w, r2, r3
    dp3_sat_pp r1.x, r1, r3
    mul_pp r1.y, r1.w, r1.w
    mul_pp r2.x, r1.y, r1.y
    mov r3, c8
    mad_pp r2.y, r0.w, -c7.x, r3.w
    mov r4.xyz, t5
    mov_pp r4.w, c8.w
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp4 r0.w, c3, r4
    rcp r0.w, r0.w
    mad r4.xy, r5, r0.w, c9.x
    dp3 r5.xy, r5, r5
    texld r2, r2, s0
    texld_pp r4, r4, s2
    texld_pp r6, r5, s3
    mul_pp r0.w, r2.x, c9.y
    mad_pp r1.yzw, c5.wzyx, r0.wzyx, r3.x
    mul_pp r0.xyz, r0, c5
    mad_pp r1.yzw, c6.x, r1, r3.y
    mul_pp r1.yzw, r0.w, r1
    mad_pp r0.w, c6.x, -r3.z, r3.z
    mad_pp r0.xyz, r0, r0.w, r1.wzyx
    mul r0.w, r4.w, r6.x
    mul_pp r1.yzw, r0.w, c4.wzyx
    mul_pp r1.xyz, r1.x, r1.wzyx
    cmp_pp r1.xyz, -r5.z, c9.z, r1
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c8.w
    mov_pp oC0, r0

// approximately 42 instruction slots used (4 texture, 38 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xy, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 45 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r2.x, v5.xyzx, v5.xyzx
   6: rsq r2.x, r2.x
   7: mul r2.xyz, r2.xxxx, v5.xyzx
   8: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
   9: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  10: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  11: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  12: eq r2.w, cb2[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r4.y, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r2.w, r4.y
  25:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r4.xyzw, cb1[45].xyzw
  30: lt r4.x, l(0.000000), r3.z
  31: and r4.x, r4.x, l(0x3f800000)
  32: div r4.yz, r3.xxyx, r3.wwww
  33: add r4.yz, r4.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  34: sample r5.xyzw, r4.yzyy, t1.xyzw, s3
  35: mul r3.w, r4.x, r5.w
  36: dp3 r3.x, r3.xyzx, r3.xyzx
  37: sample r4.xyzw, r3.xxxx, t2.xyzw, s4
  38: mul r3.x, r3.w, r4.x
  39: mul r2.w, r2.w, r3.x
  40: mul r3.xyz, r2.wwww, cb0[2].xyzx
  41: dp3 r2.w, -v2.xyzx, r2.xyzx
  42: add r2.w, r2.w, r2.w
  43: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  44: mov r5.x, v3.w
  45: mov r5.y, v4.w
  46: mov r5.z, v5.w
  47: dp3_sat r2.x, r2.xyzx, r5.xyzx
  48: dp3 r2.y, r4.xyzx, r5.xyzx
  49: mul r2.y, r2.y, r2.y
  50: mul r4.x, r2.y, r2.y
  51: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  52: sample r4.xyzw, r4.xyxx, t3.xyzw, s1
  53: mul r0.w, r4.x, l(16.000000)
  54: mul r0.xyz, r0.xyzx, r0.wwww
  55: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  56: mul r1.xyz, r2.xxxx, r3.xyzx
  57: mul o0.xyz, r0.xyzx, r1.xyzx
  58: mov o0.w, l(1.000000)
  59: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    nrm r0.xyz, r1
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 38 math, 4 textures
Matrix4x4 unity_WorldToLight at 0
Vector4 _Color at 5
Float _Glossiness at 7
Vector4 _LightColor0 at 4
Float _Metallic at 6

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       4
//   _LightColor0       c4       1
//   _Color             c5       1
//   _Metallic          c6       1
//   _Glossiness        c7       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//   _LightTextureB0    s3       1
//

    ps_2_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 0.5, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c8
    add_pp r1.y, r2.w, -c7.x
    mov r3.xyz, t5
    mov_pp r3.w, c8.w
    dp4 r4.x, c0, r3
    dp4 r4.y, c1, r3
    dp4 r4.z, c2, r3
    dp4 r2.w, c3, r3
    rcp r2.w, r2.w
    mad r3.xy, r4, r2.w, c9.x
    dp3 r4.xy, r4, r4
    texld r1, r1, s0
    texld r5, t0, s1
    texld_pp r3, r3, s2
    texld_pp r6, r4, s3
    mul_pp r2.w, r1.x, c9.y
    mad_pp r0.yzw, c5.wzyx, r5.wzyx, r2.x
    mul_pp r1.xyz, r5, c5
    mad_pp r0.yzw, c6.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c6.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul r1.x, r3.w, r6.x
    mul_pp r1.xyz, r1.x, c4
    mul_pp r1.xyz, r0.x, r1
    cmp_pp r1.xyz, -r4.z, c9.z, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c8.w
    mov_pp oC0, r0

// approximately 42 instruction slots used (4 texture, 38 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xy, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 45 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
   9: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  10: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  11: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[45].xyzw
  30: lt r2.w, l(0.000000), r3.z
  31: and r2.w, r2.w, l(0x3f800000)
  32: div r4.xy, r3.xyxx, r3.wwww
  33: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  34: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  35: mul r2.w, r2.w, r4.w
  36: dp3 r3.x, r3.xyzx, r3.xyzx
  37: sample r3.xyzw, r3.xxxx, t2.xyzw, s4
  38: mul r2.w, r2.w, r3.x
  39: mul r1.w, r1.w, r2.w
  40: mul r3.xyz, r1.wwww, cb0[2].xyzx
  41: dp3 r1.w, -v2.xyzx, r2.xyzx
  42: add r1.w, r1.w, r1.w
  43: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  44: mov r5.x, v3.w
  45: mov r5.y, v4.w
  46: mov r5.z, v5.w
  47: dp3_sat r1.w, r2.xyzx, r5.xyzx
  48: dp3 r2.x, r4.xyzx, r5.xyzx
  49: mul r2.x, r2.x, r2.x
  50: mul r2.x, r2.x, r2.x
  51: add r2.y, -cb0[8].w, l(1.000000)
  52: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  53: mul r2.x, r2.x, l(16.000000)
  54: mul r0.xyz, r0.xyzx, r2.xxxx
  55: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  56: mul r1.xyz, r1.wwww, r3.xyzx
  57: mul o0.xyz, r0.xyzx, r1.xyzx
  58: mov o0.w, l(1.000000)
  59: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    nrm r0.xyz, r1
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 34 math, 4 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 4
Float _GlossMapScale at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _GlossMapScale     c6       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//   _LightTextureB0    s3       1
//

    ps_2_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    texld r0, t0, s1
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, -t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, -t1
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    dp3_pp r1.w, r2, r3
    dp3_sat_pp r1.x, r1, r3
    mul_pp r1.y, r1.w, r1.w
    mul_pp r2.x, r1.y, r1.y
    mov r3, c7
    mad_pp r2.y, r0.w, -c6.x, r3.w
    mov r4.xyz, t5
    mov_pp r4.w, c7.w
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r4.xy, r5, r5
    texld r2, r2, s0
    texld r5, r5, s2
    texld r4, r4, s3
    mul_pp r0.w, r2.x, c8.x
    mad_pp r1.yzw, c4.wzyx, r0.wzyx, r3.x
    mul_pp r0.xyz, r0, c4
    mad_pp r1.yzw, c5.x, r1, r3.y
    mul_pp r1.yzw, r0.w, r1
    mad_pp r0.w, c5.x, -r3.z, r3.z
    mad_pp r0.xyz, r0, r0.w, r1.wzyx
    mul_pp r0.w, r5.w, r4.x
    mul_pp r1.yzw, r0.w, c3.wzyx
    mul_pp r1.xyz, r1.x, r1.wzyx
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c7.w
    mov_pp oC0, r0

// approximately 38 instruction slots used (4 texture, 34 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xy, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 40 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r2.x, v5.xyzx, v5.xyzx
   6: rsq r2.x, r2.x
   7: mul r2.xyz, r2.xxxx, v5.xyzx
   8: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   9: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[14].xyzx
  12: eq r2.w, cb2[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r2.w, r3.w
  25:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r4.xyzw, cb1[45].xyzw
  30: dp3 r3.w, r3.xyzx, r3.xyzx
  31: sample r4.xyzw, r3.wwww, t1.xyzw, s4
  32: sample r3.xyzw, r3.xyzx, t2.xyzw, s3
  33: mul r3.x, r3.w, r4.x
  34: mul r2.w, r2.w, r3.x
  35: mul r3.xyz, r2.wwww, cb0[2].xyzx
  36: dp3 r2.w, -v2.xyzx, r2.xyzx
  37: add r2.w, r2.w, r2.w
  38: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  39: mov r5.x, v3.w
  40: mov r5.y, v4.w
  41: mov r5.z, v5.w
  42: dp3_sat r2.x, r2.xyzx, r5.xyzx
  43: dp3 r2.y, r4.xyzx, r5.xyzx
  44: mul r2.y, r2.y, r2.y
  45: mul r4.x, r2.y, r2.y
  46: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  47: sample r4.xyzw, r4.xyxx, t3.xyzw, s1
  48: mul r0.w, r4.x, l(16.000000)
  49: mul r0.xyz, r0.xyzx, r0.wwww
  50: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  51: mul r1.xyz, r2.xxxx, r3.xyzx
  52: mul o0.xyz, r0.xyzx, r1.xyzx
  53: mov o0.w, l(1.000000)
  54: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    nrm r0.xyz, r1
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 34 math, 4 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 4
Float _Glossiness at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _Glossiness        c6       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//   _LightTextureB0    s3       1
//

    ps_2_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c7
    add_pp r1.y, r2.w, -c6.x
    mov r3.xyz, t5
    mov_pp r3.w, c7.w
    dp4 r4.x, c0, r3
    dp4 r4.y, c1, r3
    dp4 r4.z, c2, r3
    dp3 r3.xy, r4, r4
    texld r1, r1, s0
    texld r5, t0, s1
    texld r4, r4, s2
    texld r3, r3, s3
    mul_pp r2.w, r1.x, c8.x
    mad_pp r0.yzw, c4.wzyx, r5.wzyx, r2.x
    mul_pp r1.xyz, r5, c4
    mad_pp r0.yzw, c5.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c5.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul_pp r1.x, r4.w, r3.x
    mul_pp r1.xyz, r1.x, c3
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c7.w
    mov_pp oC0, r0

// approximately 38 instruction slots used (4 texture, 34 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xy, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 40 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   9: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[14].xyzx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[45].xyzw
  30: dp3 r2.w, r3.xyzx, r3.xyzx
  31: sample r4.xyzw, r2.wwww, t1.xyzw, s4
  32: sample r3.xyzw, r3.xyzx, t2.xyzw, s3
  33: mul r2.w, r3.w, r4.x
  34: mul r1.w, r1.w, r2.w
  35: mul r3.xyz, r1.wwww, cb0[2].xyzx
  36: dp3 r1.w, -v2.xyzx, r2.xyzx
  37: add r1.w, r1.w, r1.w
  38: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  39: mov r5.x, v3.w
  40: mov r5.y, v4.w
  41: mov r5.z, v5.w
  42: dp3_sat r1.w, r2.xyzx, r5.xyzx
  43: dp3 r2.x, r4.xyzx, r5.xyzx
  44: mul r2.x, r2.x, r2.x
  45: mul r2.x, r2.x, r2.x
  46: add r2.y, -cb0[8].w, l(1.000000)
  47: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  48: mul r2.x, r2.x, l(16.000000)
  49: mul r0.xyz, r0.xyzx, r2.xxxx
  50: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  51: mul r1.xyz, r1.wwww, r3.xyzx
  52: mul o0.xyz, r0.xyzx, r1.xyzx
  53: mov o0.w, l(1.000000)
  54: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 36 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    mov r1.w, c16.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 37 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 31 math, 3 textures
Matrix4x2 unity_WorldToLight at 0
Vector4 _Color at 3
Float _GlossMapScale at 5
Vector4 _LightColor0 at 2
Float _Metallic at 4

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       2
//   _LightColor0       c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _GlossMapScale     c5       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//

    ps_2_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 1
    def c7, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t0, s1
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, -t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, -t1
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    dp3_pp r1.w, r2, r3
    dp3_sat_pp r1.x, r1, r3
    mul_pp r1.y, r1.w, r1.w
    mul_pp r2.x, r1.y, r1.y
    mov r3, c6
    mad_pp r2.y, r0.w, -c5.x, r3.w
    mov r4.xyz, t5
    mov_pp r4.w, c6.w
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    texld r2, r2, s0
    texld_pp r4, r5, s2
    mul_pp r0.w, r2.x, c7.x
    mad_pp r1.yzw, c3.wzyx, r0.wzyx, r3.x
    mul_pp r0.xyz, r0, c3
    mad_pp r1.yzw, c4.x, r1, r3.y
    mul_pp r1.yzw, r0.w, r1
    mad_pp r0.w, c4.x, -r3.z, r3.z
    mad_pp r0.xyz, r0, r0.w, r1.wzyx
    mul_pp r1.yzw, r4.w, c2.wzyx
    mul_pp r1.xyz, r1.x, r1.wzyx
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c6.w
    mov_pp oC0, r0

// approximately 34 instruction slots used (3 texture, 31 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: mov r1.w, l(0)
  23: mov o3.xyzw, r1.wwwx
  24: mov o4.xyzw, r1.wwwy
  25: mov o5.w, r1.z
  26: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul o5.xyz, r0.wwww, r0.xyzx
  32: mov o7.xy, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 38 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r2.x, v5.xyzx, v5.xyzx
   6: rsq r2.x, r2.x
   7: mul r2.xyz, r2.xxxx, v5.xyzx
   8: mul r3.xy, v6.yyyy, cb0[12].xyxx
   9: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  10: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  11: add r3.xy, r3.xyxx, cb0[14].xyxx
  12: eq r2.w, cb2[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r3.z, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r2.w, r3.z
  25:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r4.xyzw, cb1[45].xyzw
  30: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  31: mul r2.w, r2.w, r3.w
  32: mul r3.xyz, r2.wwww, cb0[2].xyzx
  33: dp3 r2.w, -v2.xyzx, r2.xyzx
  34: add r2.w, r2.w, r2.w
  35: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  36: mov r5.x, v3.w
  37: mov r5.y, v4.w
  38: mov r5.z, v5.w
  39: dp3_sat r2.x, r2.xyzx, r5.xyzx
  40: dp3 r2.y, r4.xyzx, r5.xyzx
  41: mul r2.y, r2.y, r2.y
  42: mul r4.x, r2.y, r2.y
  43: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  44: sample r4.xyzw, r4.xyxx, t2.xyzw, s1
  45: mul r0.w, r4.x, l(16.000000)
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  48: mul r1.xyz, r2.xxxx, r3.xyzx
  49: mul o0.xyz, r0.xyzx, r1.xyzx
  50: mov o0.w, l(1.000000)
  51: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 36 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    mov r1.w, c16.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 37 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 31 math, 3 textures
Matrix4x2 unity_WorldToLight at 0
Vector4 _Color at 3
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Float _Metallic at 4

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       2
//   _LightColor0       c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//

    ps_2_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 1
    def c7, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c6
    add_pp r1.y, r2.w, -c5.x
    mov r3.xyz, t5
    mov_pp r3.w, c6.w
    dp4 r4.x, c0, r3
    dp4 r4.y, c1, r3
    texld r1, r1, s0
    texld r3, t0, s1
    texld_pp r4, r4, s2
    mul_pp r2.w, r1.x, c7.x
    mad_pp r0.yzw, c3.wzyx, r3.wzyx, r2.x
    mul_pp r1.xyz, r3, c3
    mad_pp r0.yzw, c4.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c4.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul_pp r1.xyz, r4.w, c2
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c6.w
    mov_pp oC0, r0

// approximately 34 instruction slots used (3 texture, 31 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: mov r1.w, l(0)
  23: mov o3.xyzw, r1.wwwx
  24: mov o4.xyzw, r1.wwwy
  25: mov o5.w, r1.z
  26: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul o5.xyz, r0.wwww, r0.xyzx
  32: mov o7.xy, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 38 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xy, v6.yyyy, cb0[12].xyxx
   9: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  10: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  11: add r3.xy, r3.xyxx, cb0[14].xyxx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[45].xyzw
  30: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  31: mul r1.w, r1.w, r3.w
  32: mul r3.xyz, r1.wwww, cb0[2].xyzx
  33: dp3 r1.w, -v2.xyzx, r2.xyzx
  34: add r1.w, r1.w, r1.w
  35: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  36: mov r5.x, v3.w
  37: mov r5.y, v4.w
  38: mov r5.z, v5.w
  39: dp3_sat r1.w, r2.xyzx, r5.xyzx
  40: dp3 r2.x, r4.xyzx, r5.xyzx
  41: mul r2.x, r2.x, r2.x
  42: mul r2.x, r2.x, r2.x
  43: add r2.y, -cb0[8].w, l(1.000000)
  44: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  45: mul r2.x, r2.x, l(16.000000)
  46: mul r0.xyz, r0.xyzx, r2.xxxx
  47: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  48: mul r1.xyz, r1.wwww, r3.xyzx
  49: mul o0.xyz, r0.xyzx, r1.xyzx
  50: mov o0.w, l(1.000000)
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    nrm r0.xyz, r1
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 46 math, 5 textures
Matrix4x4 unity_WorldToLight at 4
Matrix4x4 unity_WorldToShadow at 0
Vector4 _Color at 10
Float _GlossMapScale at 12
Vector4 _LightColor0 at 9
Vector4 _LightShadowData at 8
Float _Metallic at 11

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_LightTexture0" to slot 3
Set 2D Texture "_LightTextureB0" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToShadow c0       4
//   unity_WorldToLight  c4       4
//   _LightShadowData    c8       1
//   _LightColor0        c9       1
//   _Color              c10      1
//   _Metallic           c11      1
//   _GlossMapScale      c12      1
//   unity_NHxRoughness  s0       1
//   _ShadowMapTexture   s1       1
//   _MainTex            s2       1
//   _LightTexture0      s3       1
//   _LightTextureB0     s4       1
//

    ps_2_0
    def c13, -0.220916301, 0.220916301, 0.779083729, 1
    def c14, 0.5, 0, 16, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, t0, s2
    mov r1.xyz, t5
    mov_pp r1.w, c13.w
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp3 r2.w, r2, r2
    mov r3.xy, r2.w
    dp4 r2.w, c7, r1
    rcp r2.w, r2.w
    mad r2.xy, r2, r2.w, c14.x
    dp4 r4.x, c0, r1
    dp4 r4.y, c1, r1
    dp4 r4.z, c2, r1
    dp4 r4.w, c3, r1
    mov_pp r1.x, t2.w
    mov_pp r1.y, t3.w
    mov_pp r1.z, t4.w
    nrm_pp r5.xyz, t4
    dp3_pp r1.w, -t1, r5
    add_pp r1.w, r1.w, r1.w
    mad_pp r6.xyz, r5, -r1.w, -t1
    dp3_pp r1.w, r6, r1
    mul_pp r1.w, r1.w, r1.w
    mul_pp r6.x, r1.w, r1.w
    mov r7, c13
    mad_pp r6.y, r0.w, -c12.x, r7.w
    texld_pp r3, r3, s4
    texld_pp r8, r2, s3
    texldp_pp r4, r4, s1
    texld r6, r6, s0
    mul r0.w, r3.x, r8.w
    cmp r0.w, -r2.z, c14.y, r0.w
    lrp_pp r1.w, r4.x, r7.w, c8.x
    mul_pp r0.w, r0.w, r1.w
    mul_pp r2.xyz, r0.w, c9
    dp3_sat_pp r0.w, r5, r1
    mul_pp r1.xyz, r0.w, r2
    mul_pp r0.w, r6.x, c14.z
    mad_pp r2.xyz, c10, r0, r7.x
    mul_pp r0.xyz, r0, c10
    mad_pp r2.xyz, c11.x, r2, r7.y
    mul_pp r2.xyz, r0.w, r2
    mad_pp r0.w, c11.x, -r7.z, r7.z
    mad_pp r0.xyz, r0, r0.w, r2
    mul_pp r0.xyz, r1, r0
    mov_pp r0.w, c13.w
    mov_pp oC0, r0

// approximately 50 instruction slots used (5 texture, 45 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xy, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 40 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s3
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t2.xyzw, s4
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t4.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: mov r2.x, v3.w
  27: mov r2.y, v4.w
  28: mov r2.z, v5.w
  29: dp3_sat r0.w, r1.xyzx, r2.xyzx
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: dp3 r0.w, -v2.xyzx, r1.xyzx
  32: add r0.w, r0.w, r0.w
  33: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  34: dp3 r0.w, r1.xyzx, r2.xyzx
  35: mul r0.w, r0.w, r0.w
  36: mul r1.x, r0.w, r0.w
  37: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  38: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  39: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  40: mul r0.w, r1.x, l(16.000000)
  41: mad r1.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  42: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  43: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  44: mul r1.xyz, r0.wwww, r1.xyzx
  45: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  46: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  47: mul o0.xyz, r0.xyzx, r1.xyzx
  48: mov o0.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    nrm r0.xyz, r1
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 46 math, 5 textures
Matrix4x4 unity_WorldToLight at 4
Matrix4x4 unity_WorldToShadow at 0
Vector4 _Color at 10
Float _Glossiness at 12
Vector4 _LightColor0 at 9
Vector4 _LightShadowData at 8
Float _Metallic at 11

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_LightTexture0" to slot 3
Set 2D Texture "_LightTextureB0" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToShadow c0       4
//   unity_WorldToLight  c4       4
//   _LightShadowData    c8       1
//   _LightColor0        c9       1
//   _Color              c10      1
//   _Metallic           c11      1
//   _Glossiness         c12      1
//   unity_NHxRoughness  s0       1
//   _ShadowMapTexture   s1       1
//   _MainTex            s2       1
//   _LightTexture0      s3       1
//   _LightTextureB0     s4       1
//

    ps_2_0
    def c13, -0.220916301, 0.220916301, 0.779083729, 1
    def c14, 0.5, 0, 16, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    mov r0.xyz, t5
    mov_pp r0.w, c13.w
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp3 r1.w, r1, r1
    mov r2.xy, r1.w
    dp4 r1.w, c7, r0
    rcp r1.w, r1.w
    mad r1.xy, r1, r1.w, c14.x
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mov_pp r0.x, t2.w
    mov_pp r0.y, t3.w
    mov_pp r0.z, t4.w
    nrm_pp r4.xyz, t4
    dp3_pp r0.w, -t1, r4
    add_pp r0.w, r0.w, r0.w
    mad_pp r5.xyz, r4, -r0.w, -t1
    dp3_pp r0.w, r5, r0
    mul_pp r0.w, r0.w, r0.w
    mul_pp r5.x, r0.w, r0.w
    mov r6, c13
    add_pp r5.y, r6.w, -c12.x
    texld_pp r2, r2, s4
    texld_pp r7, r1, s3
    texldp_pp r3, r3, s1
    texld r5, r5, s0
    texld r8, t0, s2
    mul r0.w, r2.x, r7.w
    cmp r0.w, -r1.z, c14.y, r0.w
    lrp_pp r4.w, r3.x, r6.w, c8.x
    mul_pp r0.w, r0.w, r4.w
    mul_pp r1.xyz, r0.w, c9
    dp3_sat_pp r1.w, r4, r0
    mul_pp r0.xyz, r1.w, r1
    mul_pp r0.w, r5.x, c14.z
    mad_pp r1.xyz, c10, r8, r6.x
    mul_pp r2.xyz, r8, c10
    mad_pp r1.xyz, c11.x, r1, r6.y
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.w, c11.x, -r6.z, r6.z
    mad_pp r1.xyz, r2, r0.w, r1
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c13.w
    mov_pp oC0, r0

// approximately 50 instruction slots used (5 texture, 45 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xy, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 40 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s3
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t2.xyzw, s4
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t4.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: mov r2.x, v3.w
  27: mov r2.y, v4.w
  28: mov r2.z, v5.w
  29: dp3_sat r0.w, r1.xyzx, r2.xyzx
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: dp3 r0.w, -v2.xyzx, r1.xyzx
  32: add r0.w, r0.w, r0.w
  33: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  34: dp3 r0.w, r1.xyzx, r2.xyzx
  35: mul r0.w, r0.w, r0.w
  36: mul r1.x, r0.w, r0.w
  37: add r1.y, -cb0[8].w, l(1.000000)
  38: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  39: mul r0.w, r1.x, l(16.000000)
  40: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  41: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  42: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  43: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  44: mul r2.xyz, r0.wwww, r2.xyzx
  45: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  46: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  47: mul o0.xyz, r0.xyzx, r1.xyzx
  48: mov o0.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 89 math, 2 textures
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 7
Float _GlossMapScale at 9
Vector4 _LightColor0 at 6
Vector4 _LightShadowData at 4
Float _Metallic at 8
Vector4 _WorldSpaceCameraPos at 3
Vector4 unity_ShadowFadeCenterAndType at 5

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _LightShadowData              c4       1
//   unity_ShadowFadeCenterAndType c5       1
//   _LightColor0                  c6       1
//   _Color                        c7       1
//   _Metallic                     c8       1
//   _GlossMapScale                c9       1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//

    ps_3_0
    def c10, -0.220916301, 0.220916301, 0.779083729, 1
    def c11, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c12, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c13, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    add r0.xyz, -c5, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c3.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c5.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c4.z, c4.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mul_pp r0.xyz, r0.x, c6
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c11.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c11.y, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    texld r2, v0, s0
    mov r3, c10
    mad_pp r1.z, r2.w, -c9.x, r3.w
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.w, r2.w, r2.w
    mad_pp r4.x, r0.w, r3.w, -r0.w
    mad_pp r0.w, r4.x, r0.w, c10.w
    mad r0.w, r0.w, r0.w, c12.y
    rcp r0.w, r0.w
    mul r3.w, r3.w, c12.x
    mul_pp r0.w, r0.w, r3.w
    mad_pp r3.w, r1.z, -r1.z, c10.w
    mad_pp r4.x, r1_abs.y, r3.w, r2.w
    mad_pp r2.w, r1.x, r3.w, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c10.w
    mad r2.w, r1.x, r4.x, r2.w
    add r2.w, r2.w, c11.w
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, -c11.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c12.z
    mad r0.w, r0.w, -c12.z, c12.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c13.x, r2.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r4.xyz, c7, r2, r3.x
    mul_pp r2.xyz, r2, c7
    mad_pp r3.xyw, c8.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c13.y, c13.z
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c10.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c11.z
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c10.w, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c10.w
    add_pp r1.y, -r1.x, c10.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c10.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c8.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c10.w

// approximately 89 instruction slots used (2 texture, 87 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  13: mov r5.x, cb4[9].z
  14: mov r5.y, cb4[10].z
  15: mov r5.z, cb4[11].z
  16: dp3 r2.w, r4.xyzx, r5.xyzx
  17: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  18: dp3 r3.w, r4.xyzx, r4.xyzx
  19: sqrt r3.w, r3.w
  20: add r3.w, -r2.w, r3.w
  21: mad r2.w, cb3[25].w, r3.w, r2.w
  22: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  23: eq r3.w, cb5[0].x, l(1.000000)
  24: if_nz r3.w
  25:   eq r4.x, cb5[0].y, l(1.000000)
  26:   mul r4.yzw, v6.yyyy, cb5[2].xxyz
  27:   mad r4.yzw, cb5[1].xxyz, v6.xxxx, r4.yyzw
  28:   mad r4.yzw, cb5[3].xxyz, v6.zzzz, r4.yyzw
  29:   add r4.yzw, r4.yyzw, cb5[4].xxyz
  30:   movc r4.xyz, r4.xxxx, r4.yzwy, v6.xyzx
  31:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  32:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  33:   mad r4.y, r4.y, l(0.250000), l(0.750000)
  34:   mad r5.x, cb5[0].z, l(0.500000), l(0.750000)
  35:   max r4.x, r4.y, r5.x
  36:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  37: else 
  38:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r4.x, r4.xyzw, cb2[45].xyzw
  41: div r4.yz, v7.xxyx, v7.wwww
  42: sample r5.xyzw, r4.yzyy, t1.xyzw, s2
  43: add_sat r2.w, r2.w, r5.x
  44: min r4.x, r2.w, r4.x
  45: movc r2.w, r3.w, r4.x, r2.w
  46: mul r4.xyz, r2.wwww, cb0[2].xyzx
  47: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  52: dp3 r1.w, r6.xyzx, r6.xyzx
  53: max r1.w, r1.w, l(0.001000)
  54: rsq r1.w, r1.w
  55: mul r6.xyz, r1.wwww, r6.xyzx
  56: dp3 r1.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r0.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r1.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r3.x, r0.w, r0.w
  76: mad r0.w, -r0.w, r0.w, l(1.000000)
  77: mad r3.y, |r1.w|, r0.w, r3.x
  78: mad r0.w, r2.w, r0.w, r3.x
  79: mul r0.w, r0.w, |r1.w|
  80: mad r0.w, r2.w, r3.y, r0.w
  81: add r0.w, r0.w, l(0.000010)
  82: div r0.w, l(0.500000), r0.w
  83: mul r1.w, r3.x, r3.x
  84: mad r3.x, r2.x, r1.w, -r2.x
  85: mad r2.x, r3.x, r2.x, l(1.000000)
  86: mul r1.w, r1.w, l(0.318310)
  87: mad r2.x, r2.x, r2.x, l(0.000000)
  88: div r1.w, r1.w, r2.x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r0.w, l(3.141593)
  91: max r0.w, r0.w, l(0.000100)
  92: sqrt r0.w, r0.w
  93: mul r0.w, r2.w, r0.w
  94: dp3 r1.w, r0.xyzx, r0.xyzx
  95: ne r1.w, r1.w, l(0.000000)
  96: and r1.w, r1.w, l(0x3f800000)
  97: mul r0.w, r0.w, r1.w
  98: mul r2.xzw, r2.zzzz, r4.xxyz
  99: mul r3.xyz, r4.xyzx, r0.wwww
 100: add r0.w, -r2.y, l(1.000000)
 101: mul r1.w, r0.w, r0.w
 102: mul r1.w, r1.w, r1.w
 103: mul r0.w, r0.w, r1.w
 104: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 106: mul r0.xyz, r0.xyzx, r3.xyzx
 107: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 108: mov o0.w, l(1.000000)
 109: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 89 math, 2 textures
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 7
Float _Glossiness at 9
Vector4 _LightColor0 at 6
Vector4 _LightShadowData at 4
Float _Metallic at 8
Vector4 _WorldSpaceCameraPos at 3
Vector4 unity_ShadowFadeCenterAndType at 5

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _LightShadowData              c4       1
//   unity_ShadowFadeCenterAndType c5       1
//   _LightColor0                  c6       1
//   _Color                        c7       1
//   _Metallic                     c8       1
//   _Glossiness                   c9       1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//

    ps_3_0
    def c10, -0.220916301, 0.220916301, 0.779083729, 1
    def c11, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c12, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c13, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    add r0.xyz, -c5, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c3.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c5.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c4.z, c4.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mul_pp r0.xyz, r0.x, c6
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c11.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c11.y, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    mov r2, c10
    add_pp r1.z, r2.w, -c9.x
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c10.w
    mad r0.w, r0.w, r0.w, c12.y
    rcp r0.w, r0.w
    mul r3.x, r3.x, c12.x
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.z, -r1.z, c10.w
    mad_pp r3.y, r1_abs.y, r3.x, r2.w
    mad_pp r2.w, r1.x, r3.x, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c10.w
    mad r2.w, r1.x, r3.y, r2.w
    add r2.w, r2.w, c11.w
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, -c11.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c12.z
    mad r0.w, r0.w, -c12.z, c12.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c13.x, r2.w
    mul_pp r0.w, r1.x, r0.w
    texld r3, v0, s0
    mad_pp r4.xyz, c7, r3, r2.x
    mul_pp r3.xyz, r3, c7
    mad_pp r2.xyw, c8.x, r4.xyzz, r2.y
    dp3_pp r3.w, r2.xyww, r2.xyww
    cmp r3.w, -r3.w, c13.y, c13.z
    mul_pp r0.w, r0.w, r3.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c10.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c11.z
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c10.w, r2.xyww
    mul_pp r2.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c10.w
    add_pp r1.y, -r1.x, c10.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c10.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c8.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.xyww
    mov_pp oC0.w, c10.w

// approximately 89 instruction slots used (2 texture, 87 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  13: mov r5.x, cb4[9].z
  14: mov r5.y, cb4[10].z
  15: mov r5.z, cb4[11].z
  16: dp3 r1.w, r4.xyzx, r5.xyzx
  17: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  18: dp3 r2.w, r4.xyzx, r4.xyzx
  19: sqrt r2.w, r2.w
  20: add r2.w, -r1.w, r2.w
  21: mad r1.w, cb3[25].w, r2.w, r1.w
  22: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  23: eq r2.w, cb5[0].x, l(1.000000)
  24: if_nz r2.w
  25:   eq r3.w, cb5[0].y, l(1.000000)
  26:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  27:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  28:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  29:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  30:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  31:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  32:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  33:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  34:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  35:   max r4.x, r3.w, r4.y
  36:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  37: else 
  38:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r3.w, r4.xyzw, cb2[45].xyzw
  41: div r4.xy, v7.xyxx, v7.wwww
  42: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  43: add_sat r1.w, r1.w, r4.x
  44: min r3.w, r1.w, r3.w
  45: movc r1.w, r2.w, r3.w, r1.w
  46: mul r4.xyz, r1.wwww, cb0[2].xyzx
  47: add r1.w, -cb0[8].w, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  52: dp3 r0.w, r6.xyzx, r6.xyzx
  53: max r0.w, r0.w, l(0.001000)
  54: rsq r0.w, r0.w
  55: mul r6.xyz, r0.wwww, r6.xyzx
  56: dp3 r0.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r1.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r0.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r3.x, r1.w, r1.w
  76: mad r1.w, -r1.w, r1.w, l(1.000000)
  77: mad r3.y, |r0.w|, r1.w, r3.x
  78: mad r1.w, r2.w, r1.w, r3.x
  79: mul r0.w, |r0.w|, r1.w
  80: mad r0.w, r2.w, r3.y, r0.w
  81: add r0.w, r0.w, l(0.000010)
  82: div r0.w, l(0.500000), r0.w
  83: mul r1.w, r3.x, r3.x
  84: mad r3.x, r2.x, r1.w, -r2.x
  85: mad r2.x, r3.x, r2.x, l(1.000000)
  86: mul r1.w, r1.w, l(0.318310)
  87: mad r2.x, r2.x, r2.x, l(0.000000)
  88: div r1.w, r1.w, r2.x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r0.w, l(3.141593)
  91: max r0.w, r0.w, l(0.000100)
  92: sqrt r0.w, r0.w
  93: mul r0.w, r2.w, r0.w
  94: dp3 r1.w, r0.xyzx, r0.xyzx
  95: ne r1.w, r1.w, l(0.000000)
  96: and r1.w, r1.w, l(0x3f800000)
  97: mul r0.w, r0.w, r1.w
  98: mul r2.xzw, r2.zzzz, r4.xxyz
  99: mul r3.xyz, r4.xyzx, r0.wwww
 100: add r0.w, -r2.y, l(1.000000)
 101: mul r1.w, r0.w, r0.w
 102: mul r1.w, r1.w, r1.w
 103: mul r0.w, r0.w, r1.w
 104: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 106: mul r0.xyz, r0.xyzx, r3.xyzx
 107: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 108: mov o0.w, l(1.000000)
 109: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE SHADOWS_SCREEN _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 93 math, 3 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x2 unity_WorldToLight at 3
Vector4 _Color at 9
Float _GlossMapScale at 11
Vector4 _LightColor0 at 8
Vector4 _LightShadowData at 6
Float _Metallic at 10
Vector4 _WorldSpaceCameraPos at 5
Vector4 unity_ShadowFadeCenterAndType at 7

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       2
//   _WorldSpaceCameraPos          c5       1
//   _LightShadowData              c6       1
//   unity_ShadowFadeCenterAndType c7       1
//   _LightColor0                  c8       1
//   _Color                        c9       1
//   _Metallic                     c10      1
//   _GlossMapScale                c11      1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c12, -0.220916301, 0.220916301, 0.779083729, 1
    def c13, 1, 0, 0.00100000005, 31.622776
    def c14, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c15, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c5.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c7.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c6.z, c6.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mad r1, v5.xyzx, c13.xxxy, c13.yyyx
    dp4 r2.x, c3, r1
    dp4 r2.y, c4, r1
    texld r1, r2, s2
    mul_pp r0.x, r0.x, r1.w
    mul_pp r0.xyz, r0.x, c8
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c13.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c13.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    texld r2, v0, s0
    mov r3, c12
    mad_pp r1.z, r2.w, -c11.x, r3.w
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.w, r2.w, r2.w
    mad_pp r4.x, r0.w, r3.w, -r0.w
    mad_pp r0.w, r4.x, r0.w, c12.w
    mad r0.w, r0.w, r0.w, c15.x
    rcp r0.w, r0.w
    mul r3.w, r3.w, c14.w
    mul_pp r0.w, r0.w, r3.w
    mad_pp r3.w, r1.z, -r1.z, c12.w
    mad_pp r4.x, r1_abs.y, r3.w, r2.w
    mad_pp r2.w, r1.x, r3.w, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c12.w
    mad r2.w, r1.x, r4.x, r2.w
    add r2.w, r2.w, c14.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c14.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c15.y
    mad r0.w, r0.w, -c15.y, c15.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c15.w, r2.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r4.xyz, c9, r2, r3.x
    mul_pp r2.xyz, r2, c9
    mad_pp r3.xyw, c10.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c13.y, c13.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c12.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c14.x
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c12.w, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c12.w
    add_pp r1.y, -r1.x, c12.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c12.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c10.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp oC0.xyz, r1, r0, r3.xyww
    mov_pp oC0.w, c12.w

// approximately 94 instruction slots used (3 texture, 91 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r2.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r3.w, r5.xyzx, r5.xyzx
  23: sqrt r3.w, r3.w
  24: add r3.w, -r2.w, r3.w
  25: mad r2.w, cb3[25].w, r3.w, r2.w
  26: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  27: eq r3.w, cb5[0].x, l(1.000000)
  28: if_nz r3.w
  29:   eq r4.z, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r4.zzzz, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r4.z, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r4.w, r4.z
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r4.z, r5.xyzw, cb2[45].xyzw
  45: div r5.xy, v7.xyxx, v7.wwww
  46: sample r5.xyzw, r5.xyxx, t1.xyzw, s2
  47: add_sat r2.w, r2.w, r5.x
  48: min r4.z, r2.w, r4.z
  49: movc r2.w, r3.w, r4.z, r2.w
  50: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  51: mul r2.w, r2.w, r4.w
  52: mul r4.xyz, r2.wwww, cb0[2].xyzx
  53: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  58: dp3 r1.w, r6.xyzx, r6.xyzx
  59: max r1.w, r1.w, l(0.001000)
  60: rsq r1.w, r1.w
  61: mul r6.xyz, r1.wwww, r6.xyzx
  62: dp3 r1.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r0.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r1.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r3.x, r0.w, r0.w
  82: mad r0.w, -r0.w, r0.w, l(1.000000)
  83: mad r3.y, |r1.w|, r0.w, r3.x
  84: mad r0.w, r2.w, r0.w, r3.x
  85: mul r0.w, r0.w, |r1.w|
  86: mad r0.w, r2.w, r3.y, r0.w
  87: add r0.w, r0.w, l(0.000010)
  88: div r0.w, l(0.500000), r0.w
  89: mul r1.w, r3.x, r3.x
  90: mad r3.x, r2.x, r1.w, -r2.x
  91: mad r2.x, r3.x, r2.x, l(1.000000)
  92: mul r1.w, r1.w, l(0.318310)
  93: mad r2.x, r2.x, r2.x, l(0.000000)
  94: div r1.w, r1.w, r2.x
  95: mul r0.w, r0.w, r1.w
  96: mul r0.w, r0.w, l(3.141593)
  97: max r0.w, r0.w, l(0.000100)
  98: sqrt r0.w, r0.w
  99: mul r0.w, r2.w, r0.w
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r4.xxyz
 105: mul r3.xyz, r4.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 93 math, 3 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x2 unity_WorldToLight at 3
Vector4 _Color at 9
Float _Glossiness at 11
Vector4 _LightColor0 at 8
Vector4 _LightShadowData at 6
Float _Metallic at 10
Vector4 _WorldSpaceCameraPos at 5
Vector4 unity_ShadowFadeCenterAndType at 7

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       2
//   _WorldSpaceCameraPos          c5       1
//   _LightShadowData              c6       1
//   unity_ShadowFadeCenterAndType c7       1
//   _LightColor0                  c8       1
//   _Color                        c9       1
//   _Metallic                     c10      1
//   _Glossiness                   c11      1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c12, -0.220916301, 0.220916301, 0.779083729, 1
    def c13, 1, 0, 0.00100000005, 31.622776
    def c14, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c15, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c5.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c7.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c6.z, c6.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mad r1, v5.xyzx, c13.xxxy, c13.yyyx
    dp4 r2.x, c3, r1
    dp4 r2.y, c4, r1
    texld r1, r2, s2
    mul_pp r0.x, r0.x, r1.w
    mul_pp r0.xyz, r0.x, c8
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c13.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c13.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    mov r2, c12
    add_pp r1.z, r2.w, -c11.x
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c12.w
    mad r0.w, r0.w, r0.w, c15.x
    rcp r0.w, r0.w
    mul r3.x, r3.x, c14.w
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.z, -r1.z, c12.w
    mad_pp r3.y, r1_abs.y, r3.x, r2.w
    mad_pp r2.w, r1.x, r3.x, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c12.w
    mad r2.w, r1.x, r3.y, r2.w
    add r2.w, r2.w, c14.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c14.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c15.y
    mad r0.w, r0.w, -c15.y, c15.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c15.w, r2.w
    mul_pp r0.w, r1.x, r0.w
    texld r3, v0, s0
    mad_pp r4.xyz, c9, r3, r2.x
    mul_pp r3.xyz, r3, c9
    mad_pp r2.xyw, c10.x, r4.xyzz, r2.y
    dp3_pp r3.w, r2.xyww, r2.xyww
    cmp r3.w, -r3.w, c13.y, c13.x
    mul_pp r0.w, r0.w, r3.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c12.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c14.x
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c12.w, r2.xyww
    mul_pp r2.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c12.w
    add_pp r1.y, -r1.x, c12.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c12.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c10.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp oC0.xyz, r1, r0, r2.xyww
    mov_pp oC0.w, c12.w

// approximately 94 instruction slots used (3 texture, 91 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r1.xyzx
  20: mov r2.w, l(0)
  21: mov o3.xyzw, r2.wwwx
  22: mov o4.xyzw, r2.wwwy
  23: mov o5.w, r2.z
  24: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r1.w, r1.xyzx, r1.xyzx
  28: rsq r1.w, r1.w
  29: mul o5.xyz, r1.wwww, r1.xyzx
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb5[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb5[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.z
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: div r4.zw, v7.xxxy, v7.wwww
  46: sample r5.xyzw, r4.zwzz, t1.xyzw, s2
  47: add_sat r1.w, r1.w, r5.x
  48: min r3.w, r1.w, r3.w
  49: movc r1.w, r2.w, r3.w, r1.w
  50: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  51: mul r1.w, r1.w, r4.w
  52: mul r4.xyz, r1.wwww, cb0[2].xyzx
  53: add r1.w, -cb0[8].w, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  58: dp3 r0.w, r6.xyzx, r6.xyzx
  59: max r0.w, r0.w, l(0.001000)
  60: rsq r0.w, r0.w
  61: mul r6.xyz, r0.wwww, r6.xyzx
  62: dp3 r0.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r1.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r0.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r3.x, r1.w, r1.w
  82: mad r1.w, -r1.w, r1.w, l(1.000000)
  83: mad r3.y, |r0.w|, r1.w, r3.x
  84: mad r1.w, r2.w, r1.w, r3.x
  85: mul r0.w, |r0.w|, r1.w
  86: mad r0.w, r2.w, r3.y, r0.w
  87: add r0.w, r0.w, l(0.000010)
  88: div r0.w, l(0.500000), r0.w
  89: mul r1.w, r3.x, r3.x
  90: mad r3.x, r2.x, r1.w, -r2.x
  91: mad r2.x, r3.x, r2.x, l(1.000000)
  92: mul r1.w, r1.w, l(0.318310)
  93: mad r2.x, r2.x, r2.x, l(0.000000)
  94: div r1.w, r1.w, r2.x
  95: mul r0.w, r0.w, r1.w
  96: mul r0.w, r0.w, l(3.141593)
  97: max r0.w, r0.w, l(0.000100)
  98: sqrt r0.w, r0.w
  99: mul r0.w, r2.w, r0.w
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r4.xxyz
 105: mul r3.xyz, r4.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    nrm r0.xyz, r1
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 41 math, 4 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 6
Float _GlossMapScale at 8
Vector4 _LightColor0 at 5
Vector4 _LightPositionRange at 3
Vector4 _LightShadowData at 4
Float _Metallic at 7

Set 2D Texture "unity_NHxRoughness" to slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_LightTexture0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToLight  c0       3
//   _LightPositionRange c3       1
//   _LightShadowData    c4       1
//   _LightColor0        c5       1
//   _Color              c6       1
//   _Metallic           c7       1
//   _GlossMapScale      c8       1
//   unity_NHxRoughness  s0       1
//   _ShadowMapTexture   s1       1
//   _MainTex            s2       1
//   _LightTexture0      s3       1
//

    ps_2_0
    def c9, -0.220916301, 0.220916301, 0.779083729, 1
    def c10, 0.970000029, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t0, s2
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, -t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, -t1
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    dp3_pp r1.w, r2, r3
    dp3_sat_pp r1.x, r1, r3
    mul_pp r1.y, r1.w, r1.w
    mul_pp r2.x, r1.y, r1.y
    mov r3, c9
    mad_pp r2.y, r0.w, -c8.x, r3.w
    add r4.xyz, t5, -c3
    mov r5.xyz, t5
    mov_pp r5.w, c9.w
    dp4 r6.x, c0, r5
    dp4 r6.y, c1, r5
    dp4 r6.z, c2, r5
    dp3 r5.xy, r6, r6
    texld r2, r2, s0
    texld r6, r4, s1
    texld r5, r5, s3
    mul_pp r0.w, r2.x, c10.y
    mad_pp r1.yzw, c6.wzyx, r0.wzyx, r3.x
    mul_pp r0.xyz, r0, c6
    mad_pp r1.yzw, c7.x, r1, r3.y
    mul_pp r1.yzw, r0.w, r1
    mad_pp r0.w, c7.x, -r3.z, r3.z
    mad_pp r0.xyz, r0, r0.w, r1.wzyx
    dp3 r0.w, r4, r4
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c3.w
    mad r0.w, r0.w, -c10.x, r6.x
    cmp_pp r0.w, r0.w, r3.w, c4.x
    mul_pp r0.w, r0.w, r5.x
    mul_pp r1.yzw, r0.w, c5.wzyx
    mul_pp r1.xyz, r1.x, r1.wzyx
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c9.w
    mov_pp oC0, r0

// approximately 45 instruction slots used (4 texture, 41 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xy, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 33 math, 3 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  14: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  15: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  16: mul r0.y, r1.x, l(16.000000)
  17: mad r1.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  19: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r1.xxyz
  21: mad r1.x, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r2.xxyz, r1.xxxx, r0.yyzw
  23: add r1.xyz, v6.xyzx, -cb1[1].xyzx
  24: dp3 r1.w, r1.xyzx, r1.xyzx
  25: sample_l r2.xyzw, r1.xyzx, t1.xyzw, s1, l(0.000000)
  26: sqrt r1.x, r1.w
  27: mul r1.x, r1.x, cb1[1].w
  28: mul r1.x, r1.x, l(0.970000)
  29: lt r1.x, r2.x, r1.x
  30: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  31: mul r1.yzw, v6.yyyy, cb0[12].xxyz
  32: mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
  33: mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
  34: add r1.yzw, r1.yyzw, cb0[14].xxyz
  35: dp3 r1.y, r1.yzwy, r1.yzwy
  36: sample r2.xyzw, r1.yyyy, t2.xyzw, s3
  37: mul r1.x, r1.x, r2.x
  38: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  39: mul r1.xyz, r0.xxxx, r1.xyzx
  40: mul o0.xyz, r0.yzwy, r1.xyzx
  41: mov o0.w, l(1.000000)
  42: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    nrm r0.xyz, r1
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 41 math, 4 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 6
Float _Glossiness at 8
Vector4 _LightColor0 at 5
Vector4 _LightPositionRange at 3
Vector4 _LightShadowData at 4
Float _Metallic at 7

Set 2D Texture "unity_NHxRoughness" to slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_LightTexture0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToLight  c0       3
//   _LightPositionRange c3       1
//   _LightShadowData    c4       1
//   _LightColor0        c5       1
//   _Color              c6       1
//   _Metallic           c7       1
//   _Glossiness         c8       1
//   unity_NHxRoughness  s0       1
//   _ShadowMapTexture   s1       1
//   _MainTex            s2       1
//   _LightTexture0      s3       1
//

    ps_2_0
    def c9, -0.220916301, 0.220916301, 0.779083729, 1
    def c10, 0.970000029, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c9
    add_pp r1.y, r2.w, -c8.x
    add r3.xyz, t5, -c3
    mov r4.xyz, t5
    mov_pp r4.w, c9.w
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r4.xy, r5, r5
    texld r1, r1, s0
    texld r5, t0, s2
    texld r6, r3, s1
    texld r4, r4, s3
    mul_pp r3.w, r1.x, c10.y
    mad_pp r0.yzw, c6.wzyx, r5.wzyx, r2.x
    mul_pp r1.xyz, r5, c6
    mad_pp r0.yzw, c7.x, r0, r2.y
    mul_pp r0.yzw, r0, r3.w
    mad_pp r1.w, c7.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    dp3 r1.x, r3, r3
    rsq r1.x, r1.x
    rcp r1.x, r1.x
    mul r1.x, r1.x, c3.w
    mad r1.x, r1.x, -c10.x, r6.x
    cmp_pp r1.x, r1.x, r2.w, c4.x
    mul_pp r1.x, r1.x, r4.x
    mul_pp r1.xyz, r1.x, c5
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_pp r0.w, c9.w
    mov_pp oC0, r0

// approximately 45 instruction slots used (4 texture, 41 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xy, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 33 math, 3 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: add r1.xyz, v6.xyzx, -cb1[1].xyzx
  24: dp3 r1.w, r1.xyzx, r1.xyzx
  25: sample_l r2.xyzw, r1.xyzx, t1.xyzw, s1, l(0.000000)
  26: sqrt r1.x, r1.w
  27: mul r1.x, r1.x, cb1[1].w
  28: mul r1.x, r1.x, l(0.970000)
  29: lt r1.x, r2.x, r1.x
  30: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  31: mul r1.yzw, v6.yyyy, cb0[12].xxyz
  32: mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
  33: mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
  34: add r1.yzw, r1.yyzw, cb0[14].xxyz
  35: dp3 r1.y, r1.yzwy, r1.yzwy
  36: sample r2.xyzw, r1.yyyy, t2.xyzw, s3
  37: mul r1.x, r1.x, r2.x
  38: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  39: mul r1.xyz, r0.xxxx, r1.xyzx
  40: mul o0.xyz, r0.yzwy, r1.xyzx
  41: mov o0.w, l(1.000000)
  42: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    nrm r0.xyz, r1
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 42 math, 5 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 6
Float _GlossMapScale at 8
Vector4 _LightColor0 at 5
Vector4 _LightPositionRange at 3
Vector4 _LightShadowData at 4
Float _Metallic at 7

Set 2D Texture "unity_NHxRoughness" to slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set CUBE Texture "_LightTexture0" to slot 3
Set 2D Texture "_LightTextureB0" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToLight  c0       3
//   _LightPositionRange c3       1
//   _LightShadowData    c4       1
//   _LightColor0        c5       1
//   _Color              c6       1
//   _Metallic           c7       1
//   _GlossMapScale      c8       1
//   unity_NHxRoughness  s0       1
//   _ShadowMapTexture   s1       1
//   _MainTex            s2       1
//   _LightTexture0      s3       1
//   _LightTextureB0     s4       1
//

    ps_2_0
    def c9, -0.220916301, 0.220916301, 0.779083729, 1
    def c10, 0.970000029, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    texld r0, t0, s2
    mov r1.xyz, t5
    mov_pp r1.w, c9.w
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp3 r1.xy, r2, r2
    add r3.xyz, t5, -c3
    mov_pp r4.x, t2.w
    mov_pp r4.y, t3.w
    mov_pp r4.z, t4.w
    nrm_pp r5.xyz, t4
    dp3_pp r2.w, -t1, r5
    add_pp r2.w, r2.w, r2.w
    mad_pp r6.xyz, r5, -r2.w, -t1
    dp3_pp r2.w, r6, r4
    mul_pp r2.w, r2.w, r2.w
    mul_pp r6.x, r2.w, r2.w
    mov r7, c9
    mad_pp r6.y, r0.w, -c8.x, r7.w
    texld r2, r2, s3
    texld r1, r1, s4
    texld r8, r3, s1
    texld r6, r6, s0
    mul r0.w, r2.w, r1.x
    dp3 r4.w, r3, r3
    rsq r4.w, r4.w
    rcp r4.w, r4.w
    mul r4.w, r4.w, c3.w
    mad r4.w, r4.w, -c10.x, r8.x
    cmp_pp r4.w, r4.w, r7.w, c4.x
    mul_pp r0.w, r0.w, r4.w
    mul_pp r1.xyz, r0.w, c5
    dp3_sat_pp r0.w, r5, r4
    mul_pp r1.xyz, r0.w, r1
    mul_pp r0.w, r6.x, c10.y
    mad_pp r2.xyz, c6, r0, r7.x
    mul_pp r0.xyz, r0, c6
    mad_pp r2.xyz, c7.x, r2, r7.y
    mul_pp r2.xyz, r0.w, r2
    mad_pp r0.w, c7.x, -r7.z, r7.z
    mad_pp r0.xyz, r0, r0.w, r2
    mul_pp r0.xyz, r1, r0
    mov_pp r0.w, c9.w
    mov_pp oC0, r0

// approximately 47 instruction slots used (5 texture, 42 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xy, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 34 math, 4 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  14: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  15: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  16: mul r0.y, r1.x, l(16.000000)
  17: mad r1.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  19: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r1.xxyz
  21: mad r1.x, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r2.xxyz, r1.xxxx, r0.yyzw
  23: add r1.xyz, v6.xyzx, -cb1[1].xyzx
  24: dp3 r1.w, r1.xyzx, r1.xyzx
  25: sample_l r2.xyzw, r1.xyzx, t1.xyzw, s1, l(0.000000)
  26: sqrt r1.x, r1.w
  27: mul r1.x, r1.x, cb1[1].w
  28: mul r1.x, r1.x, l(0.970000)
  29: lt r1.x, r2.x, r1.x
  30: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  31: mul r1.yzw, v6.yyyy, cb0[12].xxyz
  32: mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
  33: mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
  34: add r1.yzw, r1.yyzw, cb0[14].xxyz
  35: dp3 r2.x, r1.yzwy, r1.yzwy
  36: sample r3.xyzw, r1.yzwy, t3.xyzw, s3
  37: sample r2.xyzw, r2.xxxx, t2.xyzw, s4
  38: mul r1.y, r3.w, r2.x
  39: mul r1.x, r1.x, r1.y
  40: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  41: mul r1.xyz, r0.xxxx, r1.xyzx
  42: mul o0.xyz, r0.yzwy, r1.xyzx
  43: mov o0.w, l(1.000000)
  44: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    nrm r0.xyz, r1
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 42 math, 5 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 6
Float _Glossiness at 8
Vector4 _LightColor0 at 5
Vector4 _LightPositionRange at 3
Vector4 _LightShadowData at 4
Float _Metallic at 7

Set 2D Texture "unity_NHxRoughness" to slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set CUBE Texture "_LightTexture0" to slot 3
Set 2D Texture "_LightTextureB0" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToLight  c0       3
//   _LightPositionRange c3       1
//   _LightShadowData    c4       1
//   _LightColor0        c5       1
//   _Color              c6       1
//   _Metallic           c7       1
//   _Glossiness         c8       1
//   unity_NHxRoughness  s0       1
//   _ShadowMapTexture   s1       1
//   _MainTex            s2       1
//   _LightTexture0      s3       1
//   _LightTextureB0     s4       1
//

    ps_2_0
    def c9, -0.220916301, 0.220916301, 0.779083729, 1
    def c10, 0.970000029, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    mov r0.xyz, t5
    mov_pp r0.w, c9.w
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp3 r0.xy, r1, r1
    add r2.xyz, t5, -c3
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    nrm_pp r4.xyz, t4
    dp3_pp r1.w, -t1, r4
    add_pp r1.w, r1.w, r1.w
    mad_pp r5.xyz, r4, -r1.w, -t1
    dp3_pp r1.w, r5, r3
    mul_pp r1.w, r1.w, r1.w
    mul_pp r5.x, r1.w, r1.w
    mov r6, c9
    add_pp r5.y, r6.w, -c8.x
    texld r1, r1, s3
    texld r0, r0, s4
    texld r7, r2, s1
    texld r5, r5, s0
    texld r8, t0, s2
    mul r2.w, r1.w, r0.x
    dp3 r3.w, r2, r2
    rsq r3.w, r3.w
    rcp r3.w, r3.w
    mul r3.w, r3.w, c3.w
    mad r3.w, r3.w, -c10.x, r7.x
    cmp_pp r3.w, r3.w, r6.w, c4.x
    mul_pp r3.w, r2.w, r3.w
    mul_pp r0.xyz, r3.w, c5
    dp3_sat_pp r0.w, r4, r3
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.w, r5.x, c10.y
    mad_pp r1.xyz, c6, r8, r6.x
    mul_pp r2.xyz, r8, c6
    mad_pp r1.xyz, c7.x, r1, r6.y
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.w, c7.x, -r6.z, r6.z
    mad_pp r1.xyz, r2, r0.w, r1
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c9.w
    mov_pp oC0, r0

// approximately 47 instruction slots used (5 texture, 42 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xy, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 34 math, 4 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: add r1.xyz, v6.xyzx, -cb1[1].xyzx
  24: dp3 r1.w, r1.xyzx, r1.xyzx
  25: sample_l r2.xyzw, r1.xyzx, t1.xyzw, s1, l(0.000000)
  26: sqrt r1.x, r1.w
  27: mul r1.x, r1.x, cb1[1].w
  28: mul r1.x, r1.x, l(0.970000)
  29: lt r1.x, r2.x, r1.x
  30: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  31: mul r1.yzw, v6.yyyy, cb0[12].xxyz
  32: mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
  33: mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
  34: add r1.yzw, r1.yyzw, cb0[14].xxyz
  35: dp3 r2.x, r1.yzwy, r1.yzwy
  36: sample r3.xyzw, r1.yzwy, t3.xyzw, s3
  37: sample r2.xyzw, r2.xxxx, t2.xyzw, s4
  38: mul r1.y, r3.w, r2.x
  39: mul r1.x, r1.x, r1.y
  40: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  41: mul r1.xyz, r0.xxxx, r1.xyzx
  42: mul o0.xyz, r0.yzwy, r1.xyzx
  43: mov o0.w, l(1.000000)
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 14
Vector4 _MainTex_ST at 13
Float _UVSec at 15
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   _MainTex_ST          c13      1
//   _DetailAlbedoMap_ST  c14      1
//   _UVSec               c15      1
//

    vs_2_0
    def c16, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c16.xxxy, c16.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad oT0.xy, v2, c13, c13.zwzw
    mul r0.x, c15.x, c15.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad oT0.zw, r2.xyxy, c14.xyxy, c14
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add r1.xyz, r0, -c11
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT1.xyz, r0.w, r1
    mul r1.xyz, v1.y, c9
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul oT4.xyz, r0.w, r1
    mad r1.xyz, r0, -c12.w, c12
    mov oT5.xyz, r0
    nrm r0.xyz, r1
    mov r0.w, c16.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c16.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 33 math, 3 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 4
Float _GlossMapScale at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _GlossMapScale     c6       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//

    ps_2_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t0, s1
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, -t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, -t1
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    dp3_pp r1.w, r2, r3
    dp3_sat_pp r1.x, r1, r3
    mul_pp r1.y, r1.w, r1.w
    mul_pp r2.x, r1.y, r1.y
    mov r3, c7
    mad_pp r2.y, r0.w, -c6.x, r3.w
    mov r4.xyz, t5
    mov_pp r4.w, c7.w
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r4.xy, r5, r5
    texld r2, r2, s0
    texld_pp r4, r4, s2
    mul_pp r0.w, r2.x, c8.x
    mad_pp r1.yzw, c4.wzyx, r0.wzyx, r3.x
    mul_pp r0.xyz, r0, c4
    mad_pp r1.yzw, c5.x, r1, r3.y
    mul_pp r1.yzw, r0.w, r1
    mad_pp r0.w, c5.x, -r3.z, r3.z
    mad_pp r0.xyz, r0, r0.w, r1.wzyx
    mul_pp r1.yzw, r4.x, c3.wzyx
    mul_pp r1.xyz, r1.x, r1.wzyx
    mul_pp r0.xyz, r0, r1
    mov_pp r0.w, c7.w
    mov_pp oC0, r0

// approximately 36 instruction slots used (3 texture, 33 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r0.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r0.xyz, r0.xxxx, r1.xyzx
  25: mov r0.w, l(0)
  26: mov o3.xyzw, r0.wwwx
  27: mov o4.xyzw, r0.wwwy
  28: mov o5.w, r0.z
  29: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xy, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 39 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r2.x, v5.xyzx, v5.xyzx
   6: rsq r2.x, r2.x
   7: mul r2.xyz, r2.xxxx, v5.xyzx
   8: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   9: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[14].xyzx
  12: eq r2.w, cb2[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r2.w, r3.w
  25:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r4.xyzw, cb1[45].xyzw
  30: dp3 r3.x, r3.xyzx, r3.xyzx
  31: sample r3.xyzw, r3.xxxx, t1.xyzw, s3
  32: mul r2.w, r2.w, r3.x
  33: mul r3.xyz, r2.wwww, cb0[2].xyzx
  34: dp3 r2.w, -v2.xyzx, r2.xyzx
  35: add r2.w, r2.w, r2.w
  36: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  37: mov r5.x, v3.w
  38: mov r5.y, v4.w
  39: mov r5.z, v5.w
  40: dp3_sat r2.x, r2.xyzx, r5.xyzx
  41: dp3 r2.y, r4.xyzx, r5.xyzx
  42: mul r2.y, r2.y, r2.y
  43: mul r4.x, r2.y, r2.y
  44: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  45: sample r4.xyzw, r4.xyxx, t2.xyzw, s1
  46: mul r0.w, r4.x, l(16.000000)
  47: mul r0.xyz, r0.xyzx, r0.wwww
  48: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  49: mul r1.xyz, r2.xxxx, r3.xyzx
  50: mul o0.xyz, r0.xyzx, r1.xyzx
  51: mov o0.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    nrm r1.xyz, r0
    mov r1.w, c17.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 35 math, 3 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 4
Float _Glossiness at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _Glossiness        c6       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//

    ps_2_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c7
    add_pp r1.y, r2.w, -c6.x
    mov r3.xyz, t5
    mov_pp r3.w, c7.w
    dp4 r4.x, c0, r3
    dp4 r4.y, c1, r3
    dp4 r4.z, c2, r3
    dp3 r3.xy, r4, r4
    texld r1, r1, s0
    texld r4, t0, s1
    texld_pp r3, r3, s2
    mul_pp r2.w, r1.x, c8.x
    mad_pp r0.yzw, c4.wzyx, r4.wzyx, r2.x
    mul_pp r1.xyz, r4, c4
    mad_pp r0.yzw, c5.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c5.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul_pp r1.xyz, r3.x, c3
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c7.w
    mov_pp oC0, r0

// approximately 38 instruction slots used (3 texture, 35 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: dp3 r0.x, r1.xyzx, r1.xyzx
  29: rsq r0.x, r0.x
  30: mul r0.xyz, r0.xxxx, r1.xyzx
  31: mov r0.w, l(0)
  32: mov o3.xyzw, r0.wwwx
  33: mov o4.xyzw, r0.wwwy
  34: mov o5.w, r0.z
  35: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: rsq r0.w, r0.w
  40: mul o5.xyz, r0.wwww, r0.xyzx
  41: mov o7.xy, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 40 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   9: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[14].xyzx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[45].xyzw
  30: dp3 r2.w, r3.xyzx, r3.xyzx
  31: sample r3.xyzw, r2.wwww, t1.xyzw, s3
  32: mul r1.w, r1.w, r3.x
  33: mul r3.xyz, r1.wwww, cb0[2].xyzx
  34: dp3 r1.w, -v2.xyzx, r2.xyzx
  35: add r1.w, r1.w, r1.w
  36: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  37: mov r5.x, v3.w
  38: mov r5.y, v4.w
  39: mov r5.z, v5.w
  40: dp3_sat r1.w, r2.xyzx, r5.xyzx
  41: dp3 r2.x, r4.xyzx, r5.xyzx
  42: mul r2.x, r2.x, r2.x
  43: mul r2.x, r2.x, r2.x
  44: add r2.y, -cb0[8].w, l(1.000000)
  45: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  46: mul r2.x, r2.x, l(16.000000)
  47: mul r0.xyz, r0.xyzx, r2.xxxx
  48: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  49: mul r1.xyz, r1.wwww, r3.xyzx
  50: mul r0.xyz, r0.xyzx, r1.xyzx
  51: mov_sat r0.w, v7.z
  52: mul o0.xyz, r0.xyzx, r0.wwww
  53: mov o0.w, l(1.000000)
  54: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    mov r0.w, c17.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 28 math, 2 textures
Vector4 _Color at 1
Float _GlossMapScale at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   _LightColor0       c0       1
//   _Color             c1       1
//   _Metallic          c2       1
//   _GlossMapScale     c3       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//

    ps_2_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t7.x
    dcl_2d s0
    dcl_2d s1
    texld r0, t0, s1
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, -t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, -t1
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    dp3_pp r1.w, r2, r3
    dp3_sat_pp r1.x, r1, r3
    mul_pp r1.xyz, r1.x, c0
    mul_pp r1.w, r1.w, r1.w
    mul_pp r2.x, r1.w, r1.w
    mov r3, c4
    mad_pp r2.y, r0.w, -c3.x, r3.w
    texld r2, r2, s0
    mul_pp r0.w, r2.x, c5.x
    mad_pp r2.xyz, c1, r0, r3.x
    mul_pp r0.xyz, r0, c1
    mad_pp r2.xyz, c2.x, r2, r3.y
    mul_pp r2.xyz, r0.w, r2
    mad_pp r0.w, c2.x, -r3.z, r3.z
    mad_pp r0.xyz, r0, r0.w, r2
    mul_pp r0.xyz, r1, r0
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c4.w
    mov_pp oC0, r0

// approximately 30 instruction slots used (2 texture, 28 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 31 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: mov r1.w, l(0)
  29: mov o3.xyzw, r1.wwwx
  30: mov o4.xyzw, r1.wwwy
  31: mov o5.w, r1.z
  32: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  33: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  34: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  35: dp3 r0.w, r0.xyzx, r0.xyzx
  36: rsq r0.w, r0.w
  37: mul o5.xyz, r0.wwww, r0.xyzx
  38: mov o7.xy, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 34 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r2.x, v5.xyzx, v5.xyzx
   6: rsq r2.x, r2.x
   7: mul r2.xyz, r2.xxxx, v5.xyzx
   8: eq r2.w, cb2[0].x, l(1.000000)
   9: if_nz r2.w
  10:   eq r2.w, cb2[0].y, l(1.000000)
  11:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  12:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  13:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  14:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  15:   movc r3.xyz, r2.wwww, r3.xyzx, v6.xyzx
  16:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  17:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  18:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  19:   mad r3.y, cb2[0].z, l(0.500000), l(0.750000)
  20:   max r3.x, r2.w, r3.y
  21:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  22: else 
  23:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  24: endif 
  25: dp4_sat r2.w, r3.xyzw, cb1[45].xyzw
  26: mul r3.xyz, r2.wwww, cb0[2].xyzx
  27: dp3 r2.w, -v2.xyzx, r2.xyzx
  28: add r2.w, r2.w, r2.w
  29: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  30: mov r5.x, v3.w
  31: mov r5.y, v4.w
  32: mov r5.z, v5.w
  33: dp3_sat r2.x, r2.xyzx, r5.xyzx
  34: dp3 r2.y, r4.xyzx, r5.xyzx
  35: mul r2.y, r2.y, r2.y
  36: mul r4.x, r2.y, r2.y
  37: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  38: sample r4.xyzw, r4.xyxx, t1.xyzw, s1
  39: mul r0.w, r4.x, l(16.000000)
  40: mul r0.xyz, r0.xyzx, r0.wwww
  41: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  42: mul r1.xyz, r2.xxxx, r3.xyzx
  43: mul r0.xyz, r0.xyzx, r1.xyzx
  44: mov_sat r0.w, v7.z
  45: mul o0.xyz, r0.xyzx, r0.wwww
  46: mov o0.w, l(1.000000)
  47: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    mov r0.w, c17.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 28 math, 2 textures
Vector4 _Color at 1
Float _Glossiness at 3
Vector4 _LightColor0 at 0
Float _Metallic at 2

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   _LightColor0       c0       1
//   _Color             c1       1
//   _Metallic          c2       1
//   _Glossiness        c3       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//

    ps_2_0
    def c4, -0.220916301, 0.220916301, 0.779083729, 1
    def c5, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t7.x
    dcl_2d s0
    dcl_2d s1
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.xyz, r0.x, c0
    mul_pp r0.w, r0.w, r0.w
    mul_pp r1.x, r0.w, r0.w
    mov r2, c4
    add_pp r1.y, r2.w, -c3.x
    texld r1, r1, s0
    texld r3, t0, s1
    mul_pp r0.w, r1.x, c5.x
    mad_pp r1.xyz, c1, r3, r2.x
    mul_pp r3.xyz, r3, c1
    mad_pp r1.xyz, c2.x, r1, r2.y
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.w, c2.x, -r2.z, r2.z
    mad_pp r1.xyz, r3, r0.w, r1
    mul_pp r0.xyz, r0, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c4.w
    mov_pp oC0, r0

// approximately 30 instruction slots used (2 texture, 28 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 31 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: mov r1.w, l(0)
  29: mov o3.xyzw, r1.wwwx
  30: mov o4.xyzw, r1.wwwy
  31: mov o5.w, r1.z
  32: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  33: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  34: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  35: dp3 r0.w, r0.xyzx, r0.xyzx
  36: rsq r0.w, r0.w
  37: mul o5.xyz, r0.wwww, r0.xyzx
  38: mov o7.xy, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 34 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: eq r1.w, cb2[0].x, l(1.000000)
   9: if_nz r1.w
  10:   eq r1.w, cb2[0].y, l(1.000000)
  11:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  12:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  13:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  14:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  15:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  16:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  17:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  18:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  19:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  20:   max r3.x, r1.w, r2.w
  21:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  22: else 
  23:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  24: endif 
  25: dp4_sat r1.w, r3.xyzw, cb1[45].xyzw
  26: mul r3.xyz, r1.wwww, cb0[2].xyzx
  27: dp3 r1.w, -v2.xyzx, r2.xyzx
  28: add r1.w, r1.w, r1.w
  29: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  30: mov r5.x, v3.w
  31: mov r5.y, v4.w
  32: mov r5.z, v5.w
  33: dp3_sat r1.w, r2.xyzx, r5.xyzx
  34: dp3 r2.x, r4.xyzx, r5.xyzx
  35: mul r2.x, r2.x, r2.x
  36: mul r2.x, r2.x, r2.x
  37: add r2.y, -cb0[8].w, l(1.000000)
  38: sample r2.xyzw, r2.xyxx, t1.xyzw, s1
  39: mul r2.x, r2.x, l(16.000000)
  40: mul r0.xyz, r0.xyzx, r2.xxxx
  41: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  42: mul r1.xyz, r1.wwww, r3.xyzx
  43: mul r0.xyz, r0.xyzx, r1.xyzx
  44: mov_sat r0.w, v7.z
  45: mul o0.xyz, r0.xyzx, r0.wwww
  46: mov o0.w, l(1.000000)
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    nrm r1.xyz, r0
    mov r1.w, c17.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 40 math, 4 textures
Matrix4x4 unity_WorldToLight at 0
Vector4 _Color at 5
Float _GlossMapScale at 7
Vector4 _LightColor0 at 4
Float _Metallic at 6

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       4
//   _LightColor0       c4       1
//   _Color             c5       1
//   _Metallic          c6       1
//   _GlossMapScale     c7       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//   _LightTextureB0    s3       1
//

    ps_2_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 0.5, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t0, s1
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, -t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, -t1
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    dp3_pp r1.w, r2, r3
    dp3_sat_pp r1.x, r1, r3
    mul_pp r1.y, r1.w, r1.w
    mul_pp r2.x, r1.y, r1.y
    mov r3, c8
    mad_pp r2.y, r0.w, -c7.x, r3.w
    mov r4.xyz, t5
    mov r4.w, c8.w
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp4 r0.w, c3, r4
    rcp r0.w, r0.w
    mad r4.xy, r5, r0.w, c9.x
    dp3 r5.xy, r5, r5
    texld r2, r2, s0
    texld_pp r4, r4, s2
    texld_pp r6, r5, s3
    mul_pp r0.w, r2.x, c9.y
    mad_pp r1.yzw, c5.wzyx, r0.wzyx, r3.x
    mul_pp r0.xyz, r0, c5
    mad_pp r1.yzw, c6.x, r1, r3.y
    mul_pp r1.yzw, r0.w, r1
    mad_pp r0.w, c6.x, -r3.z, r3.z
    mad_pp r0.xyz, r0, r0.w, r1.wzyx
    mul r0.w, r4.w, r6.x
    mul_pp r1.yzw, r0.w, c4.wzyx
    mul_pp r1.xyz, r1.x, r1.wzyx
    cmp_pp r1.xyz, -r5.z, c9.z, r1
    mul_pp r0.xyz, r0, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov r0.w, c8.w
    mov_pp oC0, r0

// approximately 44 instruction slots used (4 texture, 40 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: dp3 r0.x, r1.xyzx, r1.xyzx
  29: rsq r0.x, r0.x
  30: mul r0.xyz, r0.xxxx, r1.xyzx
  31: mov r0.w, l(0)
  32: mov o3.xyzw, r0.wwwx
  33: mov o4.xyzw, r0.wwwy
  34: mov o5.w, r0.z
  35: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: rsq r0.w, r0.w
  40: mul o5.xyz, r0.wwww, r0.xyzx
  41: mov o7.xy, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 46 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r2.x, v5.xyzx, v5.xyzx
   6: rsq r2.x, r2.x
   7: mul r2.xyz, r2.xxxx, v5.xyzx
   8: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
   9: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  10: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  11: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  12: eq r2.w, cb2[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r4.y, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r2.w, r4.y
  25:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r4.xyzw, cb1[45].xyzw
  30: lt r4.x, l(0.000000), r3.z
  31: and r4.x, r4.x, l(0x3f800000)
  32: div r4.yz, r3.xxyx, r3.wwww
  33: add r4.yz, r4.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  34: sample r5.xyzw, r4.yzyy, t1.xyzw, s3
  35: mul r3.w, r4.x, r5.w
  36: dp3 r3.x, r3.xyzx, r3.xyzx
  37: sample r4.xyzw, r3.xxxx, t2.xyzw, s4
  38: mul r3.x, r3.w, r4.x
  39: mul r2.w, r2.w, r3.x
  40: mul r3.xyz, r2.wwww, cb0[2].xyzx
  41: dp3 r2.w, -v2.xyzx, r2.xyzx
  42: add r2.w, r2.w, r2.w
  43: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  44: mov r5.x, v3.w
  45: mov r5.y, v4.w
  46: mov r5.z, v5.w
  47: dp3_sat r2.x, r2.xyzx, r5.xyzx
  48: dp3 r2.y, r4.xyzx, r5.xyzx
  49: mul r2.y, r2.y, r2.y
  50: mul r4.x, r2.y, r2.y
  51: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  52: sample r4.xyzw, r4.xyxx, t3.xyzw, s1
  53: mul r0.w, r4.x, l(16.000000)
  54: mul r0.xyz, r0.xyzx, r0.wwww
  55: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  56: mul r1.xyz, r2.xxxx, r3.xyzx
  57: mul r0.xyz, r0.xyzx, r1.xyzx
  58: mov_sat r0.w, v7.z
  59: mul o0.xyz, r0.xyzx, r0.wwww
  60: mov o0.w, l(1.000000)
  61: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    nrm r1.xyz, r0
    mov r1.w, c17.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 40 math, 4 textures
Matrix4x4 unity_WorldToLight at 0
Vector4 _Color at 5
Float _Glossiness at 7
Vector4 _LightColor0 at 4
Float _Metallic at 6

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       4
//   _LightColor0       c4       1
//   _Color             c5       1
//   _Metallic          c6       1
//   _Glossiness        c7       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//   _LightTextureB0    s3       1
//

    ps_2_0
    def c8, -0.220916301, 0.220916301, 0.779083729, 1
    def c9, 0.5, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c8
    add_pp r1.y, r2.w, -c7.x
    mov r3.xyz, t5
    mov r3.w, c8.w
    dp4 r4.x, c0, r3
    dp4 r4.y, c1, r3
    dp4 r4.z, c2, r3
    dp4 r2.w, c3, r3
    rcp r2.w, r2.w
    mad r3.xy, r4, r2.w, c9.x
    dp3 r4.xy, r4, r4
    texld r1, r1, s0
    texld r5, t0, s1
    texld_pp r3, r3, s2
    texld_pp r6, r4, s3
    mul_pp r2.w, r1.x, c9.y
    mad_pp r0.yzw, c5.wzyx, r5.wzyx, r2.x
    mul_pp r1.xyz, r5, c5
    mad_pp r0.yzw, c6.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c6.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul r1.x, r3.w, r6.x
    mul_pp r1.xyz, r1.x, c4
    mul_pp r1.xyz, r0.x, r1
    cmp_pp r1.xyz, -r4.z, c9.z, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov r0.w, c8.w
    mov_pp oC0, r0

// approximately 44 instruction slots used (4 texture, 40 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: dp3 r0.x, r1.xyzx, r1.xyzx
  29: rsq r0.x, r0.x
  30: mul r0.xyz, r0.xxxx, r1.xyzx
  31: mov r0.w, l(0)
  32: mov o3.xyzw, r0.wwwx
  33: mov o4.xyzw, r0.wwwy
  34: mov o5.w, r0.z
  35: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: rsq r0.w, r0.w
  40: mul o5.xyz, r0.wwww, r0.xyzx
  41: mov o7.xy, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 46 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
   9: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  10: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  11: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[45].xyzw
  30: lt r2.w, l(0.000000), r3.z
  31: and r2.w, r2.w, l(0x3f800000)
  32: div r4.xy, r3.xyxx, r3.wwww
  33: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  34: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  35: mul r2.w, r2.w, r4.w
  36: dp3 r3.x, r3.xyzx, r3.xyzx
  37: sample r3.xyzw, r3.xxxx, t2.xyzw, s4
  38: mul r2.w, r2.w, r3.x
  39: mul r1.w, r1.w, r2.w
  40: mul r3.xyz, r1.wwww, cb0[2].xyzx
  41: dp3 r1.w, -v2.xyzx, r2.xyzx
  42: add r1.w, r1.w, r1.w
  43: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  44: mov r5.x, v3.w
  45: mov r5.y, v4.w
  46: mov r5.z, v5.w
  47: dp3_sat r1.w, r2.xyzx, r5.xyzx
  48: dp3 r2.x, r4.xyzx, r5.xyzx
  49: mul r2.x, r2.x, r2.x
  50: mul r2.x, r2.x, r2.x
  51: add r2.y, -cb0[8].w, l(1.000000)
  52: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  53: mul r2.x, r2.x, l(16.000000)
  54: mul r0.xyz, r0.xyzx, r2.xxxx
  55: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  56: mul r1.xyz, r1.wwww, r3.xyzx
  57: mul r0.xyz, r0.xyzx, r1.xyzx
  58: mov_sat r0.w, v7.z
  59: mul o0.xyz, r0.xyzx, r0.wwww
  60: mov o0.w, l(1.000000)
  61: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    nrm r1.xyz, r0
    mov r1.w, c17.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 36 math, 4 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 4
Float _GlossMapScale at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _GlossMapScale     c6       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//   _LightTextureB0    s3       1
//

    ps_2_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    texld r0, t0, s1
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, -t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, -t1
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    dp3_pp r1.w, r2, r3
    dp3_sat_pp r1.x, r1, r3
    mul_pp r1.y, r1.w, r1.w
    mul_pp r2.x, r1.y, r1.y
    mov r3, c7
    mad_pp r2.y, r0.w, -c6.x, r3.w
    mov r4.xyz, t5
    mov_pp r4.w, c7.w
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r4.xy, r5, r5
    texld r2, r2, s0
    texld r5, r5, s2
    texld r4, r4, s3
    mul_pp r0.w, r2.x, c8.x
    mad_pp r1.yzw, c4.wzyx, r0.wzyx, r3.x
    mul_pp r0.xyz, r0, c4
    mad_pp r1.yzw, c5.x, r1, r3.y
    mul_pp r1.yzw, r0.w, r1
    mad_pp r0.w, c5.x, -r3.z, r3.z
    mad_pp r0.xyz, r0, r0.w, r1.wzyx
    mul_pp r0.w, r5.w, r4.x
    mul_pp r1.yzw, r0.w, c3.wzyx
    mul_pp r1.xyz, r1.x, r1.wzyx
    mul_pp r0.xyz, r0, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c7.w
    mov_pp oC0, r0

// approximately 40 instruction slots used (4 texture, 36 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: dp3 r0.x, r1.xyzx, r1.xyzx
  29: rsq r0.x, r0.x
  30: mul r0.xyz, r0.xxxx, r1.xyzx
  31: mov r0.w, l(0)
  32: mov o3.xyzw, r0.wwwx
  33: mov o4.xyzw, r0.wwwy
  34: mov o5.w, r0.z
  35: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: rsq r0.w, r0.w
  40: mul o5.xyz, r0.wwww, r0.xyzx
  41: mov o7.xy, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 41 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r2.x, v5.xyzx, v5.xyzx
   6: rsq r2.x, r2.x
   7: mul r2.xyz, r2.xxxx, v5.xyzx
   8: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   9: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[14].xyzx
  12: eq r2.w, cb2[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r2.w, r3.w
  25:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r4.xyzw, cb1[45].xyzw
  30: dp3 r3.w, r3.xyzx, r3.xyzx
  31: sample r4.xyzw, r3.wwww, t1.xyzw, s4
  32: sample r3.xyzw, r3.xyzx, t2.xyzw, s3
  33: mul r3.x, r3.w, r4.x
  34: mul r2.w, r2.w, r3.x
  35: mul r3.xyz, r2.wwww, cb0[2].xyzx
  36: dp3 r2.w, -v2.xyzx, r2.xyzx
  37: add r2.w, r2.w, r2.w
  38: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  39: mov r5.x, v3.w
  40: mov r5.y, v4.w
  41: mov r5.z, v5.w
  42: dp3_sat r2.x, r2.xyzx, r5.xyzx
  43: dp3 r2.y, r4.xyzx, r5.xyzx
  44: mul r2.y, r2.y, r2.y
  45: mul r4.x, r2.y, r2.y
  46: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  47: sample r4.xyzw, r4.xyxx, t3.xyzw, s1
  48: mul r0.w, r4.x, l(16.000000)
  49: mul r0.xyz, r0.xyzx, r0.wwww
  50: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  51: mul r1.xyz, r2.xxxx, r3.xyzx
  52: mul r0.xyz, r0.xyzx, r1.xyzx
  53: mov_sat r0.w, v7.z
  54: mul o0.xyz, r0.xyzx, r0.wwww
  55: mov o0.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    nrm r1.xyz, r0
    mov r1.w, c17.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 36 math, 4 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 4
Float _Glossiness at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set CUBE Texture "_LightTexture0" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _Glossiness        c6       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//   _LightTextureB0    s3       1
//

    ps_2_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_2d s1
    dcl_cube s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c7
    add_pp r1.y, r2.w, -c6.x
    mov r3.xyz, t5
    mov_pp r3.w, c7.w
    dp4 r4.x, c0, r3
    dp4 r4.y, c1, r3
    dp4 r4.z, c2, r3
    dp3 r3.xy, r4, r4
    texld r1, r1, s0
    texld r5, t0, s1
    texld r4, r4, s2
    texld r3, r3, s3
    mul_pp r2.w, r1.x, c8.x
    mad_pp r0.yzw, c4.wzyx, r5.wzyx, r2.x
    mul_pp r1.xyz, r5, c4
    mad_pp r0.yzw, c5.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c5.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul_pp r1.x, r4.w, r3.x
    mul_pp r1.xyz, r1.x, c3
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c7.w
    mov_pp oC0, r0

// approximately 40 instruction slots used (4 texture, 36 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: dp3 r0.x, r1.xyzx, r1.xyzx
  29: rsq r0.x, r0.x
  30: mul r0.xyz, r0.xxxx, r1.xyzx
  31: mov r0.w, l(0)
  32: mov o3.xyzw, r0.wwwx
  33: mov o4.xyzw, r0.wwwy
  34: mov o5.w, r0.z
  35: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: rsq r0.w, r0.w
  40: mul o5.xyz, r0.wwww, r0.xyzx
  41: mov o7.xy, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 41 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   9: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[14].xyzx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[45].xyzw
  30: dp3 r2.w, r3.xyzx, r3.xyzx
  31: sample r4.xyzw, r2.wwww, t1.xyzw, s4
  32: sample r3.xyzw, r3.xyzx, t2.xyzw, s3
  33: mul r2.w, r3.w, r4.x
  34: mul r1.w, r1.w, r2.w
  35: mul r3.xyz, r1.wwww, cb0[2].xyzx
  36: dp3 r1.w, -v2.xyzx, r2.xyzx
  37: add r1.w, r1.w, r1.w
  38: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  39: mov r5.x, v3.w
  40: mov r5.y, v4.w
  41: mov r5.z, v5.w
  42: dp3_sat r1.w, r2.xyzx, r5.xyzx
  43: dp3 r2.x, r4.xyzx, r5.xyzx
  44: mul r2.x, r2.x, r2.x
  45: mul r2.x, r2.x, r2.x
  46: add r2.y, -cb0[8].w, l(1.000000)
  47: sample r2.xyzw, r2.xyxx, t3.xyzw, s1
  48: mul r2.x, r2.x, l(16.000000)
  49: mul r0.xyz, r0.xyzx, r2.xxxx
  50: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  51: mul r1.xyz, r1.wwww, r3.xyzx
  52: mul r0.xyz, r0.xyzx, r1.xyzx
  53: mov_sat r0.w, v7.z
  54: mul o0.xyz, r0.xyzx, r0.wwww
  55: mov o0.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    mov r0.w, c17.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 33 math, 3 textures
Matrix4x2 unity_WorldToLight at 0
Vector4 _Color at 3
Float _GlossMapScale at 5
Vector4 _LightColor0 at 2
Float _Metallic at 4

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       2
//   _LightColor0       c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _GlossMapScale     c5       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//

    ps_2_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 1
    def c7, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t0, s1
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, -t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, -t1
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    dp3_pp r1.w, r2, r3
    dp3_sat_pp r1.x, r1, r3
    mul_pp r1.y, r1.w, r1.w
    mul_pp r2.x, r1.y, r1.y
    mov r3, c6
    mad_pp r2.y, r0.w, -c5.x, r3.w
    mov r4.xyz, t5
    mov_pp r4.w, c6.w
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    texld r2, r2, s0
    texld_pp r4, r5, s2
    mul_pp r0.w, r2.x, c7.x
    mad_pp r1.yzw, c3.wzyx, r0.wzyx, r3.x
    mul_pp r0.xyz, r0, c3
    mad_pp r1.yzw, c4.x, r1, r3.y
    mul_pp r1.yzw, r0.w, r1
    mad_pp r0.w, c4.x, -r3.z, r3.z
    mad_pp r0.xyz, r0, r0.w, r1.wzyx
    mul_pp r1.yzw, r4.w, c2.wzyx
    mul_pp r1.xyz, r1.x, r1.wzyx
    mul_pp r0.xyz, r0, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c6.w
    mov_pp oC0, r0

// approximately 36 instruction slots used (3 texture, 33 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 31 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: mov r1.w, l(0)
  29: mov o3.xyzw, r1.wwwx
  30: mov o4.xyzw, r1.wwwy
  31: mov o5.w, r1.z
  32: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  33: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  34: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  35: dp3 r0.w, r0.xyzx, r0.xyzx
  36: rsq r0.w, r0.w
  37: mul o5.xyz, r0.wwww, r0.xyzx
  38: mov o7.xy, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 39 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r2.x, v5.xyzx, v5.xyzx
   6: rsq r2.x, r2.x
   7: mul r2.xyz, r2.xxxx, v5.xyzx
   8: mul r3.xy, v6.yyyy, cb0[12].xyxx
   9: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  10: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  11: add r3.xy, r3.xyxx, cb0[14].xyxx
  12: eq r2.w, cb2[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r3.z, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r2.w, r3.z
  25:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r4.xyzw, cb1[45].xyzw
  30: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  31: mul r2.w, r2.w, r3.w
  32: mul r3.xyz, r2.wwww, cb0[2].xyzx
  33: dp3 r2.w, -v2.xyzx, r2.xyzx
  34: add r2.w, r2.w, r2.w
  35: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  36: mov r5.x, v3.w
  37: mov r5.y, v4.w
  38: mov r5.z, v5.w
  39: dp3_sat r2.x, r2.xyzx, r5.xyzx
  40: dp3 r2.y, r4.xyzx, r5.xyzx
  41: mul r2.y, r2.y, r2.y
  42: mul r4.x, r2.y, r2.y
  43: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  44: sample r4.xyzw, r4.xyxx, t2.xyzw, s1
  45: mul r0.w, r4.x, l(16.000000)
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  48: mul r1.xyz, r2.xxxx, r3.xyzx
  49: mul r0.xyz, r0.xyzx, r1.xyzx
  50: mov_sat r0.w, v7.z
  51: mul o0.xyz, r0.xyzx, r0.wwww
  52: mov o0.w, l(1.000000)
  53: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    mov r0.w, c17.y
    mov oT2, r0.wwwx
    mov oT3, r0.wwwy
    mov oT4.w, r0.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 39 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 33 math, 3 textures
Matrix4x2 unity_WorldToLight at 0
Vector4 _Color at 3
Float _Glossiness at 5
Vector4 _LightColor0 at 2
Float _Metallic at 4

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       2
//   _LightColor0       c2       1
//   _Color             c3       1
//   _Metallic          c4       1
//   _Glossiness        c5       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//

    ps_2_0
    def c6, -0.220916301, 0.220916301, 0.779083729, 1
    def c7, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c6
    add_pp r1.y, r2.w, -c5.x
    mov r3.xyz, t5
    mov_pp r3.w, c6.w
    dp4 r4.x, c0, r3
    dp4 r4.y, c1, r3
    texld r1, r1, s0
    texld r3, t0, s1
    texld_pp r4, r4, s2
    mul_pp r2.w, r1.x, c7.x
    mad_pp r0.yzw, c3.wzyx, r3.wzyx, r2.x
    mul_pp r1.xyz, r3, c3
    mad_pp r0.yzw, c4.x, r0, r2.y
    mul_pp r0.yzw, r0, r2.w
    mad_pp r1.w, c4.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    mul_pp r1.xyz, r4.w, c2
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c6.w
    mov_pp oC0, r0

// approximately 36 instruction slots used (3 texture, 33 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 31 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: mov r1.w, l(0)
  29: mov o3.xyzw, r1.wwwx
  30: mov o4.xyzw, r1.wwwy
  31: mov o5.w, r1.z
  32: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  33: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  34: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  35: dp3 r0.w, r0.xyzx, r0.xyzx
  36: rsq r0.w, r0.w
  37: mul o5.xyz, r0.wwww, r0.xyzx
  38: mov o7.xy, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 39 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r1.w, v5.xyzx, v5.xyzx
   6: rsq r1.w, r1.w
   7: mul r2.xyz, r1.wwww, v5.xyzx
   8: mul r3.xy, v6.yyyy, cb0[12].xyxx
   9: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  10: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  11: add r3.xy, r3.xyxx, cb0[14].xyxx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r1.w, r2.w
  25:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r4.xyzw, cb1[45].xyzw
  30: sample r3.xyzw, r3.xyxx, t1.xyzw, s3
  31: mul r1.w, r1.w, r3.w
  32: mul r3.xyz, r1.wwww, cb0[2].xyzx
  33: dp3 r1.w, -v2.xyzx, r2.xyzx
  34: add r1.w, r1.w, r1.w
  35: mad r4.xyz, r2.xyzx, -r1.wwww, -v2.xyzx
  36: mov r5.x, v3.w
  37: mov r5.y, v4.w
  38: mov r5.z, v5.w
  39: dp3_sat r1.w, r2.xyzx, r5.xyzx
  40: dp3 r2.x, r4.xyzx, r5.xyzx
  41: mul r2.x, r2.x, r2.x
  42: mul r2.x, r2.x, r2.x
  43: add r2.y, -cb0[8].w, l(1.000000)
  44: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  45: mul r2.x, r2.x, l(16.000000)
  46: mul r0.xyz, r0.xyzx, r2.xxxx
  47: mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  48: mul r1.xyz, r1.wwww, r3.xyzx
  49: mul r0.xyz, r0.xyzx, r1.xyzx
  50: mov_sat r0.w, v7.z
  51: mul o0.xyz, r0.xyzx, r0.wwww
  52: mov o0.w, l(1.000000)
  53: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SPOT SHADOWS_DEPTH FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    nrm r1.xyz, r0
    mov r1.w, c17.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 48 math, 5 textures
Matrix4x4 unity_WorldToLight at 4
Matrix4x4 unity_WorldToShadow at 0
Vector4 _Color at 10
Float _GlossMapScale at 12
Vector4 _LightColor0 at 9
Vector4 _LightShadowData at 8
Float _Metallic at 11

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_LightTexture0" to slot 3
Set 2D Texture "_LightTextureB0" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToShadow c0       4
//   unity_WorldToLight  c4       4
//   _LightShadowData    c8       1
//   _LightColor0        c9       1
//   _Color              c10      1
//   _Metallic           c11      1
//   _GlossMapScale      c12      1
//   unity_NHxRoughness  s0       1
//   _ShadowMapTexture   s1       1
//   _MainTex            s2       1
//   _LightTexture0      s3       1
//   _LightTextureB0     s4       1
//

    ps_2_0
    def c13, -0.220916301, 0.220916301, 0.779083729, 1
    def c14, 0.5, 0, 16, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    texld r0, t0, s2
    mov r1.xyz, t5
    mov_pp r1.w, c13.w
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp3 r2.w, r2, r2
    mov r3.xy, r2.w
    dp4 r2.w, c7, r1
    rcp r2.w, r2.w
    mad r2.xy, r2, r2.w, c14.x
    dp4 r4.x, c0, r1
    dp4 r4.y, c1, r1
    dp4 r4.z, c2, r1
    dp4 r4.w, c3, r1
    mov_pp r1.x, t2.w
    mov_pp r1.y, t3.w
    mov_pp r1.z, t4.w
    nrm_pp r5.xyz, t4
    dp3_pp r1.w, -t1, r5
    add_pp r1.w, r1.w, r1.w
    mad_pp r6.xyz, r5, -r1.w, -t1
    dp3_pp r1.w, r6, r1
    mul_pp r1.w, r1.w, r1.w
    mul_pp r6.x, r1.w, r1.w
    mov r7, c13
    mad_pp r6.y, r0.w, -c12.x, r7.w
    texld_pp r3, r3, s4
    texld_pp r8, r2, s3
    texldp_pp r4, r4, s1
    texld r6, r6, s0
    mul r0.w, r3.x, r8.w
    cmp r0.w, -r2.z, c14.y, r0.w
    lrp_pp r1.w, r4.x, r7.w, c8.x
    mul_pp r0.w, r0.w, r1.w
    mul_pp r2.xyz, r0.w, c9
    dp3_sat_pp r0.w, r5, r1
    mul_pp r1.xyz, r0.w, r2
    mul_pp r0.w, r6.x, c14.z
    mad_pp r2.xyz, c10, r0, r7.x
    mul_pp r0.xyz, r0, c10
    mad_pp r2.xyz, c11.x, r2, r7.y
    mul_pp r2.xyz, r0.w, r2
    mad_pp r0.w, c11.x, -r7.z, r7.z
    mad_pp r0.xyz, r0, r0.w, r2
    mul_pp r0.xyz, r1, r0
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c13.w
    mov_pp oC0, r0

// approximately 52 instruction slots used (5 texture, 47 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: dp3 r0.x, r1.xyzx, r1.xyzx
  29: rsq r0.x, r0.x
  30: mul r0.xyz, r0.xxxx, r1.xyzx
  31: mov r0.w, l(0)
  32: mov o3.xyzw, r0.wwwx
  33: mov o4.xyzw, r0.wwwy
  34: mov o5.w, r0.z
  35: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: rsq r0.w, r0.w
  40: mul o5.xyz, r0.wwww, r0.xyzx
  41: mov o7.xy, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 41 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s3
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t2.xyzw, s4
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t4.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: mov r2.x, v3.w
  27: mov r2.y, v4.w
  28: mov r2.z, v5.w
  29: dp3_sat r0.w, r1.xyzx, r2.xyzx
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: dp3 r0.w, -v2.xyzx, r1.xyzx
  32: add r0.w, r0.w, r0.w
  33: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  34: dp3 r0.w, r1.xyzx, r2.xyzx
  35: mul r0.w, r0.w, r0.w
  36: mul r1.x, r0.w, r0.w
  37: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  38: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  39: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  40: mul r0.w, r1.x, l(16.000000)
  41: mad r1.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  42: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  43: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  44: mul r1.xyz, r0.wwww, r1.xyzx
  45: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  46: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  47: mul r0.xyz, r0.xyzx, r1.xyzx
  48: mov_sat r0.w, v7.z
  49: mul o0.xyz, r0.xyzx, r0.wwww
  50: mov o0.w, l(1.000000)
  51: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    nrm r1.xyz, r0
    mov r1.w, c17.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 48 math, 5 textures
Matrix4x4 unity_WorldToLight at 4
Matrix4x4 unity_WorldToShadow at 0
Vector4 _Color at 10
Float _Glossiness at 12
Vector4 _LightColor0 at 9
Vector4 _LightShadowData at 8
Float _Metallic at 11

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_LightTexture0" to slot 3
Set 2D Texture "_LightTextureB0" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//   row_major float4x4 unity_WorldToShadow[4];
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToShadow c0       4
//   unity_WorldToLight  c4       4
//   _LightShadowData    c8       1
//   _LightColor0        c9       1
//   _Color              c10      1
//   _Metallic           c11      1
//   _Glossiness         c12      1
//   unity_NHxRoughness  s0       1
//   _ShadowMapTexture   s1       1
//   _MainTex            s2       1
//   _LightTexture0      s3       1
//   _LightTextureB0     s4       1
//

    ps_2_0
    def c13, -0.220916301, 0.220916301, 0.779083729, 1
    def c14, 0.5, 0, 16, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    dcl_2d s4
    mov r0.xyz, t5
    mov_pp r0.w, c13.w
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp3 r1.w, r1, r1
    mov r2.xy, r1.w
    dp4 r1.w, c7, r0
    rcp r1.w, r1.w
    mad r1.xy, r1, r1.w, c14.x
    dp4 r3.x, c0, r0
    dp4 r3.y, c1, r0
    dp4 r3.z, c2, r0
    dp4 r3.w, c3, r0
    mov_pp r0.x, t2.w
    mov_pp r0.y, t3.w
    mov_pp r0.z, t4.w
    nrm_pp r4.xyz, t4
    dp3_pp r0.w, -t1, r4
    add_pp r0.w, r0.w, r0.w
    mad_pp r5.xyz, r4, -r0.w, -t1
    dp3_pp r0.w, r5, r0
    mul_pp r0.w, r0.w, r0.w
    mul_pp r5.x, r0.w, r0.w
    mov r6, c13
    add_pp r5.y, r6.w, -c12.x
    texld_pp r2, r2, s4
    texld_pp r7, r1, s3
    texldp_pp r3, r3, s1
    texld r5, r5, s0
    texld r8, t0, s2
    mul r0.w, r2.x, r7.w
    cmp r0.w, -r1.z, c14.y, r0.w
    lrp_pp r4.w, r3.x, r6.w, c8.x
    mul_pp r0.w, r0.w, r4.w
    mul_pp r1.xyz, r0.w, c9
    dp3_sat_pp r1.w, r4, r0
    mul_pp r0.xyz, r1.w, r1
    mul_pp r0.w, r5.x, c14.z
    mad_pp r1.xyz, c10, r8, r6.x
    mul_pp r2.xyz, r8, c10
    mad_pp r1.xyz, c11.x, r1, r6.y
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.w, c11.x, -r6.z, r6.z
    mad_pp r1.xyz, r2, r0.w, r1
    mul_pp r0.xyz, r0, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c13.w
    mov_pp oC0, r0

// approximately 52 instruction slots used (5 texture, 47 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: dp3 r0.x, r1.xyzx, r1.xyzx
  29: rsq r0.x, r0.x
  30: mul r0.xyz, r0.xxxx, r1.xyzx
  31: mov r0.w, l(0)
  32: mov o3.xyzw, r0.wwwx
  33: mov o4.xyzw, r0.wwwy
  34: mov o5.w, r0.z
  35: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: rsq r0.w, r0.w
  40: mul o5.xyz, r0.wwww, r0.xyzx
  41: mov o7.xy, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 41 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s3
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t2.xyzw, s4
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t4.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: mov r2.x, v3.w
  27: mov r2.y, v4.w
  28: mov r2.z, v5.w
  29: dp3_sat r0.w, r1.xyzx, r2.xyzx
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: dp3 r0.w, -v2.xyzx, r1.xyzx
  32: add r0.w, r0.w, r0.w
  33: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  34: dp3 r0.w, r1.xyzx, r2.xyzx
  35: mul r0.w, r0.w, r0.w
  36: mul r1.x, r0.w, r0.w
  37: add r1.y, -cb0[8].w, l(1.000000)
  38: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  39: mul r0.w, r1.x, l(16.000000)
  40: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  41: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  42: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  43: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  44: mul r2.xyz, r0.wwww, r2.xyzx
  45: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
  46: mad r1.xyz, r1.xyzx, r0.wwww, r2.xyzx
  47: mul r0.xyz, r0.xyzx, r1.xyzx
  48: mov_sat r0.w, v7.z
  49: mul o0.xyz, r0.xyzx, r0.wwww
  50: mov o0.w, l(1.000000)
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 91 math, 2 textures
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 8
Float _GlossMapScale at 10
Vector4 _LightColor0 at 7
Vector4 _LightShadowData at 4
Float _Metallic at 9
Vector4 _WorldSpaceCameraPos at 3
Vector4 unity_FogParams at 6
Vector4 unity_ShadowFadeCenterAndType at 5

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _LightShadowData              c4       1
//   unity_ShadowFadeCenterAndType c5       1
//   unity_FogParams               c6       1
//   _LightColor0                  c7       1
//   _Color                        c8       1
//   _Metallic                     c9       1
//   _GlossMapScale                c10      1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//

    ps_3_0
    def c11, -0.220916301, 0.220916301, 0.779083729, 1
    def c12, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c13, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c14, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_texcoord7 v7.x
    dcl_2d s0
    dcl_2d s1
    add r0.xyz, -c5, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c3.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c5.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c4.z, c4.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mul_pp r0.xyz, r0.x, c7
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c12.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c12.y, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    texld r2, v0, s0
    mov r3, c11
    mad_pp r1.z, r2.w, -c10.x, r3.w
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.w, r2.w, r2.w
    mad_pp r4.x, r0.w, r3.w, -r0.w
    mad_pp r0.w, r4.x, r0.w, c11.w
    mad r0.w, r0.w, r0.w, c13.y
    rcp r0.w, r0.w
    mul r3.w, r3.w, c13.x
    mul_pp r0.w, r0.w, r3.w
    mad_pp r3.w, r1.z, -r1.z, c11.w
    mad_pp r4.x, r1_abs.y, r3.w, r2.w
    mad_pp r2.w, r1.x, r3.w, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c11.w
    mad r2.w, r1.x, r4.x, r2.w
    add r2.w, r2.w, c12.w
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, -c12.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c13.z
    mad r0.w, r0.w, -c13.z, c13.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c14.x, r2.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r4.xyz, c8, r2, r3.x
    mul_pp r2.xyz, r2, c8
    mad_pp r3.xyw, c9.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c14.y, c14.z
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c11.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c12.z
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c11.w, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c11.w
    add_pp r1.y, -r1.x, c11.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c11.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c9.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp r0.xyz, r1, r0, r3.xyww
    mad_sat r0.w, v7.x, c6.z, c6.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c11.w

// approximately 91 instruction slots used (2 texture, 89 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v2.w
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  13: mov r5.x, cb4[9].z
  14: mov r5.y, cb4[10].z
  15: mov r5.z, cb4[11].z
  16: dp3 r2.w, r4.xyzx, r5.xyzx
  17: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  18: dp3 r3.w, r4.xyzx, r4.xyzx
  19: sqrt r3.w, r3.w
  20: add r3.w, -r2.w, r3.w
  21: mad r2.w, cb3[25].w, r3.w, r2.w
  22: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  23: eq r3.w, cb6[0].x, l(1.000000)
  24: if_nz r3.w
  25:   eq r4.x, cb6[0].y, l(1.000000)
  26:   mul r4.yzw, v6.yyyy, cb6[2].xxyz
  27:   mad r4.yzw, cb6[1].xxyz, v6.xxxx, r4.yyzw
  28:   mad r4.yzw, cb6[3].xxyz, v6.zzzz, r4.yyzw
  29:   add r4.yzw, r4.yyzw, cb6[4].xxyz
  30:   movc r4.xyz, r4.xxxx, r4.yzwy, v6.xyzx
  31:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  32:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  33:   mad r4.y, r4.y, l(0.250000), l(0.750000)
  34:   mad r5.x, cb6[0].z, l(0.500000), l(0.750000)
  35:   max r4.x, r4.y, r5.x
  36:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  37: else 
  38:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r4.x, r4.xyzw, cb2[45].xyzw
  41: div r4.yz, v7.xxyx, v7.wwww
  42: sample r5.xyzw, r4.yzyy, t1.xyzw, s2
  43: add_sat r2.w, r2.w, r5.x
  44: min r4.x, r2.w, r4.x
  45: movc r2.w, r3.w, r4.x, r2.w
  46: mul r4.xyz, r2.wwww, cb0[2].xyzx
  47: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  52: dp3 r1.w, r6.xyzx, r6.xyzx
  53: max r1.w, r1.w, l(0.001000)
  54: rsq r1.w, r1.w
  55: mul r6.xyz, r1.wwww, r6.xyzx
  56: dp3 r1.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r0.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r1.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r3.x, r0.w, r0.w
  76: mad r0.w, -r0.w, r0.w, l(1.000000)
  77: mad r3.y, |r1.w|, r0.w, r3.x
  78: mad r0.w, r2.w, r0.w, r3.x
  79: mul r0.w, r0.w, |r1.w|
  80: mad r0.w, r2.w, r3.y, r0.w
  81: add r0.w, r0.w, l(0.000010)
  82: div r0.w, l(0.500000), r0.w
  83: mul r1.w, r3.x, r3.x
  84: mad r3.x, r2.x, r1.w, -r2.x
  85: mad r2.x, r3.x, r2.x, l(1.000000)
  86: mul r1.w, r1.w, l(0.318310)
  87: mad r2.x, r2.x, r2.x, l(0.000000)
  88: div r1.w, r1.w, r2.x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r0.w, l(3.141593)
  91: max r0.w, r0.w, l(0.000100)
  92: sqrt r0.w, r0.w
  93: mul r0.w, r2.w, r0.w
  94: dp3 r1.w, r0.xyzx, r0.xyzx
  95: ne r1.w, r1.w, l(0.000000)
  96: and r1.w, r1.w, l(0x3f800000)
  97: mul r0.w, r0.w, r1.w
  98: mul r2.xzw, r2.zzzz, r4.xxyz
  99: mul r3.xyz, r4.xyzx, r0.wwww
 100: add r0.w, -r2.y, l(1.000000)
 101: mul r1.w, r0.w, r0.w
 102: mul r1.w, r1.w, r1.w
 103: mul r0.w, r0.w, r1.w
 104: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 106: mul r0.xyz, r0.xyzx, r3.xyzx
 107: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 108: div r0.w, v2.w, cb1[5].y
 109: add r0.w, -r0.w, l(1.000000)
 110: mul r0.w, r0.w, cb1[5].z
 111: max r0.w, r0.w, l(0.000000)
 112: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 113: mul o0.xyz, r0.xyzx, r0.wwww
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 91 math, 2 textures
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 8
Float _Glossiness at 10
Vector4 _LightColor0 at 7
Vector4 _LightShadowData at 4
Float _Metallic at 9
Vector4 _WorldSpaceCameraPos at 3
Vector4 unity_FogParams at 6
Vector4 unity_ShadowFadeCenterAndType at 5

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _LightShadowData              c4       1
//   unity_ShadowFadeCenterAndType c5       1
//   unity_FogParams               c6       1
//   _LightColor0                  c7       1
//   _Color                        c8       1
//   _Metallic                     c9       1
//   _Glossiness                   c10      1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//

    ps_3_0
    def c11, -0.220916301, 0.220916301, 0.779083729, 1
    def c12, 0.00100000005, 31.622776, -0.5, 9.99999975e-006
    def c13, 0.318309873, 1.00000001e-007, 3.14159274, 9.99999975e-005
    def c14, 0.00999999978, 0, 1, 0
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_texcoord7 v7.x
    dcl_2d s0
    dcl_2d s1
    add r0.xyz, -c5, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c3.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c5.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c4.z, c4.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mul_pp r0.xyz, r0.x, c7
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c12.x
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c12.y, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    mov r2, c11
    add_pp r1.z, r2.w, -c10.x
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c11.w
    mad r0.w, r0.w, r0.w, c13.y
    rcp r0.w, r0.w
    mul r3.x, r3.x, c13.x
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.z, -r1.z, c11.w
    mad_pp r3.y, r1_abs.y, r3.x, r2.w
    mad_pp r2.w, r1.x, r3.x, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c11.w
    mad r2.w, r1.x, r3.y, r2.w
    add r2.w, r2.w, c12.w
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, -c12.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c13.z
    mad r0.w, r0.w, -c13.z, c13.w
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c14.x, r2.w
    mul_pp r0.w, r1.x, r0.w
    texld r3, v0, s0
    mad_pp r4.xyz, c8, r3, r2.x
    mul_pp r3.xyz, r3, c8
    mad_pp r2.xyw, c9.x, r4.xyzz, r2.y
    dp3_pp r3.w, r2.xyww, r2.xyww
    cmp r3.w, -r3.w, c14.y, c14.z
    mul_pp r0.w, r0.w, r3.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c11.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c12.z
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c11.w, r2.xyww
    mul_pp r2.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c11.w
    add_pp r1.y, -r1.x, c11.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c11.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c9.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp r0.xyz, r1, r0, r2.xyww
    mad_sat r0.w, v7.x, c6.z, c6.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c11.w

// approximately 91 instruction slots used (2 texture, 89 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v2.w
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  13: mov r5.x, cb4[9].z
  14: mov r5.y, cb4[10].z
  15: mov r5.z, cb4[11].z
  16: dp3 r1.w, r4.xyzx, r5.xyzx
  17: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  18: dp3 r2.w, r4.xyzx, r4.xyzx
  19: sqrt r2.w, r2.w
  20: add r2.w, -r1.w, r2.w
  21: mad r1.w, cb3[25].w, r2.w, r1.w
  22: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  23: eq r2.w, cb6[0].x, l(1.000000)
  24: if_nz r2.w
  25:   eq r3.w, cb6[0].y, l(1.000000)
  26:   mul r4.xyz, v6.yyyy, cb6[2].xyzx
  27:   mad r4.xyz, cb6[1].xyzx, v6.xxxx, r4.xyzx
  28:   mad r4.xyz, cb6[3].xyzx, v6.zzzz, r4.xyzx
  29:   add r4.xyz, r4.xyzx, cb6[4].xyzx
  30:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  31:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  32:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  33:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  34:   mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
  35:   max r4.x, r3.w, r4.y
  36:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  37: else 
  38:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r3.w, r4.xyzw, cb2[45].xyzw
  41: div r4.xy, v7.xyxx, v7.wwww
  42: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  43: add_sat r1.w, r1.w, r4.x
  44: min r3.w, r1.w, r3.w
  45: movc r1.w, r2.w, r3.w, r1.w
  46: mul r4.xyz, r1.wwww, cb0[2].xyzx
  47: add r1.w, -cb0[8].w, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  52: dp3 r0.w, r6.xyzx, r6.xyzx
  53: max r0.w, r0.w, l(0.001000)
  54: rsq r0.w, r0.w
  55: mul r6.xyz, r0.wwww, r6.xyzx
  56: dp3 r0.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r1.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r0.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r3.x, r1.w, r1.w
  76: mad r1.w, -r1.w, r1.w, l(1.000000)
  77: mad r3.y, |r0.w|, r1.w, r3.x
  78: mad r1.w, r2.w, r1.w, r3.x
  79: mul r0.w, |r0.w|, r1.w
  80: mad r0.w, r2.w, r3.y, r0.w
  81: add r0.w, r0.w, l(0.000010)
  82: div r0.w, l(0.500000), r0.w
  83: mul r1.w, r3.x, r3.x
  84: mad r3.x, r2.x, r1.w, -r2.x
  85: mad r2.x, r3.x, r2.x, l(1.000000)
  86: mul r1.w, r1.w, l(0.318310)
  87: mad r2.x, r2.x, r2.x, l(0.000000)
  88: div r1.w, r1.w, r2.x
  89: mul r0.w, r0.w, r1.w
  90: mul r0.w, r0.w, l(3.141593)
  91: max r0.w, r0.w, l(0.000100)
  92: sqrt r0.w, r0.w
  93: mul r0.w, r2.w, r0.w
  94: dp3 r1.w, r0.xyzx, r0.xyzx
  95: ne r1.w, r1.w, l(0.000000)
  96: and r1.w, r1.w, l(0x3f800000)
  97: mul r0.w, r0.w, r1.w
  98: mul r2.xzw, r2.zzzz, r4.xxyz
  99: mul r3.xyz, r4.xyzx, r0.wwww
 100: add r0.w, -r2.y, l(1.000000)
 101: mul r1.w, r0.w, r0.w
 102: mul r1.w, r1.w, r1.w
 103: mul r0.w, r0.w, r1.w
 104: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 106: mul r0.xyz, r0.xyzx, r3.xyzx
 107: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 108: div r0.w, v2.w, cb1[5].y
 109: add r0.w, -r0.w, l(1.000000)
 110: mul r0.w, r0.w, cb1[5].z
 111: max r0.w, r0.w, l(0.000000)
 112: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 113: mul o0.xyz, r0.xyzx, r0.wwww
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL_COOKIE SHADOWS_SCREEN FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 95 math, 3 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x2 unity_WorldToLight at 3
Vector4 _Color at 10
Float _GlossMapScale at 12
Vector4 _LightColor0 at 9
Vector4 _LightShadowData at 6
Float _Metallic at 11
Vector4 _WorldSpaceCameraPos at 5
Vector4 unity_FogParams at 8
Vector4 unity_ShadowFadeCenterAndType at 7

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       2
//   _WorldSpaceCameraPos          c5       1
//   _LightShadowData              c6       1
//   unity_ShadowFadeCenterAndType c7       1
//   unity_FogParams               c8       1
//   _LightColor0                  c9       1
//   _Color                        c10      1
//   _Metallic                     c11      1
//   _GlossMapScale                c12      1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c13, -0.220916301, 0.220916301, 0.779083729, 1
    def c14, 1, 0, 0.00100000005, 31.622776
    def c15, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c16, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_texcoord7 v7.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c5.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c7.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c6.z, c6.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mad r1, v5.xyzx, c14.xxxy, c14.yyyx
    dp4 r2.x, c3, r1
    dp4 r2.y, c4, r1
    texld r1, r2, s2
    mul_pp r0.x, r0.x, r1.w
    mul_pp r0.xyz, r0.x, c9
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c14.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c14.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    texld r2, v0, s0
    mov r3, c13
    mad_pp r1.z, r2.w, -c12.x, r3.w
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.w, r2.w, r2.w
    mad_pp r4.x, r0.w, r3.w, -r0.w
    mad_pp r0.w, r4.x, r0.w, c13.w
    mad r0.w, r0.w, r0.w, c16.x
    rcp r0.w, r0.w
    mul r3.w, r3.w, c15.w
    mul_pp r0.w, r0.w, r3.w
    mad_pp r3.w, r1.z, -r1.z, c13.w
    mad_pp r4.x, r1_abs.y, r3.w, r2.w
    mad_pp r2.w, r1.x, r3.w, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c13.w
    mad r2.w, r1.x, r4.x, r2.w
    add r2.w, r2.w, c15.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c15.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c16.y
    mad r0.w, r0.w, -c16.y, c16.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c16.w, r2.w
    mul_pp r0.w, r1.x, r0.w
    mad_pp r4.xyz, c10, r2, r3.x
    mul_pp r2.xyz, r2, c10
    mad_pp r3.xyw, c11.x, r4.xyzz, r3.y
    dp3_pp r2.w, r3.xyww, r3.xyww
    cmp r2.w, -r2.w, c14.y, c14.x
    mul_pp r0.w, r0.w, r2.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c13.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c15.x
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c13.w, r3.xyww
    mul_pp r3.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c13.w
    add_pp r1.y, -r1.x, c13.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c13.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c11.x, -r3.z, r3.z
    mul_pp r1.xyz, r0.w, r2
    mad_pp r0.xyz, r1, r0, r3.xyww
    mad_sat r0.w, v7.x, c8.z, c8.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c13.w

// approximately 96 instruction slots used (3 texture, 93 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 104 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v2.w
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r1.wwww, r1.xyzx
   6: dp3 r1.w, v5.xyzx, v5.xyzx
   7: rsq r1.w, r1.w
   8: mul r2.xyz, r1.wwww, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r3.xyz, r1.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r2.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r3.w, r5.xyzx, r5.xyzx
  23: sqrt r3.w, r3.w
  24: add r3.w, -r2.w, r3.w
  25: mad r2.w, cb3[25].w, r3.w, r2.w
  26: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  27: eq r3.w, cb6[0].x, l(1.000000)
  28: if_nz r3.w
  29:   eq r4.z, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r4.zzzz, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r4.z, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r4.w, r4.z
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r4.z, r5.xyzw, cb2[45].xyzw
  45: div r5.xy, v7.xyxx, v7.wwww
  46: sample r5.xyzw, r5.xyxx, t1.xyzw, s2
  47: add_sat r2.w, r2.w, r5.x
  48: min r4.z, r2.w, r4.z
  49: movc r2.w, r3.w, r4.z, r2.w
  50: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  51: mul r2.w, r2.w, r4.w
  52: mul r4.xyz, r2.wwww, cb0[2].xyzx
  53: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  58: dp3 r1.w, r6.xyzx, r6.xyzx
  59: max r1.w, r1.w, l(0.001000)
  60: rsq r1.w, r1.w
  61: mul r6.xyz, r1.wwww, r6.xyzx
  62: dp3 r1.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r0.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r1.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r3.x, r0.w, r0.w
  82: mad r0.w, -r0.w, r0.w, l(1.000000)
  83: mad r3.y, |r1.w|, r0.w, r3.x
  84: mad r0.w, r2.w, r0.w, r3.x
  85: mul r0.w, r0.w, |r1.w|
  86: mad r0.w, r2.w, r3.y, r0.w
  87: add r0.w, r0.w, l(0.000010)
  88: div r0.w, l(0.500000), r0.w
  89: mul r1.w, r3.x, r3.x
  90: mad r3.x, r2.x, r1.w, -r2.x
  91: mad r2.x, r3.x, r2.x, l(1.000000)
  92: mul r1.w, r1.w, l(0.318310)
  93: mad r2.x, r2.x, r2.x, l(0.000000)
  94: div r1.w, r1.w, r2.x
  95: mul r0.w, r0.w, r1.w
  96: mul r0.w, r0.w, l(3.141593)
  97: max r0.w, r0.w, l(0.000100)
  98: sqrt r0.w, r0.w
  99: mul r0.w, r2.w, r0.w
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r4.xxyz
 105: mul r3.xyz, r4.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: div r0.w, v2.w, cb1[5].y
 115: add r0.w, -r0.w, l(1.000000)
 116: mul r0.w, r0.w, cb1[5].z
 117: max r0.w, r0.w, l(0.000000)
 118: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 119: mul o0.xyz, r0.xyzx, r0.wwww
 120: mov o0.w, l(1.000000)
 121: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 39 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Vector4 _ProjectionParams at 12
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _ProjectionParams    c12      1
//   _WorldSpaceLightPos0 c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_3_0
    def c17, 1, 0, 0.5, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    dcl_texcoord6 o7
    dcl_texcoord7 o8.x
    mad o1.xy, v2, c14, c14.zwzw
    abs r0.x, c16.x
    sge r0.x, -r0.x, r0.x
    mov r1.xy, v2
    lrp r2.xy, r0.x, r1, v3
    mad o1.zw, r2.xyxy, c15.xyxy, c15
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add o2.xyz, r0, -c11
    mul r1.xyz, c9, v1.y
    mad r1.xyz, v1.x, c8, r1
    mad r1.xyz, v1.z, c10, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul o5.xyz, r0.w, r1
    mad r1, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c17.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.w, r1.y, c12.x
    mov r4, r1
    mov o7.zw, r1
    mov o8.x, r1.z
    mul r3.w, r0.w, c17.z
    add o7.xy, r3.z, r3.xwzw
    mad r1.xyz, r0, -c13.w, c13
    mov o6.xyz, r0
    mov r1.w, c17.y
    mov o3, r1.wwwx
    mov o4, r1.wwwy
    mov o5.w, r1.z
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 95 math, 3 textures
Matrix4x3 unity_MatrixV at 0
Matrix4x2 unity_WorldToLight at 3
Vector4 _Color at 10
Float _Glossiness at 12
Vector4 _LightColor0 at 9
Vector4 _LightShadowData at 6
Float _Metallic at 11
Vector4 _WorldSpaceCameraPos at 5
Vector4 unity_FogParams at 8
Vector4 unity_ShadowFadeCenterAndType at 7

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_ShadowFadeCenterAndType;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   unity_WorldToLight            c3       2
//   _WorldSpaceCameraPos          c5       1
//   _LightShadowData              c6       1
//   unity_ShadowFadeCenterAndType c7       1
//   unity_FogParams               c8       1
//   _LightColor0                  c9       1
//   _Color                        c10      1
//   _Metallic                     c11      1
//   _Glossiness                   c12      1
//   _MainTex                      s0       1
//   _ShadowMapTexture             s1       1
//   _LightTexture0                s2       1
//

    ps_3_0
    def c13, -0.220916301, 0.220916301, 0.779083729, 1
    def c14, 1, 0, 0.00100000005, 31.622776
    def c15, -0.5, 9.99999975e-006, 0.5, 0.318309873
    def c16, 1.00000001e-007, 3.14159274, 9.99999975e-005, 0.00999999978
    dcl_texcoord v0.xy
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.w
    dcl_texcoord3_pp v3.w
    dcl_texcoord4_pp v4
    dcl_texcoord5 v5.xyz
    dcl_texcoord6 v6
    dcl_texcoord7 v7.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, -c7, v5
    dp3 r0.x, r0, r0
    rsq r0.x, r0.x
    rcp r0.x, r0.x
    add r0.yzw, c5.xxyz, -v5.xxyz
    dp3 r0.y, r0.yzww, c2
    lrp r1.x, c7.w, r0.x, r0.y
    mad_sat_pp r0.x, r1.x, c6.z, c6.w
    texldp_pp r1, v6, s1
    add_sat_pp r0.x, r0.x, r1.x
    mad r1, v5.xyzx, c14.xxxy, c14.yyyx
    dp4 r2.x, c3, r1
    dp4 r2.y, c4, r1
    texld r1, r2, s2
    mul_pp r0.x, r0.x, r1.w
    mul_pp r0.xyz, r0.x, c9
    dp3_pp r0.w, v1, v1
    rsq_pp r0.w, r0.w
    mov_pp r1.x, v2.w
    mov_pp r1.y, v3.w
    mov_pp r1.z, v4.w
    mad_pp r2.xyz, v1, -r0.w, r1
    mul_pp r3.xyz, r0.w, v1
    dp3_pp r0.w, r2, r2
    add r1.w, -r0.w, c14.z
    rsq_pp r0.w, r0.w
    cmp_pp r0.w, r1.w, c14.w, r0.w
    mul_pp r2.xyz, r0.w, r2
    nrm_pp r4.xyz, v4
    dp3_sat_pp r0.w, r4, r2
    dp3_sat_pp r1.w, r1, r2
    dp3_sat_pp r1.x, r4, r1
    dp3_pp r1.y, r4, -r3
    mov r2, c13
    add_pp r1.z, r2.w, -c12.x
    mul_pp r2.w, r1.z, r1.z
    mul_pp r3.x, r2.w, r2.w
    mad_pp r3.y, r0.w, r3.x, -r0.w
    mad_pp r0.w, r3.y, r0.w, c13.w
    mad r0.w, r0.w, r0.w, c16.x
    rcp r0.w, r0.w
    mul r3.x, r3.x, c15.w
    mul_pp r0.w, r0.w, r3.x
    mad_pp r3.x, r1.z, -r1.z, c13.w
    mad_pp r3.y, r1_abs.y, r3.x, r2.w
    mad_pp r2.w, r1.x, r3.x, r2.w
    mul_pp r2.w, r1_abs.y, r2.w
    add_pp r1.y, -r1_abs.y, c13.w
    mad r2.w, r1.x, r3.y, r2.w
    add r2.w, r2.w, c15.y
    rcp r2.w, r2.w
    mul_pp r2.w, r2.w, c15.z
    mul r0.w, r0.w, r2.w
    mul_pp r2.w, r0.w, c16.y
    mad r0.w, r0.w, -c16.y, c16.z
    rsq r2.w, r2.w
    rcp_pp r2.w, r2.w
    cmp_pp r0.w, r0.w, c16.w, r2.w
    mul_pp r0.w, r1.x, r0.w
    texld r3, v0, s0
    mad_pp r4.xyz, c10, r3, r2.x
    mul_pp r3.xyz, r3, c10
    mad_pp r2.xyw, c11.x, r4.xyzz, r2.y
    dp3_pp r3.w, r2.xyww, r2.xyww
    cmp r3.w, -r3.w, c14.y, c14.x
    mul_pp r0.w, r0.w, r3.w
    mul_pp r4.xyz, r0, r0.w
    add_pp r0.w, -r1.w, c13.w
    mul_pp r1.w, r1.w, r1.w
    dp2add_pp r1.z, r1.w, r1.z, c15.x
    mul_pp r1.w, r0.w, r0.w
    mul_pp r1.w, r1.w, r1.w
    mul_pp r0.w, r0.w, r1.w
    lrp_pp r5.xyz, r0.w, c13.w, r2.xyww
    mul_pp r2.xyw, r4.xyzz, r5.xyzz
    mul_pp r0.w, r1.y, r1.y
    mul_pp r0.w, r0.w, r0.w
    mul_pp r0.w, r1.y, r0.w
    mad_pp r0.w, r1.z, r0.w, c13.w
    add_pp r1.y, -r1.x, c13.w
    mul_pp r1.w, r1.y, r1.y
    mul_pp r1.w, r1.w, r1.w
    mul_pp r1.y, r1.y, r1.w
    mad_pp r1.y, r1.z, r1.y, c13.w
    mul_pp r0.w, r0.w, r1.y
    mul_pp r0.w, r1.x, r0.w
    mul_pp r0.xyz, r0.w, r0
    mad_pp r0.w, c11.x, -r2.z, r2.z
    mul_pp r1.xyz, r0.w, r3
    mad_pp r0.xyz, r1, r0, r2.xyww
    mad_sat r0.w, v7.x, c8.z, c8.w
    mul_pp oC0.xyz, r0, r0.w
    mov_pp oC0.w, c13.w

// approximately 96 instruction slots used (3 texture, 93 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o2.w
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, r0.z
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 104 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v2.w
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r0.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: mul r1.xyz, r0.wwww, r1.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r2.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r3.xyz, r0.wwww, v2.xyzx
  12: mul r4.xy, v6.yyyy, cb0[12].xyxx
  13: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  14: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  15: add r4.xy, r4.xyxx, cb0[14].xyxx
  16: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r1.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r5.xyzx, r5.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb6[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r3.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v6.yyyy, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.z, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r3.w, r4.z
  40:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r5.xyzw, cb2[45].xyzw
  45: div r4.zw, v7.xxxy, v7.wwww
  46: sample r5.xyzw, r4.zwzz, t1.xyzw, s2
  47: add_sat r1.w, r1.w, r5.x
  48: min r3.w, r1.w, r3.w
  49: movc r1.w, r2.w, r3.w, r1.w
  50: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  51: mul r1.w, r1.w, r4.w
  52: mul r4.xyz, r1.wwww, cb0[2].xyzx
  53: add r1.w, -cb0[8].w, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r0.wwww, r5.xyzx
  58: dp3 r0.w, r6.xyzx, r6.xyzx
  59: max r0.w, r0.w, l(0.001000)
  60: rsq r0.w, r0.w
  61: mul r6.xyz, r0.wwww, r6.xyzx
  62: dp3 r0.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r1.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r0.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r3.x, r1.w, r1.w
  82: mad r1.w, -r1.w, r1.w, l(1.000000)
  83: mad r3.y, |r0.w|, r1.w, r3.x
  84: mad r1.w, r2.w, r1.w, r3.x
  85: mul r0.w, |r0.w|, r1.w
  86: mad r0.w, r2.w, r3.y, r0.w
  87: add r0.w, r0.w, l(0.000010)
  88: div r0.w, l(0.500000), r0.w
  89: mul r1.w, r3.x, r3.x
  90: mad r3.x, r2.x, r1.w, -r2.x
  91: mad r2.x, r3.x, r2.x, l(1.000000)
  92: mul r1.w, r1.w, l(0.318310)
  93: mad r2.x, r2.x, r2.x, l(0.000000)
  94: div r1.w, r1.w, r2.x
  95: mul r0.w, r0.w, r1.w
  96: mul r0.w, r0.w, l(3.141593)
  97: max r0.w, r0.w, l(0.000100)
  98: sqrt r0.w, r0.w
  99: mul r0.w, r2.w, r0.w
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r4.xxyz
 105: mul r3.xyz, r4.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: div r0.w, v2.w, cb1[5].y
 115: add r0.w, -r0.w, l(1.000000)
 116: mul r0.w, r0.w, cb1[5].z
 117: max r0.w, r0.w, l(0.000000)
 118: mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
 119: mul o0.xyz, r0.xyzx, r0.wwww
 120: mov o0.w, l(1.000000)
 121: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT SHADOWS_CUBE FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    nrm r1.xyz, r0
    mov r1.w, c17.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 43 math, 4 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 6
Float _GlossMapScale at 8
Vector4 _LightColor0 at 5
Vector4 _LightPositionRange at 3
Vector4 _LightShadowData at 4
Float _Metallic at 7

Set 2D Texture "unity_NHxRoughness" to slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_LightTexture0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToLight  c0       3
//   _LightPositionRange c3       1
//   _LightShadowData    c4       1
//   _LightColor0        c5       1
//   _Color              c6       1
//   _Metallic           c7       1
//   _GlossMapScale      c8       1
//   unity_NHxRoughness  s0       1
//   _ShadowMapTexture   s1       1
//   _MainTex            s2       1
//   _LightTexture0      s3       1
//

    ps_2_0
    def c9, -0.220916301, 0.220916301, 0.779083729, 1
    def c10, 0.970000029, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    texld r0, t0, s2
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, -t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, -t1
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    dp3_pp r1.w, r2, r3
    dp3_sat_pp r1.x, r1, r3
    mul_pp r1.y, r1.w, r1.w
    mul_pp r2.x, r1.y, r1.y
    mov r3, c9
    mad_pp r2.y, r0.w, -c8.x, r3.w
    add r4.xyz, t5, -c3
    mov r5.xyz, t5
    mov_pp r5.w, c9.w
    dp4 r6.x, c0, r5
    dp4 r6.y, c1, r5
    dp4 r6.z, c2, r5
    dp3 r5.xy, r6, r6
    texld r2, r2, s0
    texld r6, r4, s1
    texld r5, r5, s3
    mul_pp r0.w, r2.x, c10.y
    mad_pp r1.yzw, c6.wzyx, r0.wzyx, r3.x
    mul_pp r0.xyz, r0, c6
    mad_pp r1.yzw, c7.x, r1, r3.y
    mul_pp r1.yzw, r0.w, r1
    mad_pp r0.w, c7.x, -r3.z, r3.z
    mad_pp r0.xyz, r0, r0.w, r1.wzyx
    dp3 r0.w, r4, r4
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c3.w
    mad r0.w, r0.w, -c10.x, r6.x
    cmp_pp r0.w, r0.w, r3.w, c4.x
    mul_pp r0.w, r0.w, r5.x
    mul_pp r1.yzw, r0.w, c5.wzyx
    mul_pp r1.xyz, r1.x, r1.wzyx
    mul_pp r0.xyz, r0, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c9.w
    mov_pp oC0, r0

// approximately 47 instruction slots used (4 texture, 43 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: dp3 r0.x, r1.xyzx, r1.xyzx
  29: rsq r0.x, r0.x
  30: mul r0.xyz, r0.xxxx, r1.xyzx
  31: mov r0.w, l(0)
  32: mov o3.xyzw, r0.wwwx
  33: mov o4.xyzw, r0.wwwy
  34: mov o5.w, r0.z
  35: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: rsq r0.w, r0.w
  40: mul o5.xyz, r0.wwww, r0.xyzx
  41: mov o7.xy, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 34 math, 3 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  14: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  15: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  16: mul r0.y, r1.x, l(16.000000)
  17: mad r1.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  19: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r1.xxyz
  21: mad r1.x, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r2.xxyz, r1.xxxx, r0.yyzw
  23: add r1.xyz, v6.xyzx, -cb1[1].xyzx
  24: dp3 r1.w, r1.xyzx, r1.xyzx
  25: sample_l r2.xyzw, r1.xyzx, t1.xyzw, s1, l(0.000000)
  26: sqrt r1.x, r1.w
  27: mul r1.x, r1.x, cb1[1].w
  28: mul r1.x, r1.x, l(0.970000)
  29: lt r1.x, r2.x, r1.x
  30: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  31: mul r1.yzw, v6.yyyy, cb0[12].xxyz
  32: mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
  33: mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
  34: add r1.yzw, r1.yyzw, cb0[14].xxyz
  35: dp3 r1.y, r1.yzwy, r1.yzwy
  36: sample r2.xyzw, r1.yyyy, t2.xyzw, s3
  37: mul r1.x, r1.x, r2.x
  38: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  39: mul r1.xyz, r0.xxxx, r1.xyzx
  40: mul r0.xyz, r0.yzwy, r1.xyzx
  41: mov_sat r0.w, v7.z
  42: mul o0.xyz, r0.xyzx, r0.wwww
  43: mov o0.w, l(1.000000)
  44: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    nrm r1.xyz, r0
    mov r1.w, c17.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 43 math, 4 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 6
Float _Glossiness at 8
Vector4 _LightColor0 at 5
Vector4 _LightPositionRange at 3
Vector4 _LightShadowData at 4
Float _Metallic at 7

Set 2D Texture "unity_NHxRoughness" to slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_LightTexture0" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToLight  c0       3
//   _LightPositionRange c3       1
//   _LightShadowData    c4       1
//   _LightColor0        c5       1
//   _Color              c6       1
//   _Metallic           c7       1
//   _Glossiness         c8       1
//   unity_NHxRoughness  s0       1
//   _ShadowMapTexture   s1       1
//   _MainTex            s2       1
//   _LightTexture0      s3       1
//

    ps_2_0
    def c9, -0.220916301, 0.220916301, 0.779083729, 1
    def c10, 0.970000029, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_2d s3
    nrm_pp r0.xyz, t4
    dp3_pp r0.w, -t1, r0
    add_pp r0.w, r0.w, r0.w
    mad_pp r1.xyz, r0, -r0.w, -t1
    mov_pp r2.x, t2.w
    mov_pp r2.y, t3.w
    mov_pp r2.z, t4.w
    dp3_pp r0.w, r1, r2
    dp3_sat_pp r0.x, r0, r2
    mul_pp r0.y, r0.w, r0.w
    mul_pp r1.x, r0.y, r0.y
    mov r2, c9
    add_pp r1.y, r2.w, -c8.x
    add r3.xyz, t5, -c3
    mov r4.xyz, t5
    mov_pp r4.w, c9.w
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r4.xy, r5, r5
    texld r1, r1, s0
    texld r5, t0, s2
    texld r6, r3, s1
    texld r4, r4, s3
    mul_pp r3.w, r1.x, c10.y
    mad_pp r0.yzw, c6.wzyx, r5.wzyx, r2.x
    mul_pp r1.xyz, r5, c6
    mad_pp r0.yzw, c7.x, r0, r2.y
    mul_pp r0.yzw, r0, r3.w
    mad_pp r1.w, c7.x, -r2.z, r2.z
    mad_pp r0.yzw, r1.wzyx, r1.w, r0
    dp3 r1.x, r3, r3
    rsq r1.x, r1.x
    rcp r1.x, r1.x
    mul r1.x, r1.x, c3.w
    mad r1.x, r1.x, -c10.x, r6.x
    cmp_pp r1.x, r1.x, r2.w, c4.x
    mul_pp r1.x, r1.x, r4.x
    mul_pp r1.xyz, r1.x, c5
    mul_pp r1.xyz, r0.x, r1
    mul_pp r0.xyz, r0.wzyx, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c9.w
    mov_pp oC0, r0

// approximately 47 instruction slots used (4 texture, 43 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: dp3 r0.x, r1.xyzx, r1.xyzx
  29: rsq r0.x, r0.x
  30: mul r0.xyz, r0.xxxx, r1.xyzx
  31: mov r0.w, l(0)
  32: mov o3.xyzw, r0.wwwx
  33: mov o4.xyzw, r0.wwwy
  34: mov o5.w, r0.z
  35: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: rsq r0.w, r0.w
  40: mul o5.xyz, r0.wwww, r0.xyzx
  41: mov o7.xy, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 34 math, 3 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 3
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: add r1.xyz, v6.xyzx, -cb1[1].xyzx
  24: dp3 r1.w, r1.xyzx, r1.xyzx
  25: sample_l r2.xyzw, r1.xyzx, t1.xyzw, s1, l(0.000000)
  26: sqrt r1.x, r1.w
  27: mul r1.x, r1.x, cb1[1].w
  28: mul r1.x, r1.x, l(0.970000)
  29: lt r1.x, r2.x, r1.x
  30: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  31: mul r1.yzw, v6.yyyy, cb0[12].xxyz
  32: mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
  33: mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
  34: add r1.yzw, r1.yyzw, cb0[14].xxyz
  35: dp3 r1.y, r1.yzwy, r1.yzwy
  36: sample r2.xyzw, r1.yyyy, t2.xyzw, s3
  37: mul r1.x, r1.x, r2.x
  38: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  39: mul r1.xyz, r0.xxxx, r1.xyzx
  40: mul r0.xyz, r0.yzwy, r1.xyzx
  41: mov_sat r0.w, v7.z
  42: mul o0.xyz, r0.xyzx, r0.wwww
  43: mov o0.w, l(1.000000)
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE SHADOWS_CUBE FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    nrm r1.xyz, r0
    mov r1.w, c17.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 44 math, 5 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 6
Float _GlossMapScale at 8
Vector4 _LightColor0 at 5
Vector4 _LightPositionRange at 3
Vector4 _LightShadowData at 4
Float _Metallic at 7

Set 2D Texture "unity_NHxRoughness" to slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set CUBE Texture "_LightTexture0" to slot 3
Set 2D Texture "_LightTextureB0" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToLight  c0       3
//   _LightPositionRange c3       1
//   _LightShadowData    c4       1
//   _LightColor0        c5       1
//   _Color              c6       1
//   _Metallic           c7       1
//   _GlossMapScale      c8       1
//   unity_NHxRoughness  s0       1
//   _ShadowMapTexture   s1       1
//   _MainTex            s2       1
//   _LightTexture0      s3       1
//   _LightTextureB0     s4       1
//

    ps_2_0
    def c9, -0.220916301, 0.220916301, 0.779083729, 1
    def c10, 0.970000029, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    texld r0, t0, s2
    mov r1.xyz, t5
    mov_pp r1.w, c9.w
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp3 r1.xy, r2, r2
    add r3.xyz, t5, -c3
    mov_pp r4.x, t2.w
    mov_pp r4.y, t3.w
    mov_pp r4.z, t4.w
    nrm_pp r5.xyz, t4
    dp3_pp r2.w, -t1, r5
    add_pp r2.w, r2.w, r2.w
    mad_pp r6.xyz, r5, -r2.w, -t1
    dp3_pp r2.w, r6, r4
    mul_pp r2.w, r2.w, r2.w
    mul_pp r6.x, r2.w, r2.w
    mov r7, c9
    mad_pp r6.y, r0.w, -c8.x, r7.w
    texld r2, r2, s3
    texld r1, r1, s4
    texld r8, r3, s1
    texld r6, r6, s0
    mul r0.w, r2.w, r1.x
    dp3 r4.w, r3, r3
    rsq r4.w, r4.w
    rcp r4.w, r4.w
    mul r4.w, r4.w, c3.w
    mad r4.w, r4.w, -c10.x, r8.x
    cmp_pp r4.w, r4.w, r7.w, c4.x
    mul_pp r0.w, r0.w, r4.w
    mul_pp r1.xyz, r0.w, c5
    dp3_sat_pp r0.w, r5, r4
    mul_pp r1.xyz, r0.w, r1
    mul_pp r0.w, r6.x, c10.y
    mad_pp r2.xyz, c6, r0, r7.x
    mul_pp r0.xyz, r0, c6
    mad_pp r2.xyz, c7.x, r2, r7.y
    mul_pp r2.xyz, r0.w, r2
    mad_pp r0.w, c7.x, -r7.z, r7.z
    mad_pp r0.xyz, r0, r0.w, r2
    mul_pp r0.xyz, r1, r0
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c9.w
    mov_pp oC0, r0

// approximately 49 instruction slots used (5 texture, 44 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: dp3 r0.x, r1.xyzx, r1.xyzx
  29: rsq r0.x, r0.x
  30: mul r0.xyz, r0.xxxx, r1.xyzx
  31: mov r0.w, l(0)
  32: mov o3.xyzw, r0.wwwx
  33: mov o4.xyzw, r0.wwwy
  34: mov o5.w, r0.z
  35: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: rsq r0.w, r0.w
  40: mul o5.xyz, r0.wwww, r0.xyzx
  41: mov o7.xy, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 35 math, 4 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 4
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  14: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  15: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  16: mul r0.y, r1.x, l(16.000000)
  17: mad r1.xyz, cb0[4].xyzx, r2.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  19: mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r1.xxyz
  21: mad r1.x, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r2.xxyz, r1.xxxx, r0.yyzw
  23: add r1.xyz, v6.xyzx, -cb1[1].xyzx
  24: dp3 r1.w, r1.xyzx, r1.xyzx
  25: sample_l r2.xyzw, r1.xyzx, t1.xyzw, s1, l(0.000000)
  26: sqrt r1.x, r1.w
  27: mul r1.x, r1.x, cb1[1].w
  28: mul r1.x, r1.x, l(0.970000)
  29: lt r1.x, r2.x, r1.x
  30: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  31: mul r1.yzw, v6.yyyy, cb0[12].xxyz
  32: mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
  33: mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
  34: add r1.yzw, r1.yyzw, cb0[14].xxyz
  35: dp3 r2.x, r1.yzwy, r1.yzwy
  36: sample r3.xyzw, r1.yzwy, t3.xyzw, s3
  37: sample r2.xyzw, r2.xxxx, t2.xyzw, s4
  38: mul r1.y, r3.w, r2.x
  39: mul r1.x, r1.x, r1.y
  40: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  41: mul r1.xyz, r0.xxxx, r1.xyzx
  42: mul r0.xyz, r0.yzwy, r1.xyzx
  43: mov_sat r0.w, v7.z
  44: mul o0.xyz, r0.xyzx, r0.wwww
  45: mov o0.w, l(1.000000)
  46: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    nrm r1.xyz, r0
    mov r1.w, c17.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 44 math, 5 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 6
Float _Glossiness at 8
Vector4 _LightColor0 at 5
Vector4 _LightPositionRange at 3
Vector4 _LightShadowData at 4
Float _Metallic at 7

Set 2D Texture "unity_NHxRoughness" to slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set CUBE Texture "_LightTexture0" to slot 3
Set 2D Texture "_LightTextureB0" to slot 4

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _Glossiness;
//   float4 _LightColor0;
//   float4 _LightPositionRange;
//   float4 _LightShadowData;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float _Metallic;
//   samplerCUBE _ShadowMapTexture;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_WorldToLight  c0       3
//   _LightPositionRange c3       1
//   _LightShadowData    c4       1
//   _LightColor0        c5       1
//   _Color              c6       1
//   _Metallic           c7       1
//   _Glossiness         c8       1
//   unity_NHxRoughness  s0       1
//   _ShadowMapTexture   s1       1
//   _MainTex            s2       1
//   _LightTexture0      s3       1
//   _LightTextureB0     s4       1
//

    ps_2_0
    def c9, -0.220916301, 0.220916301, 0.779083729, 1
    def c10, 0.970000029, 16, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_cube s1
    dcl_2d s2
    dcl_cube s3
    dcl_2d s4
    mov r0.xyz, t5
    mov_pp r0.w, c9.w
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp3 r0.xy, r1, r1
    add r2.xyz, t5, -c3
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    nrm_pp r4.xyz, t4
    dp3_pp r1.w, -t1, r4
    add_pp r1.w, r1.w, r1.w
    mad_pp r5.xyz, r4, -r1.w, -t1
    dp3_pp r1.w, r5, r3
    mul_pp r1.w, r1.w, r1.w
    mul_pp r5.x, r1.w, r1.w
    mov r6, c9
    add_pp r5.y, r6.w, -c8.x
    texld r1, r1, s3
    texld r0, r0, s4
    texld r7, r2, s1
    texld r5, r5, s0
    texld r8, t0, s2
    mul r2.w, r1.w, r0.x
    dp3 r3.w, r2, r2
    rsq r3.w, r3.w
    rcp r3.w, r3.w
    mul r3.w, r3.w, c3.w
    mad r3.w, r3.w, -c10.x, r7.x
    cmp_pp r3.w, r3.w, r6.w, c4.x
    mul_pp r3.w, r2.w, r3.w
    mul_pp r0.xyz, r3.w, c5
    dp3_sat_pp r0.w, r4, r3
    mul_pp r0.xyz, r0.w, r0
    mul_pp r0.w, r5.x, c10.y
    mad_pp r1.xyz, c6, r8, r6.x
    mul_pp r2.xyz, r8, c6
    mad_pp r1.xyz, c7.x, r1, r6.y
    mul_pp r1.xyz, r0.w, r1
    mad_pp r0.w, c7.x, -r6.z, r6.z
    mad_pp r1.xyz, r2, r0.w, r1
    mul_pp r0.xyz, r0, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c9.w
    mov_pp oC0, r0

// approximately 49 instruction slots used (5 texture, 44 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: dp3 r0.x, r1.xyzx, r1.xyzx
  29: rsq r0.x, r0.x
  30: mul r0.xyz, r0.xxxx, r1.xyzx
  31: mov r0.w, l(0)
  32: mov o3.xyzw, r0.wwwx
  33: mov o4.xyzw, r0.wwwy
  34: mov o5.w, r0.z
  35: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: rsq r0.w, r0.w
  40: mul o5.xyz, r0.wwww, r0.xyzx
  41: mov o7.xy, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 35 math, 4 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set CUBE Texture "_ShadowMapTexture" to slot 1
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[2], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texturecube (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 4
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r0.w, r0.w, r0.w
   5: mad r1.xyz, r0.xyzx, -r0.wwww, -v2.xyzx
   6: mov r2.x, v3.w
   7: mov r2.y, v4.w
   8: mov r2.z, v5.w
   9: dp3 r0.w, r1.xyzx, r2.xyzx
  10: dp3_sat r0.x, r0.xyzx, r2.xyzx
  11: mul r0.y, r0.w, r0.w
  12: mul r1.x, r0.y, r0.y
  13: add r1.y, -cb0[8].w, l(1.000000)
  14: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  15: mul r0.y, r1.x, l(16.000000)
  16: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
  17: mad r2.xyz, cb0[4].xyzx, r1.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
  18: mul r1.xyz, r1.xyzx, cb0[4].xyzx
  19: mad r2.xyz, cb0[8].zzzz, r2.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
  20: mul r0.yzw, r0.yyyy, r2.xxyz
  21: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
  22: mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
  23: add r1.xyz, v6.xyzx, -cb1[1].xyzx
  24: dp3 r1.w, r1.xyzx, r1.xyzx
  25: sample_l r2.xyzw, r1.xyzx, t1.xyzw, s1, l(0.000000)
  26: sqrt r1.x, r1.w
  27: mul r1.x, r1.x, cb1[1].w
  28: mul r1.x, r1.x, l(0.970000)
  29: lt r1.x, r2.x, r1.x
  30: movc r1.x, r1.x, cb2[24].x, l(1.000000)
  31: mul r1.yzw, v6.yyyy, cb0[12].xxyz
  32: mad r1.yzw, cb0[11].xxyz, v6.xxxx, r1.yyzw
  33: mad r1.yzw, cb0[13].xxyz, v6.zzzz, r1.yyzw
  34: add r1.yzw, r1.yyzw, cb0[14].xxyz
  35: dp3 r2.x, r1.yzwy, r1.yzwy
  36: sample r3.xyzw, r1.yzwy, t3.xyzw, s3
  37: sample r2.xyzw, r2.xxxx, t2.xyzw, s4
  38: mul r1.y, r3.w, r2.x
  39: mul r1.x, r1.x, r1.y
  40: mul r1.xyz, r1.xxxx, cb0[2].xyzx
  41: mul r1.xyz, r0.xxxx, r1.xyzx
  42: mul r0.xyz, r0.yzwy, r1.xyzx
  43: mov_sat r0.w, v7.z
  44: mul o0.xyz, r0.xyzx, r0.wwww
  45: mov o0.w, l(1.000000)
  46: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT FOG_LINEAR _SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A 
-- Vertex shader for "d3d9":
// Stats: 41 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _DetailAlbedoMap_ST at 15
Vector4 _MainTex_ST at 14
Float _UVSec at 16
Vector4 _WorldSpaceCameraPos at 11
Vector4 _WorldSpaceLightPos0 at 12
Vector4 unity_FogParams at 13

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _DetailAlbedoMap_ST;
//   float4 _MainTex_ST;
//   float _UVSec;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   float4 unity_FogParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_ObjectToWorld  c0       4
//   unity_MatrixVP       c4       4
//   unity_WorldToObject  c8       3
//   _WorldSpaceCameraPos c11      1
//   _WorldSpaceLightPos0 c12      1
//   unity_FogParams      c13      1
//   _MainTex_ST          c14      1
//   _DetailAlbedoMap_ST  c15      1
//   _UVSec               c16      1
//

    vs_2_0
    def c17, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord1 v3
    mad r0, v0.xyzx, c17.xxxy, c17.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.w, c7, r1
    dp4 r0.x, c6, r1
    mad oT0.xy, v2, c14, c14.zwzw
    mul r0.y, c16.x, c16.x
    sge r0.y, -r0.y, r0.y
    mov r1.xy, v2
    lrp r2.xy, r0.y, r1, v3
    mad oT0.zw, r2.xyxy, c15.xyxy, c15
    dp4 r1.x, c0, v0
    dp4 r1.y, c1, v0
    dp4 r1.z, c2, v0
    add r0.yzw, r1.xxyz, -c11.xxyz
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT1.xyz, r0.yzww, r1.w
    mul r0.yzw, v1.y, c9.xxyz
    mad r0.yzw, v1.x, c8.xxyz, r0
    mad r0.yzw, v1.z, c10.xxyz, r0
    dp3 r1.w, r0.yzww, r0.yzww
    rsq r1.w, r1.w
    mul oT4.xyz, r0.yzww, r1.w
    mad oT7.x, r0.x, c13.z, c13.w
    mov r3.z, r0.x
    mad r0.xyz, r1, -c12.w, c12
    mov oT5.xyz, r1
    nrm r1.xyz, r0
    mov r1.w, c17.y
    mov oT2, r1.wwwx
    mov oT3, r1.wwwy
    mov oT4.w, r1.z
    mov oT6.xy, c17.y
    mad oPos.xy, r3.w, c255, r3
    mov oPos.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 35 math, 3 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 4
Float _GlossMapScale at 6
Vector4 _LightColor0 at 3
Float _Metallic at 5

Set 2D Texture "unity_NHxRoughness" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_LightTexture0" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   float _GlossMapScale;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float _Metallic;
//   sampler2D unity_NHxRoughness;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name               Reg   Size
//   ------------------ ----- ----
//   unity_WorldToLight c0       3
//   _LightColor0       c3       1
//   _Color             c4       1
//   _Metallic          c5       1
//   _GlossMapScale     c6       1
//   unity_NHxRoughness s0       1
//   _MainTex           s1       1
//   _LightTexture0     s2       1
//

    ps_2_0
    def c7, -0.220916301, 0.220916301, 0.779083729, 1
    def c8, 16, 0, 0, 0
    dcl t0.xy
    dcl_pp t1.xyz
    dcl_pp t2
    dcl_pp t3
    dcl_pp t4
    dcl t5.xyz
    dcl t7.x
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld r0, t0, s1
    nrm_pp r1.xyz, t4
    dp3_pp r1.w, -t1, r1
    add_pp r1.w, r1.w, r1.w
    mad_pp r2.xyz, r1, -r1.w, -t1
    mov_pp r3.x, t2.w
    mov_pp r3.y, t3.w
    mov_pp r3.z, t4.w
    dp3_pp r1.w, r2, r3
    dp3_sat_pp r1.x, r1, r3
    mul_pp r1.y, r1.w, r1.w
    mul_pp r2.x, r1.y, r1.y
    mov r3, c7
    mad_pp r2.y, r0.w, -c6.x, r3.w
    mov r4.xyz, t5
    mov_pp r4.w, c7.w
    dp4 r5.x, c0, r4
    dp4 r5.y, c1, r4
    dp4 r5.z, c2, r4
    dp3 r4.xy, r5, r5
    texld r2, r2, s0
    texld_pp r4, r4, s2
    mul_pp r0.w, r2.x, c8.x
    mad_pp r1.yzw, c4.wzyx, r0.wzyx, r3.x
    mul_pp r0.xyz, r0, c4
    mad_pp r1.yzw, c5.x, r1, r3.y
    mul_pp r1.yzw, r0.w, r1
    mad_pp r0.w, c5.x, -r3.z, r3.z
    mad_pp r0.xyz, r0, r0.w, r1.wzyx
    mul_pp r1.yzw, r4.x, c3.wzyx
    mul_pp r1.xyz, r1.x, r1.wzyx
    mul_pp r0.xyz, r0, r1
    mov_sat r0.w, t7.x
    mul_pp r0.xyz, r0, r0.w
    mov_pp r0.w, c7.w
    mov_pp oC0, r0

// approximately 38 instruction slots used (3 texture, 35 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 34 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"
Uses vertex data channel "TexCoord0"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityFog" (32 bytes) on slot 5 {
  Vector4 unity_FogParams at 16
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7     z         7     NONE   float     z 
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_constantbuffer CB5[2], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o7.z
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: div r0.x, r0.z, cb1[5].y
  10: add r0.x, -r0.x, l(1.000000)
  11: mul r0.x, r0.x, cb1[5].z
  12: max r0.x, r0.x, l(0.000000)
  13: mad o7.z, r0.x, cb5[1].z, cb5[1].w
  14: eq r0.x, cb0[9].w, l(0.000000)
  15: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  16: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  17: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  18: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  19: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  20: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  21: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  22: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  23: dp3 r0.w, r1.xyzx, r1.xyzx
  24: rsq r0.w, r0.w
  25: mul o2.xyz, r0.wwww, r1.xyzx
  26: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r0.xyzx
  28: dp3 r0.x, r1.xyzx, r1.xyzx
  29: rsq r0.x, r0.x
  30: mul r0.xyz, r0.xxxx, r1.xyzx
  31: mov r0.w, l(0)
  32: mov o3.xyzw, r0.wwwx
  33: mov o4.xyzw, r0.wwwy
  34: mov o5.w, r0.z
  35: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r0.w, r0.xyzx, r0.xyzx
  39: rsq r0.w, r0.w
  40: mul o5.xyz, r0.wwww, r0.xyzx
  41: mov o7.xy, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 40 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _Metallic at 136
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7     z         7     NONE   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.z
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r1.xyz, r0.xyzx, cb0[4].xyzx
   2: mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.220916, -0.220916, -0.220916, 0.000000)
   3: mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.220916, 0.220916, 0.220916, 0.000000)
   4: mad r1.w, -cb0[8].z, l(0.779084), l(0.779084)
   5: dp3 r2.x, v5.xyzx, v5.xyzx
   6: rsq r2.x, r2.x
   7: mul r2.xyz, r2.xxxx, v5.xyzx
   8: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   9: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  10: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  11: add r3.xyz, r3.xyzx, cb0[14].xyzx
  12: eq r2.w, cb2[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb2[0].y, l(1.000000)
  15:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  17:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  19:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  20:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  21:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  22:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  23:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r4.x, r2.w, r3.w
  25:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r2.w, r4.xyzw, cb1[45].xyzw
  30: dp3 r3.x, r3.xyzx, r3.xyzx
  31: sample r3.xyzw, r3.xxxx, t1.xyzw, s3
  32: mul r2.w, r2.w, r3.x
  33: mul r3.xyz, r2.wwww, cb0[2].xyzx
  34: dp3 r2.w, -v2.xyzx, r2.xyzx
  35: add r2.w, r2.w, r2.w
  36: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  37: mov r5.x, v3.w
  38: mov r5.y, v4.w
  39: mov r5.z, v5.w
  40: dp3_sat r2.x, r2.xyzx, r5.xyzx
  41: dp3 r2.y, r4.xyzx, r5.xyzx
  42: mul r2.y, r2.y, r2.y
  43: mul r4.x, r2.y, r2.y
  44: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  45: sample r4.xyzw, r4.xyxx, t2.xyzw, s1
  46: mul r0.w, r4.x, l(16.000000)
  47: mul r0.xyz, r0.xyzx, r0.wwww
  48: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  49: mul r1.xyz, r2.xxxx, r3.xyzx
  50: mul r0.xyz, r0.xyzx, r1.xyzx
  51: mov_sat r0.w, v7.z
  52: mul o0.xyz, r0.xyzx, r0.wwww
  53: mov o0.w, l(1.000000)
  54: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //         d3d9: 24 avg math (13..36)
 //        d3d11: 22 avg math (13..31)
 // Stats for Fragment shader:
 //         d3d9: 4 avg math (2..6)
 //        d3d11: 4 math
 Pass {
  Name "SHADOWCASTER"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_DEPTH 
-- Vertex shader for "d3d9":
// Stats: 36 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _WorldSpaceLightPos0 at 11
Vector4 unity_LightShadowBias at 12

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _WorldSpaceLightPos0;
//   float4 unity_LightShadowBias;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   unity_ObjectToWorld   c0       4
//   unity_MatrixVP        c4       4
//   unity_WorldToObject   c8       3
//   _WorldSpaceLightPos0  c11      1
//   unity_LightShadowBias c12      1
//

    vs_2_0
    def c13, 1, 0, 0, 0
    dcl_position v0
    dcl_normal v1
    mul r0.xyz, v1.y, c9
    mad r0.xyz, v1.x, c8, r0
    mad r0.xyz, v1.z, c10, r0
    nrm r1.xyz, r0
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    mad r2.xyz, r0, -c11.w, c11
    nrm r3.xyz, r2
    dp3 r0.w, r1, r3
    mad r0.w, r0.w, -r0.w, c13.x
    rsq r0.w, r0.w
    rcp r0.w, r0.w
    mul r0.w, r0.w, c12.z
    mul r1.xyz, r0.w, r1
    mul r0.w, c12.z, c12.z
    slt r0.w, -r0.w, r0.w
    mad r0.xyz, r0.w, -r1, r0
    dp4 r0.w, c3, v0
    dp4 r4.x, c4, r0
    dp4 r4.y, c5, r0
    dp4 r1.x, c6, r0
    dp4 r0.x, c7, r0
    rcp r0.y, r0.x
    mov r4.w, r0.x
    mul r0.x, r0.y, c12.x
    max r0.x, r0.x, c13.y
    min r0.x, r0.x, c13.x
    add r0.x, r0.x, r1.x
    max r0.y, r0.x, c13.y
    add r0.y, -r0.x, r0.y
    mad r4.z, c12.y, r0.y, r0.x
    mad oPos.xy, r4.w, c255, r4
    mov oPos.zw, r4

// approximately 38 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 2 math
Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
    ps_2_0
    def c0, 0, 0, 0, 0
    mov_pp r0, c0.x
    mov_pp oC0, r0

// approximately 2 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"

Constant Buffer "UnityLighting" (752 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb1[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb1[5].y, r0.x, r0.z
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: SHADOWS_CUBE 
-- Vertex shader for "d3d9":
// Stats: 13 math
Uses vertex data channel "Vertex"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Vector4 _LightPositionRange at 8

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _LightPositionRange;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_ObjectToWorld c0       4
//   unity_MatrixVP      c4       4
//   _LightPositionRange c8       1
//

    vs_2_0
    def c9, 1, 0, 0, 0
    dcl_position v0
    dp4 r0.x, c0, v0
    dp4 r0.y, c1, v0
    dp4 r0.z, c2, v0
    add oT0.xyz, r0, -c8
    mad r0, v0.xyzx, c9.xxxy, c9.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r2.x, c4, r1
    dp4 r2.y, c5, r1
    dp4 r2.z, c6, r1
    dp4 r2.w, c7, r1
    mad oPos.xy, r2.w, c255, r2
    mov oPos.zw, r2

// approximately 15 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 6 math
Vector4 _LightPositionRange at 0
Vector4 unity_LightShadowBias at 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _LightPositionRange;
//   float4 unity_LightShadowBias;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   _LightPositionRange   c0       1
//   unity_LightShadowBias c1       1
//

    ps_2_0
    dcl t0.xyz
    dp3 r0.w, t0, t0
    rsq r0.x, r0.w
    rcp r0.x, r0.x
    add r0.x, r0.x, c1.x
    mul_pp r0, r0.x, c0.w
    mov_pp oC0, r0

// approximately 6 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 13 math, 2 temp registers
Uses vertex data channel "Vertex"

Constant Buffer "UnityLighting" (752 bytes) on slot 0 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// SV_POSITION              0   xyzw        1      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[2], immediateIndexed
      dcl_constantbuffer CB1[4], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_output o0.xyz
      dcl_output_siv o1.xyzw, position
      dcl_temps 2
   0: mul r0.xyz, v0.yyyy, cb1[1].xyzx
   1: mad r0.xyz, cb1[0].xyzx, v0.xxxx, r0.xyzx
   2: mad r0.xyz, cb1[2].xyzx, v0.zzzz, r0.xyzx
   3: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   4: add o0.xyz, r0.xyzx, -cb0[1].xyzx
   5: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   6: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   7: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   8: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   9: mul r1.xyzw, r0.yyyy, cb2[18].xyzw
  10: mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
  12: mad o1.xyzw, cb2[20].xyzw, r0.wwww, r1.xyzw
  13: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 4 math, 1 temp registers
Constant Buffer "UnityLighting" (752 bytes) on slot 0 {
  Vector4 _LightPositionRange at 16
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyz         0     NONE   float   xyz 
// SV_POSITION              0   xyzw        1      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[2], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_input_ps linear v0.xyz
      dcl_output o0.xyzw
      dcl_temps 1
   0: dp3 r0.x, v0.xyzx, v0.xyzx
   1: sqrt r0.x, r0.x
   2: add r0.x, r0.x, cb1[5].x
   3: mul o0.xyzw, r0.xxxx, cb0[1].wwww
   4: ret 
// Approximately 0 instruction slots used


 }
}
CustomEditor "StandardShaderGUI"
Fallback "VertexLit"
}