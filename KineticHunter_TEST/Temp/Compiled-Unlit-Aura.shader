// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Unlit/Aura" {
Properties {
 _MainTex ("Base (RGB)", 2D) = "white" { }
 _Glossiness ("Smoothness", Range(0.000000,1.000000)) = 0.500000
 _Metallic ("Metallic", Range(0.000000,1.000000)) = 0.000000
 _Color1 ("Aura 1 Color", Color) = (1.000000,1.000000,1.000000,1.000000)
 _AuraPower1 ("Aura 1 Transparence", Range(0.000000,5.000000)) = 1.000000
 _Size1 ("Aura 1 Size", Float) = 1.500000
 _Scale1 ("Aura 1 Scale", Float) = 1.000000
 _Speed1 ("Aura 1 Speed", Float) = 1.000000
 _Frequency1 ("Aura 1 Frequency", Float) = 1.000000
 _Color2 ("Aura 2 Color", Color) = (1.000000,1.000000,1.000000,1.000000)
 _AuraPower2 ("Aura 2 Transparence", Range(0.000000,5.000000)) = 1.000000
 _Size2 ("Aura 2 Size", Float) = 1.500000
 _Scale2 ("Aura 2 Scale", Float) = 1.000000
 _Speed2 ("Aura 2 Speed", Float) = 1.000000
 _Frequency2 ("Aura 2 Frequency", Float) = 1.000000
 _ColorFill ("fillColor", Color) = (0.000000,0.000000,0.000000,1.000000)
 _fillPourcent ("pourcent fill", Float) = -1.000000
 _BoundsUp ("boundsSize Up", Float) = 0.000000
 _BoundsDown ("boundsSize Down", Float) = 0.000000
}
SubShader { 
 LOD 200
 Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Opaque" }


 // Stats for Fragment shader:
 //         d3d9: 6 math, 1 texture
 Pass {
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL 
-- Vertex shader for "d3d9":
// Compile errors generating this shader.

-- Fragment shader for "d3d9":
// Stats: 6 math, 1 textures
Set 2D Texture "_MainTex" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   sampler2D _MainTex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   _MainTex     s0       1
//

    ps_3_0
    def c0, -1, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_color v1.xyz
    dcl_color1 v2.xyz
    dcl_color2 v3.x
    dcl_2d s0
    add r0.x, c0.x, v3.x
    mov r1.xyz, v1
    add_pp r0.yzw, r1.xxyz, v2.xxyz
    texld_pp r1, v0, s0
    mul_pp r0.yzw, r0, r1.xxyz
    mov_pp oC0.w, r1.w
    cmp_pp oC0.xyz, -r0_abs.x, c0.y, r0.yzww

// approximately 7 instruction slots used (1 texture, 6 arithmetic)


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN 
-- Vertex shader for "d3d9":
// Compile errors generating this shader.

-- Fragment shader for "d3d9":
// Compile errors generating this shader.

 }


 // Stats for Vertex shader:
 //         d3d9: 43 math
 //        d3d11: 20 math
 // Stats for Fragment shader:
 //         d3d9: 3 math
 //        d3d11: 2 math
 Pass {
  Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Opaque" }
  ZWrite Off
  Blend SrcAlpha OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d9":
// Stats: 43 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Float _Frequency1 at 13
Vector4 _MainTex_ST at 10
Float _Scale1 at 11
Float _Size1 at 9
Float _Speed1 at 12
Vector4 _Time at 8

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float _Frequency1;
//   float4 _MainTex_ST;
//   float _Scale1;
//   float _Size1;
//   float _Speed1;
//   float4 _Time;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_ObjectToWorld c0       4
//   unity_MatrixVP      c4       4
//   _Time               c8       1
//   _Size1              c9       1
//   _MainTex_ST         c10      1
//   _Scale1             c11      1
//   _Speed1             c12      1
//   _Frequency1         c13      1
//

    vs_3_0
    def c14, 0.159154937, 0.5, 6.28318548, -3.14159274
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord o0.xy
    dcl_position o1
    dcl_normal o2.xyz
    add r0.x, v0.z, v0.x
    mov r0.w, c8.w
    mul r0.y, r0.w, c12.x
    mad r0.x, r0.y, c13.x, r0.x
    mad r0.x, r0.x, c14.x, c14.y
    frc r0.x, r0.x
    mad r0.x, r0.x, c14.z, c14.w
    sincos r1.y, r0.x
    mad o2.y, c11.x, r1.y, v1.y
    mad r1.y, c11.x, r1.y, v0.y
    mov r1.xzw, v0
    mul r1, r1, c9.x
    dp4 r0.x, c0, r1
    dp4 r2.y, c1, r1
    mul r0.y, r0.w, c14.y
    mad r0.y, r2.y, c14.y, r0.y
    mad r0.y, r0.y, c14.x, c14.y
    frc r0.y, r0.y
    mad r0.y, r0.y, c14.z, c14.w
    sincos r3.y, r0.y
    add r2.x, r0.x, r3.y
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r4.x, c4, r2
    dp4 r4.y, c5, r2
    dp4 r4.z, c6, r2
    dp4 r4.w, c7, r2
    mad o0.xy, v2, c10, c10.zwzw
    mov o2.xz, v1
    mad o1.xy, r4.w, c255, r4
    mov o1.zw, r4

// approximately 45 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 3 math
Float _AuraPower1 at 1
Vector4 _Color1 at 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float _AuraPower1;
//   float4 _Color1;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   _Color1      c0       1
//   _AuraPower1  c1       1
//

    ps_3_0
    dcl_normal v0.xz
    mul r0.x, v0.z, v0.x
    mul_pp oC0.w, r0_abs.x, c1.x
    mov_pp oC0.xyz, c0

// approximately 3 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 20 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Float _Size1 at 52
  Vector4 _MainTex_ST at 64
  Float _Scale1 at 80
  Float _Speed1 at 84
  Float _Frequency1 at 88
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _Time at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// SV_POSITION              0   xyzw        1      POS   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output o0.xy
      dcl_output_siv o1.xyzw, position
      dcl_output o2.xyz
      dcl_temps 2
   0: mad o0.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
   1: add r0.x, v0.z, v0.x
   2: mul r0.y, cb0[5].y, cb1[0].w
   3: mad r0.x, r0.y, cb0[5].z, r0.x
   4: sincos r0.x, null, r0.x
   5: mad r1.y, cb0[5].x, r0.x, v0.y
   6: mad o2.y, cb0[5].x, r0.x, v1.y
   7: mov r1.xzw, v0.xxzw
   8: mul r0.xyzw, r1.xyzw, cb0[3].yyyy
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  12: mad r0.xyzw, cb2[3].xyzw, r0.wwww, r1.xyzw
  13: mul r1.x, cb1[0].w, l(0.500000)
  14: mad r1.x, r0.y, l(0.500000), r1.x
  15: sincos r1.x, null, r1.x
  16: add r0.x, r0.x, r1.x
  17: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  18: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  19: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  20: mad o1.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  21: mov o2.xz, v1.xxzx
  22: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers
Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _Color1 at 32
  Float _AuraPower1 at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float       
// SV_POSITION              0   xyzw        1      POS   float       
// NORMAL                   0   xyz         2     NONE   float   x z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_input_ps linear v2.xz
      dcl_output o0.xyzw
      dcl_temps 1
   0: mul r0.x, v2.z, v2.x
   1: mul o0.w, |r0.x|, cb0[3].x
   2: mov o0.xyz, cb0[2].xyzx
   3: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //         d3d9: 43 math
 //        d3d11: 20 math
 // Stats for Fragment shader:
 //         d3d9: 3 math
 //        d3d11: 2 math
 Pass {
  Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Opaque" }
  ZWrite Off
  Blend SrcAlpha OneMinusSrcAlpha
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d9":
// Stats: 43 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Float _Frequency2 at 13
Vector4 _MainTex_ST at 10
Float _Scale2 at 11
Float _Size2 at 9
Float _Speed2 at 12
Vector4 _Time at 8

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float _Frequency2;
//   float4 _MainTex_ST;
//   float _Scale2;
//   float _Size2;
//   float _Speed2;
//   float4 _Time;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_ObjectToWorld c0       4
//   unity_MatrixVP      c4       4
//   _Time               c8       1
//   _Size2              c9       1
//   _MainTex_ST         c10      1
//   _Scale2             c11      1
//   _Speed2             c12      1
//   _Frequency2         c13      1
//

    vs_3_0
    def c14, 0.159154937, 0.5, 6.28318548, -3.14159274
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_texcoord o0.xy
    dcl_position o1
    dcl_normal o2.xyz
    add r0.x, v0.z, v0.x
    mov r0.w, c8.w
    mul r0.y, r0.w, c12.x
    mad r0.x, r0.y, c13.x, r0.x
    mad r0.x, r0.x, c14.x, c14.y
    frc r0.x, r0.x
    mad r0.x, r0.x, c14.z, c14.w
    sincos r1.y, r0.x
    mad o2.y, c11.x, r1.y, v1.y
    mad r1.y, c11.x, r1.y, v0.y
    mov r1.xzw, v0
    mul r1, r1, c9.x
    dp4 r0.x, c0, r1
    dp4 r0.z, c2, r1
    dp4 r2.y, c1, r1
    dp4 r2.w, c3, r1
    mul r0.y, r0.w, c14.y
    mad r0.y, r2.y, c14.y, r0.y
    mad r0.y, r0.y, c14.x, c14.y
    frc r0.y, r0.y
    mad r0.y, r0.y, c14.z, c14.w
    sincos r1.y, r0.y
    add r2.xz, r0, r1.y
    dp4 r3.x, c4, r2
    dp4 r3.y, c5, r2
    dp4 r3.z, c6, r2
    dp4 r3.w, c7, r2
    mad o0.xy, v2, c10, c10.zwzw
    mov o2.xz, v1
    mad o1.xy, r3.w, c255, r3
    mov o1.zw, r3

// approximately 45 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 3 math
Float _AuraPower2 at 1
Vector4 _Color2 at 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float _AuraPower2;
//   float4 _Color2;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   _Color2      c0       1
//   _AuraPower2  c1       1
//

    ps_3_0
    dcl_normal v0.xz
    mul r0.x, v0.z, v0.x
    mul_pp oC0.w, r0_abs.x, c1.x
    mov_pp oC0.xyz, c0

// approximately 3 instruction slots used


-- Vertex shader for "d3d11":
// Stats: 20 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Float _Size2 at 52
  Vector4 _MainTex_ST at 64
  Float _Scale2 at 80
  Float _Speed2 at 84
  Float _Frequency2 at 88
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _Time at 0
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// SV_POSITION              0   xyzw        1      POS   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_output o0.xy
      dcl_output_siv o1.xyzw, position
      dcl_output o2.xyz
      dcl_temps 2
   0: mad o0.xy, v2.xyxx, cb0[4].xyxx, cb0[4].zwzz
   1: add r0.x, v0.z, v0.x
   2: mul r0.y, cb0[5].y, cb1[0].w
   3: mad r0.x, r0.y, cb0[5].z, r0.x
   4: sincos r0.x, null, r0.x
   5: mad r1.y, cb0[5].x, r0.x, v0.y
   6: mad o2.y, cb0[5].x, r0.x, v1.y
   7: mov r1.xzw, v0.xxzw
   8: mul r0.xyzw, r1.xyzw, cb0[3].yyyy
   9: mul r1.xyzw, r0.yyyy, cb2[1].xyzw
  10: mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
  11: mad r1.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
  12: mad r0.xyzw, cb2[3].xyzw, r0.wwww, r1.xyzw
  13: mul r1.x, cb1[0].w, l(0.500000)
  14: mad r1.x, r0.y, l(0.500000), r1.x
  15: sincos r1.x, null, r1.x
  16: add r0.xz, r0.xxzx, r1.xxxx
  17: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
  18: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
  19: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
  20: mad o1.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
  21: mov o2.xz, v1.xxzx
  22: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 2 math, 1 temp registers
Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _Color2 at 32
  Float _AuraPower2 at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float       
// SV_POSITION              0   xyzw        1      POS   float       
// NORMAL                   0   xyz         2     NONE   float   x z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[4], immediateIndexed
      dcl_input_ps linear v2.xz
      dcl_output o0.xyzw
      dcl_temps 1
   0: mul r0.x, v2.z, v2.x
   1: mul o0.w, |r0.x|, cb0[3].x
   2: mov o0.xyz, cb0[2].xyzx
   3: ret 
// Approximately 0 instruction slots used


 }
 UsePass "Legacy Shaders/VertexLit/SHADOWCASTER"
}
Fallback "Diffuse"
}